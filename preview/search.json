[{"path":"index.html","id":"welcome---this-is-a-draft","chapter":"Welcome - THIS IS A DRAFT","heading":"Welcome - THIS IS A DRAFT","text":"","code":""},{"path":"index.html","id":"about-this-handbook","chapter":"Welcome - THIS IS A DRAFT","heading":"About this handbook","text":"free open-access R reference book applied epidemiologists public health practitioners.book strives :Serve quick reference guide - textbookAddress common epidemiological problems via task-centered examplesBe accessible settings low internet-connectivity (link downloadable version)Contain clear simple language, step--step instructions helpful code annotationBe living document, growing adapting new best practicesWhat gaps book address?Many epidemiologists lack formal R training transitioning SAS, STATA, statistical software.R universe changes frequently - place best practice code catered toward common epidemiologist user.Epidemiologists often search dozens online forums answers, epidemiology-oriented.epidemiologists work low internet-connectivity environments limited technical support.different R books?handbook written epidemiologists, epidemiologists. approved product specific organization. Examples techniques adapted authors lived experience local, national, academic, emergency settings.book offered download-able format settings unreliable internet.addition core R skills book uses epidemiology-centered examples cover tasks like epidemic curves, transmission chains epidemic modeling, age sex pyramids, age sex standardization, probabilistic matching records, outbreak detection methods, survey analysis, causal diagrams, survival analysis, GIS basics, phylogenetic trees, missing data imputation, automated routine reports Rmarkdown, etc…","code":""},{"path":"index.html","id":"how-to-read-this-handbook","chapter":"Welcome - THIS IS A DRAFT","heading":"How to read this handbook","text":"Search via search box Table ContentsClick “clipboard” “copy” icon copy codeSee “Resources” section page links trainingClick download offline versionIf use handbook suggestions, let us know SURVEY LINK!","code":""},{"path":"index.html","id":"edit-or-contribute","chapter":"Welcome - THIS IS A DRAFT","heading":"Edit or contribute","text":"suggestions want contribute content, please post issue submit pull request github repository.","code":""},{"path":"index.html","id":"acknowledgements","chapter":"Welcome - THIS IS A DRAFT","heading":"Acknowledgements","text":"","code":""},{"path":"index.html","id":"contributors","chapter":"Welcome - THIS IS A DRAFT","heading":"Contributors","text":"handbook conceived, written, edited collaboration epidemiologists public health practitioners around world drawn upon experiences within constellation organizations including local/state/provincial/national health departments ministries, World Health Organization (), MSF (Medecins sans frontiers / Doctors without Borders), hospital systems, academic institutions.team members:Editor--Chief: Neale BatraCore team: Alex Spina, Amrish Baidjoe, Henry Laurenson-Schafer, Finlay Campbell, Pat KeatingAuthors (order contributions): Neale Batra, Alex Spina, Paula Blomquist, Finlay Campbell, Henry Laurenson-Schafer, Isaac Florence, Natalie Fischer, Daniel Molling, Liza Coyer, Jonny Polonski, Yurie Izawa, Sara HollisReviewers: …(list)…Advisers …(list)…","code":""},{"path":"index.html","id":"funding-and-programmatic-support","chapter":"Welcome - THIS IS A DRAFT","heading":"Funding and programmatic support","text":"handbook received funding via COVID-19 emergency capacity-building grant Training Programs Epidemiology Public Health Interventions Network (TEPHINET).Programmatic support provided EPIET Alumni Network (EAN).","code":""},{"path":"index.html","id":"inspiration","chapter":"Welcome - THIS IS A DRAFT","heading":"Inspiration","text":"multitude tutorials vignettes provided foundational knowledge development handbook content credited within respective pages.generally, following sources provided inspiration laid groundwork handbook:“R4Epis” project (collaboration MSF RECON)R Epidemics Consortium (RECON)R Data Science book (R4DS)bookdown: Authoring Books Technical Documents R MarkdownNetlify hosts website","code":""},{"path":"index.html","id":"image-credits","chapter":"Welcome - THIS IS A DRAFT","heading":"Image credits","text":"Logo (US CDC Public Health Image Library):2013 Yemen looking mosquito breeding sitesEbola virusSurvey Rajasthan","code":""},{"path":"index.html","id":"license-and-terms-of-use","chapter":"Welcome - THIS IS A DRAFT","heading":"License and Terms of Use","text":"handbook approved product specific organization.Although strive accuracy, provide guarantee content book.book licensed Creative Commons license TBD…","code":""},{"path":"survival-analysis.html","id":"survival-analysis","chapter":"1 Survival analysis","heading":"1 Survival analysis","text":"","code":""},{"path":"survival-analysis.html","id":"overview","chapter":"1 Survival analysis","heading":"1.1 Overview","text":"Survival analysis focuses describing given individual group individuals, defined point event called failure (occurrence disease, cure disease, death, relapse response treatment…) occurs period time called failure time (follow-time cohort/population-based studies) individuals observed. determine failure time, necessary define time origin (can inclusion date, date diagnosis…).target inference survival analysis time origin event.\r\ncurrent medical research, widely used clinical studies assess effect treatment instance, cancer epidemiology assess large variety cancer survival measures.usually expressed survival probability probability event interest occurred duration t.Censoring: Censoring occurs end follow-, individuals event interest, thus true time event unknown. mostly focus right censoring details censoring survival analysis general, can see references.","code":"\n#Add a figure from the following chunks for the last version of the page\n#do not forget to save the output figure in \"images\"\n# knitr::include_graphics(here::here(\"images\", \"survanalysis.png\"))"},{"path":"survival-analysis.html","id":"preparation","chapter":"1 Survival analysis","heading":"1.2 Preparation","text":"run survival analyses R, one widely used package survival package. first install load ot well packages used section:page explores survival analyses using linelist used previous pages apply changes proper survival data.","code":""},{"path":"survival-analysis.html","id":"loading-dataset","chapter":"1 Survival analysis","heading":"Loading dataset","text":"start loading linelist done previously using rio::import() function.","code":"\n# import linelist using the \"here\" function\n\nlinelist_case_data <- rio::import(here::here(\"data\", \"linelist_cleaned.rds\"))"},{"path":"survival-analysis.html","id":"data-management-and-transformation","chapter":"1 Survival analysis","heading":"Data management and transformation","text":"short survival data can described following three characteristics:dependent variable response waiting time occurrence well-defined event,observations censored, sense units event interest occurred time data analyzed, andthere predictors explanatory variables whose effect waiting time wish assess control.Thus, create different variables needed respect structure run survival analysis.define:event interest “death” (hence survival probability probability alive certain time time origin),follow-time (futime) time time onset time outcome days,censored patients recovered final outcome known ie event “death” observed (event=0).CAUTION: Since real cohort study, information time origin end follow-known given individuals observed, remove observations date onset date outcome unknown. Also cases date onset later date outcome removed since considered wrong.TIP: Given filtering greater (>) less (<) date can remove rows missing values, applying filter wrong dates also remove rows missing dates.create var age_cat another variable age_cat_small indicates reduces categories age groups 3.TIP: can verify new variables created summary futime cross-tabulation event outcome created. Besides verification good habit communicating median follow-time interpreting survival analysis results.can also cross-tabule variable age_cat_small gender details distribution new variable among gender groups. use stat.table() function Epi package.","code":"\n#create a new data called linelist_surv from the linelist_case_data\n\nlinelist_surv <-  linelist_case_data %>% \n  \n  \n  dplyr::filter(date_outcome > date_onset) %>% #remove observations with wrong or missing dates of onset or date of outcome\n  \n  dplyr::mutate(\n                  event = ifelse(is.na(outcome) | outcome == \"Recover\", 0, 1), #create the event var which is 1 if the patient died and 0 if he was right censored\n    \n                   futime = as.double(date_outcome - date_onset), #create the var on the follow-up time in days\n    \n                   age_cat_small = dplyr::case_when( #create a new age category variable with only 3 strata levels\n                     \n                      age_years < 5  ~ \"0-4\",\n                      age_years >= 5 & age_years < 20 ~ \"5-19\",\n                      age_years >= 20   ~ \"20+\"\n                      ),\n    \n                  age_cat_small = factor( #previous step created the var as character, encode it as factor and precise the levels. Note that the NA values remain NA's and are not put in a level \"unknown\" for example since in the next analyses they have to be removed.\n                    \n                      age_cat_small, \n                      levels = c(\"0-4\", \"5-19\", \"20+\")),\n\n    )\nsummary(linelist_surv$futime)##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \r\n##    1.00    6.00   10.00   11.92   16.00   64.00\n#cross tabulate the new event var and the outcome var from which it was created to make sure the code did what it was intended to\nwith(linelist_surv, \n     table(outcome, event, useNA = \"ifany\")\n     )##          event\r\n## outcome      0    1\r\n##   Death      0 2060\r\n##   Recover 1617    0\r\n##   <NA>    1075    0\n#cross tabulate the new age_cat_small var and the age_cat var from which it was created to make sure the code did what it was intended to\n\nwith(linelist_surv, \n     table(age_cat_small, age_cat, useNA = \"ifany\")\n     ) ##              age_cat\r\n## age_cat_small 0-4 5-9 10-14 15-19 20-29 30-49 50-69 70+ <NA>\r\n##          0-4  851   0     0     0     0     0     0   0    0\r\n##          5-19   0 899   733   619     0     0     0   0    0\r\n##          20+    0   0     0     0   904   583    85  10    0\r\n##          <NA>   0   0     0     0     0     0     0   0   68\n#print the 10 first observations of the linelist_surv data looking at specific variables (including those newly created)\n\nhead(linelist_surv[,c(\"case_id\", \"age_cat_small\", \"date_onset\",\"date_outcome\",\"outcome\",\"event\",\"futime\")], 10)##    case_id age_cat_small date_onset date_outcome outcome event futime\r\n## 1   a3c8b8           0-4 2014-05-08   2014-05-14 Recover     0      6\r\n## 2   8689b7           0-4 2014-05-13   2014-05-18 Recover     0      5\r\n## 3   11f8ea           20+ 2014-05-16   2014-05-30 Recover     0     14\r\n## 4   893f25           20+ 2014-05-21   2014-05-29 Recover     0      8\r\n## 5   be99c8          5-19 2014-05-22   2014-05-24 Recover     0      2\r\n## 6   d0523a           0-4 2014-05-24   2014-06-05    <NA>     0     12\r\n## 7   ce9c02           20+ 2014-05-27   2014-06-17   Death     1     21\r\n## 8   275cc7           0-4 2014-05-27   2014-06-07   Death     1     11\r\n## 9   07e3e8           20+ 2014-05-27   2014-06-01 Recover     0      5\r\n## 10  2b8773          5-19 2014-06-06   2014-06-16    <NA>     0     10\nEpi::stat.table( \n  #give variables for the cross tabulation\n  list(\n    gender, \n    age_cat_small\n    ),\n  \n  #precise the function you want to call (mean,count..)\n  list( \n    count(),\n    percent(age_cat_small)\n    ), \n  \n  #add margins\n  margins=T, \n  \n  #data used\n  data = linelist_surv \n  )##  ----------------------------------------- \r\n##          ----------age_cat_small---------- \r\n##  gender       0-4    5-19     20+   Total  \r\n##  ----------------------------------------- \r\n##  f            498    1273     500    2271  \r\n##              21.9    56.1    22.0   100.0  \r\n##                                            \r\n##  m            322     903    1029    2254  \r\n##              14.3    40.1    45.7   100.0  \r\n##                                            \r\n##                                            \r\n##  Total        851    2251    1582    4752  \r\n##              18.2    48.1    33.8   100.0  \r\n##  -----------------------------------------"},{"path":"survival-analysis.html","id":"basics-of-survival-analysis","chapter":"1 Survival analysis","heading":"1.3 Basics of survival analysis","text":"","code":""},{"path":"survival-analysis.html","id":"building-a-surv-type-object","chapter":"1 Survival analysis","heading":"Building a surv-type object","text":"first use Surv() build standard survival object form follow-time event variables.result step produce object type survival focuses time information precising whether event interest (death) observed. done using “+” time print survobj indicates right-censoring.","code":"\nsurvobj <- with(linelist_surv, \n                \n                survival::Surv(futime, event)\n                \n                )\n\n#print the 50 first elements of the vector to see how it presents\nhead(survobj,50)##  [1]  6+  5+ 14+  8+  2+ 12+ 21  11   5+ 10+  4  10+  3  10+ 11+  4   4  11  23+  4   9+ 14+  5+  9+  5  31+  8  11+ 13+\r\n## [30]  4  26+  7   6  14+  4  15  17+  8+ 18  12  14  12+  7   6+ 11  20+  2  22+  5   6+"},{"path":"survival-analysis.html","id":"running-initial-analyses","chapter":"1 Survival analysis","heading":"Running initial analyses","text":"start analysis using survfit() function produce survfit object, fits default calculations Kaplan Meier (KM) estimates overall (marginal) survival curve, fact step function jumps observed event times. final survfit object contains one survival curvesis created using Surv object response variable model formul.NOTE: Kaplan-Meier estimate nonparametric maximum likelihood estimate (MLE) survival function. . (see resources information).summary survfit object give called life table contains:time follow-(time) event happened ascending ordered,number people risk developing event (people event yet censored: n.risk),develop (n.event),, probability developing event (probability dying surviving past specific time ).Finally standard error confidence interval probability derived.using summary() can add option times precise specific times want see survival informationWe can also use print() function. print.rmean=TRUE argument used obtain mean survival time standard error (se).NOTE: restricted mean survival time (RMST) specific survival measure used cancer survival analysis often defined area survival curve given observe patients restricted time T: details resourcesTIP: can create surv object directly survfit() function save line code. give linelistsurv_quick <-  survfit(Surv(futime, event) ~ 1, data=linelist_surv). seen, case precise data variables time event taken .Besides summary() function, can also use str() function gives details structure survfit() object. Among details important one: cumhaz allows instance plot cumulative hazard, hazard instantaneous rate event occurrence (see references).","code":"\n#fit the KM estimates using the formula where the previously Surv object \"survobj\" is the response variable. \"~ 1\" precises we run the model for the overall survival.\n\nlinelistsurv_fit <-  survival::survfit(\n  survobj ~ 1\n  )\n\n#print its summary for more details\nsummary(linelistsurv_fit)## Call: survfit(formula = survobj ~ 1)\r\n## \r\n##  time n.risk n.event survival std.err lower 95% CI upper 95% CI\r\n##     1   4752      30    0.994 0.00115        0.991        0.996\r\n##     2   4713      76    0.978 0.00215        0.973        0.982\r\n##     3   4596     156    0.944 0.00333        0.938        0.951\r\n##     4   4365     209    0.899 0.00440        0.891        0.908\r\n##     5   4069     222    0.850 0.00525        0.840        0.861\r\n##     6   3744     217    0.801 0.00592        0.789        0.813\r\n##     7   3362     194    0.755 0.00644        0.742        0.767\r\n##     8   3019     178    0.710 0.00687        0.697        0.724\r\n##     9   2694     152    0.670 0.00721        0.656        0.684\r\n##    10   2402     113    0.639 0.00746        0.624        0.653\r\n##    11   2161     128    0.601 0.00773        0.586        0.616\r\n##    12   1911      96    0.571 0.00793        0.555        0.586\r\n##    13   1666      60    0.550 0.00808        0.534        0.566\r\n##    14   1497      44    0.534 0.00820        0.518        0.550\r\n##    15   1342      32    0.521 0.00831        0.505        0.538\r\n##    16   1193      48    0.500 0.00850        0.484        0.517\r\n##    17   1038      29    0.486 0.00865        0.470        0.503\r\n##    18    933      23    0.474 0.00879        0.457        0.492\r\n##    19    828       8    0.470 0.00886        0.453        0.487\r\n##    20    731       4    0.467 0.00890        0.450        0.485\r\n##    21    649      13    0.458 0.00909        0.440        0.476\r\n##    22    569       8    0.451 0.00925        0.434        0.470\r\n##    23    502       6    0.446 0.00939        0.428        0.465\r\n##    24    455       4    0.442 0.00951        0.424        0.461\r\n##    25    397       4    0.438 0.00967        0.419        0.457\r\n##    26    354       3    0.434 0.00983        0.415        0.454\r\n##    27    312       1    0.432 0.00989        0.413        0.452\r\n##    29    244       1    0.431 0.01001        0.411        0.451\r\n##    38     75       1    0.425 0.01141        0.403        0.448\n#print its summary at specific times\nsummary(\n  linelistsurv_fit,\n        times=c(5,10,20,30,60)\n        )## Call: survfit(formula = survobj ~ 1)\r\n## \r\n##  time n.risk n.event survival std.err lower 95% CI upper 95% CI\r\n##     5   4069     693    0.850 0.00525        0.840        0.861\r\n##    10   2402     854    0.639 0.00746        0.624        0.653\r\n##    20    731     472    0.467 0.00890        0.450        0.485\r\n##    30    219      40    0.431 0.01001        0.411        0.451\r\n##    60      2       1    0.425 0.01141        0.403        0.448\n#print the linelistsurv_fit object and ask for information on the mean survival time and its se. \nprint(\n  linelistsurv_fit, \n      print.rmean = TRUE\n      )## Call: survfit(formula = survobj ~ 1)\r\n## \r\n##          n     events     *rmean *se(rmean)     median    0.95LCL    0.95UCL \r\n##   4752.000   2060.000     32.870      0.525     17.000     16.000     18.000 \r\n##     * restricted mean with upper limit =  64\nprint(\n  str(linelistsurv_fit)\n      )## List of 16\r\n##  $ n        : int 4752\r\n##  $ time     : num [1:60] 1 2 3 4 5 6 7 8 9 10 ...\r\n##  $ n.risk   : num [1:60] 4752 4713 4596 4365 4069 ...\r\n##  $ n.event  : num [1:60] 30 76 156 209 222 217 194 178 152 113 ...\r\n##  $ n.censor : num [1:60] 9 41 75 87 103 165 149 147 140 128 ...\r\n##  $ surv     : num [1:60] 0.994 0.978 0.944 0.899 0.85 ...\r\n##  $ std.err  : num [1:60] 0.00116 0.00219 0.00353 0.0049 0.00618 ...\r\n##  $ cumhaz   : num [1:60] 0.00631 0.02244 0.05638 0.10426 0.15882 ...\r\n##  $ std.chaz : num [1:60] 0.00115 0.00218 0.00348 0.00481 0.00604 ...\r\n##  $ type     : chr \"right\"\r\n##  $ logse    : logi TRUE\r\n##  $ conf.int : num 0.95\r\n##  $ conf.type: chr \"log\"\r\n##  $ lower    : num [1:60] 0.991 0.973 0.938 0.891 0.84 ...\r\n##  $ upper    : num [1:60] 0.996 0.982 0.951 0.908 0.861 ...\r\n##  $ call     : language survfit(formula = survobj ~ 1)\r\n##  - attr(*, \"class\")= chr \"survfit\"\r\n## NULL"},{"path":"survival-analysis.html","id":"plotting-kaplan-meir-curves","chapter":"1 Survival analysis","heading":"Plotting Kaplan-Meir curves","text":"KM estimates fitted, can visualize probability alive time using basic plot() function draws -known “Kaplan-Meier curve”. words curve conventional illustration survival experience whole patient group.can easily verify follow-time min max curve.easy way interpret say time zero, participants still alive: survival probability 100%. decreases time patients die. proportion participants surviving past 60 days f-u around 40%.confidence interval KM estimates survival also plotted default can dismissed adding option conf.int=FALSE plot() command.Since event interest “death”, drawing curve describing complements survival proportions lead drawing cumulative mortality proportions.","code":"\nplot(linelistsurv_fit, \n     xlab = \"Days of follow-up\",    #xaxis label\n     ylab=\"Survival Probability\",   #yaxis label\n     main= \"Overall survival curve\" #figure title\n     )\nplot(\n     linelistsurv_fit,\n     xlab = \"Days of follow-up\",       \n     ylab=\"Survival Probability\",       \n     mark.time=TRUE,              #mark times of events to facilitate reading of the curve: a \"+\" sign is printed on the curve at every event\n     conf.int=FALSE,             #do not plot the confidence interval\n     main= \"Overall survival curve and cumulative mortality\"\n     )\n\n\n\n#draw an additional curve to the previous plot\nlines( \n      linelistsurv_fit, \n      lty=3,          #use a different line type to differenciate between the two curves and for legend clarity purposes\n      fun = \"event\", #draw the cumulative events instead of the survival \n      mark.time=FALSE, \n      conf.int=FALSE \n      )\n\n#add a legend to the plot\nlegend(\"topright\", #position of the legend in the plot\n       legend=c(\"Survival\",\"Cum. Mortality\"), #legend text \n       lty = c(1,3), #line types to use in the legend, should follow linetype used to draw the two curves\n       cex=.85, #factor that defines size of the legend text\n       bty = \"n\" #no box type to be drawn for the legend\n       )"},{"path":"survival-analysis.html","id":"comparison-of-survival-curves","chapter":"1 Survival analysis","heading":"1.4 Comparison of survival curves","text":"compare survival within different groups observed participants patients, might need first look respective survival curves run tests evaluate difference independent groups. comparison can concern groups based gender, age, treatment, comorbidity…","code":""},{"path":"survival-analysis.html","id":"log-rank-test","chapter":"1 Survival analysis","heading":"Log rank test","text":"log rank test popular test compares entire survival experience two independent groups can thought test whether survival curves identical (overlapping) (null hypothesis difference survival groups). survdiff() function survival package allows running log-rank test specify rho=0 (default). test results gives chi-square statistic along p-value since log rank statistic approximately distributed chi-square test statistic.first try compare survival curves gender group. , first try visualize (check whether two survival curves overlapping). new survfit object created slightly different formula. survdiff object created.see survival curve women one men overlap 15 days follow-women seem slightly better survival. Yet log-rank test gives enough evidence statistical difference survival women survival Men \\alpha= 0.05.packages allow illustrating survival curves different groups testing difference . Using ggsurvplot() function survminer package, can add curve print risk tables group well p-value log-rank test.find back p-value found previous step.CAUTION: survminer functions require since latest versions, specifying data used fit survival object. Remember avoid non-specific error messages. can look difference source contamination. case, Log rank test gives enough evidence difference survival probabilities \\alpha= 0.005.\r\nsurvival probabilities patients got infected funerals higher survival probabilities patients got infected places, suggesting survival benefit.","code":"\n#create the new survfit object based on gender\nlinelistsurv_fit_sex <-  survfit(\n  \n              Surv(futime, event) ~ gender, #formula to create the survival curve: ~ gender indicates we no longer plot the overall survival but based on gender\n              data = linelist_surv #data to use \n              )\n\n\n#plot the survival curves by gender: have a look at the order of the strata level in the gender var before defining your colors\ncol_sex <- c(\"lightgreen\", \"darkgreen\")\n\nplot(linelistsurv_fit_sex,\n     col=col_sex,\n     xlab = \"Days of follow-up\", \n     ylab=\"Survival Probability\"\n     )\n\nlegend(\"topright\", \n       legend=c(\"Female\",\"Male\"), \n       col =col_sex,\n       lty = 1, cex=.9, bty = \"n\" \n       )\n#compute the test of the difference between the survival curves\nsurvival::survdiff(\n          Surv(futime, event) ~ gender, \n          data = linelist_surv\n         )## Call:\r\n## survival::survdiff(formula = Surv(futime, event) ~ gender, data = linelist_surv)\r\n## \r\n## n=4525, 227 observations deleted due to missingness.\r\n## \r\n##             N Observed Expected (O-E)^2/E (O-E)^2/V\r\n## gender=f 2271      997      977     0.425     0.882\r\n## gender=m 2254      980     1000     0.415     0.882\r\n## \r\n##  Chisq= 0.9  on 1 degrees of freedom, p= 0.3\nsurvminer::ggsurvplot(\n  \n    linelistsurv_fit_sex, \n    data= linelist_surv, #precise again the data used to fit the linelistsurv_fit_sex even though it is already precised in that object\n    conf.int = F, #do not show confidence interval of KM estimates\n    surv.scale = \"percent\",  #present probabilities in the y axis in %\n    break.time.by=10, #present the time axis with an increment of 10 days\n    xlab = \"Follow-up days\", ylab= \"Survival Probability\",\n    pval=T, pval.coord= c(40,.91),  #print p-value of Log-rank test and at the position with these coordinates\n    risk.table=T,  #print the risk table \n    legend.title = \"Gender\",\n    legend.labs = c(\"Female\",\"Male\"), font.legend = 10, #legend characteristics\n    palette = \"Dark2\", #existing palette name precised,\n    surv.median.line = \"hv\", #draw a line to the median survival\n    ggtheme = theme_light()\n)## Warning: Vectorized input to `element_text()` is not officially supported.\r\n## Results may be unexpected or may change in future versions of ggplot2.\nlinelistsurv_fit_source <-  survfit(\n              Surv(futime, event) ~ source,\n              data = linelist_surv\n              )\n\nggsurvplot( \n      linelistsurv_fit_source, data= linelist_surv,\n      size=1, linetype = \"strata\",\n      conf.int = T, \n      surv.scale = \"percent\",  \n      break.time.by=10, \n      xlab = \"Follow-up days\", ylab= \"Survival Probability\",\n      pval=T, pval.coord= c(40,.91),  \n      risk.table=T,\n      legend.title = \"Source of \\ninfection\", legend.labs = c(\"Funeral\",\"Other\"), \n      font.legend = 10,\n      palette = c(\"#E7B800\",\"#3E606F\"),\n      surv.median.line = \"hv\", \n      ggtheme = theme_light()\n)## Warning: Vectorized input to `element_text()` is not officially supported.\r\n## Results may be unexpected or may change in future versions of ggplot2."},{"path":"survival-analysis.html","id":"cox-regression-analysis","chapter":"1 Survival analysis","heading":"1.5 Cox regression analysis","text":"Cox proportional hazards regression one popular regression techniques survival analysis. models can also used since Cox model requires important assumptions need verified appropriate use proportional hazards assumption: see references.Cox proportional hazards regression model, measure effect hazard rate (HR), risk failure (risk death example), given participant survived specific time. Usually, interested comparing independent groups respect hazards, use hazard ratio, analogous odds ratio setting multiple logistic regression analysis. cox.ph() survival package used fit model.\r\nfunction cox.zph() survival package may used test proportional hazards assumption Cox regression model fit.NOTE: probability must lie range 0 1. However, hazard represents expected number events per one unit time.hazard ratio predictor close 1 predictor affect survival,HR less 1, predictor protective (.e., associated improved survival),HR greater 1, predictor associated increased risk (decreased survival).","code":""},{"path":"survival-analysis.html","id":"fitting-a-cox-model","chapter":"1 Survival analysis","heading":"Fitting a Cox model","text":"can first fit model assess effect age gender survival. just printing model, information :estimated regression coefficients (coef) quantifies association predictors outcome,exponential (interpretability, exp(coef)) produces hazard ratio,standard error (se(coef)),z-score: many standard errors estimated coefficient away 0,p-value: propability estimated coefficient 0.summary() function applied cox model object gives info confidence interval estimated HR different test scores.effect first covariate gender presented first row. genderm printed stating first strata level (“f”) .e female group reference group gender. Thus interpretation test parameter men compared women. p-value indicates enough evidence effect gender expected hazard association gender -cause mortality.lack evidence noted regarding age-group.interesting run model look results first look verify whether proportional hazards assumptions respected help saving time.NOTE: second argument called method can specified computing cox model. determines ties handled. default “efron”, options “breslow” “exact”.another model add risk factors source infection number days date onset admission. time, first verify proportional hazards assumption going forward.model, included continuous predictor (days_onset_hosp). case interpret parameter estimates increase expected log relative hazard one unit increase predictor, holding predictors constant. first verify proportional hazards assumption. graphical verification assumption may performed function ggcoxzph() survminer package.model results indicates negative association onset admission duration -cause mortality. expected hazard 0.9 times lower person one day later admitted another, holding gender constant. straightforward explanation, one unit increase duration onset admission associated 10.7% (coef *100) decrease risk death.Results show also positive association source infection -cause mortality. say increased risk death (1.21x) patients got source infection funerals.","code":"\n#fitting the cox model\nlinelistsurv_cox_sexage <-  survival::coxph(\n              Surv(futime, event) ~ gender + age_cat_small, \n              data = linelist_surv\n              )\n\n\n#printing the model fitted\nlinelistsurv_cox_sexage## Call:\r\n## survival::coxph(formula = Surv(futime, event) ~ gender + age_cat_small, \r\n##     data = linelist_surv)\r\n## \r\n##                       coef exp(coef) se(coef)      z     p\r\n## genderm           -0.02993   0.97051  0.04641 -0.645 0.519\r\n## age_cat_small5-19 -0.08032   0.92282  0.06104 -1.316 0.188\r\n## age_cat_small20+  -0.09948   0.90531  0.06608 -1.506 0.132\r\n## \r\n## Likelihood ratio test=3.26  on 3 df, p=0.3536\r\n## n= 4525, number of events= 1977 \r\n##    (227 observations deleted due to missingness)\n#summary of the model\nsummary(linelistsurv_cox_sexage)## Call:\r\n## survival::coxph(formula = Surv(futime, event) ~ gender + age_cat_small, \r\n##     data = linelist_surv)\r\n## \r\n##   n= 4525, number of events= 1977 \r\n##    (227 observations deleted due to missingness)\r\n## \r\n##                       coef exp(coef) se(coef)      z Pr(>|z|)\r\n## genderm           -0.02993   0.97051  0.04641 -0.645    0.519\r\n## age_cat_small5-19 -0.08032   0.92282  0.06104 -1.316    0.188\r\n## age_cat_small20+  -0.09948   0.90531  0.06608 -1.506    0.132\r\n## \r\n##                   exp(coef) exp(-coef) lower .95 upper .95\r\n## genderm              0.9705      1.030    0.8861     1.063\r\n## age_cat_small5-19    0.9228      1.084    0.8188     1.040\r\n## age_cat_small20+     0.9053      1.105    0.7953     1.030\r\n## \r\n## Concordance= 0.511  (se = 0.007 )\r\n## Likelihood ratio test= 3.26  on 3 df,   p=0.4\r\n## Wald test            = 3.3  on 3 df,   p=0.3\r\n## Score (logrank) test = 3.3  on 3 df,   p=0.3\ntest_ph_sexage <- survival::cox.zph(linelistsurv_cox_sexage)\ntest_ph_sexage##               chisq df    p\r\n## gender        0.198  1 0.66\r\n## age_cat_small 0.224  2 0.89\r\n## GLOBAL        0.348  3 0.95\n#fit the model\nlinelistsurv_cox <-  coxph(\n                        Surv(futime, event) ~ gender + age_years+ source + days_onset_hosp,\n                        data = linelist_surv\n                        )\n\n\n#test the proportional hazard model\nlinelistsurv_ph_test <- cox.zph(linelistsurv_cox)\nlinelistsurv_ph_test##                  chisq df       p\r\n## gender           0.242  1   0.623\r\n## age_years        0.360  1   0.548\r\n## source           2.817  1   0.093\r\n## days_onset_hosp 34.395  1 4.5e-09\r\n## GLOBAL          37.990  4 1.1e-07\nsurvminer::ggcoxzph(linelistsurv_ph_test)\n#print the summary of the model\nsummary(linelistsurv_cox)## Call:\r\n## coxph(formula = Surv(futime, event) ~ gender + age_years + source + \r\n##     days_onset_hosp, data = linelist_surv)\r\n## \r\n##   n= 2904, number of events= 1266 \r\n##    (1848 observations deleted due to missingness)\r\n## \r\n##                      coef exp(coef)  se(coef)      z Pr(>|z|)    \r\n## genderm          0.008327  1.008362  0.058255  0.143   0.8863    \r\n## age_years       -0.005077  0.994936  0.002373 -2.140   0.0324 *  \r\n## sourceother      0.197069  1.217828  0.082123  2.400   0.0164 *  \r\n## days_onset_hosp -0.114057  0.892207  0.014294 -7.979 1.47e-15 ***\r\n## ---\r\n## Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r\n## \r\n##                 exp(coef) exp(-coef) lower .95 upper .95\r\n## genderm            1.0084     0.9917    0.8996    1.1303\r\n## age_years          0.9949     1.0051    0.9903    0.9996\r\n## sourceother        1.2178     0.8211    1.0368    1.4305\r\n## days_onset_hosp    0.8922     1.1208    0.8676    0.9176\r\n## \r\n## Concordance= 0.573  (se = 0.008 )\r\n## Likelihood ratio test= 89.67  on 4 df,   p=<2e-16\r\n## Wald test            = 73.91  on 4 df,   p=3e-15\r\n## Score (logrank) test = 74.35  on 4 df,   p=3e-15"},{"path":"survival-analysis.html","id":"forest-plots","chapter":"1 Survival analysis","heading":"Forest plots","text":"can visualize results cox model using practical forest plots ggforest() function survminer package.","code":"\nggforest(linelistsurv_cox, data = linelist_surv)"},{"path":"survival-analysis.html","id":"resources","chapter":"1 Survival analysis","heading":"1.6 Resources","text":"Survival Analysis Part : Basic concepts first analysesSurvival analysis infectious disease research: Describing events timeChapter advanced survival models PrincetonSurvival analysis cheatsheet RSurvminer cheastsheetPaper different survival measures cancer registry data Rcode provided supplementary materials","code":""}]

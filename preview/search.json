[{"path":"index.html","id":"welcome","chapter":"Welcome","heading":"Welcome","text":"","code":""},{"path":"index.html","id":"about-this-handbook","chapter":"Welcome","heading":"About this handbook","text":"free open-source R reference guide intended applied epidemiologists.book strives :Serve quick reference guide - textbookAddress common epidemiological problems via task-centered examplesBe accessible settings limited technical support low internet-connectivity (downloadable version)Contain clear simple language, step--step instructions many commentsBe living document, growing adapting new best practicesWhat gaps book address?Many epidemiologists formal training R data science, transitioning R SAS, STATA, statistical software.R universe changes frequently - place best practice code catered toward common epidemiologist user.Epidemiologists often must read dozens online forum pages answers, epidemiology-oriented.epidemiologists work low internet-connectivity environments limited technical support.different R books?handbook written epidemiologists, epidemiologists. Examples taken lived experience local, national, academic, emergency settings. Finally, also offered download-able format bring settings unreliable internet.\r\naddition core R concepts tools, book covers:epidemic curvestransmission chains performing epidemic modelingage pyramidsage sex standardizationoutbreak detection methodssurvey analysiscausal diagramssurvival analysisGIS basicsphylogenetic treesroutinized reports Rmarkdown","code":""},{"path":"index.html","id":"how-to-read-this-handbook","chapter":"Welcome","heading":"How to read this handbook","text":"Search via search box Table ContentsClick “clipboard” “copy” icon copy codeSee “Resources” section page links trainingClick download offline versionIf use handbook suggestions, let us know SURVEY LINK!","code":""},{"path":"index.html","id":"edit-or-contribute","chapter":"Welcome","heading":"Edit or contribute","text":"suggestions want contribute content, please post issue github repository.","code":""},{"path":"index.html","id":"acknowledgements","chapter":"Welcome","heading":"Acknowledgements","text":"","code":""},{"path":"index.html","id":"contributors","chapter":"Welcome","heading":"Contributors","text":"handbook collaborative team production; conceived, written, edited epidemiologists public health practitioners around world. team members:Editor--Chief:Editorial core team: …(list)…Authors: …(list)…Reviewers: …(list)…Advisers …(list)…","code":""},{"path":"index.html","id":"funding-and-programmatic-support","chapter":"Welcome","heading":"Funding and programmatic support","text":"Training Programs Epidemiology Public Health Interventions Network (TEPHINET)EPIET Alumni Network (EAN)","code":""},{"path":"index.html","id":"data-sources","chapter":"Welcome","heading":"Data sources","text":"linelist used much handbook adapted simulated Ebola outbreak linelist outbreaks package","code":""},{"path":"index.html","id":"inspiration","chapter":"Welcome","heading":"Inspiration","text":"“R4Epis” project (collaboration MSF RECON)R Epidemics Consortium (RECON)R Data Science book (R4DS)bookdown: Authoring Books Technical Documents R Markdown\r\nspecific tutorials vignettes credited relevant pages","code":""},{"path":"index.html","id":"image-credits","chapter":"Welcome","heading":"Image credits","text":"Logo: CDC Public Health Image library, R Graph Gallery2013 Yemen looking mosquito breeding sitesEbola virusSurvey RajasthanNetwork","code":""},{"path":"index.html","id":"license-and-terms-of-use","chapter":"Welcome","heading":"License and Terms of Use","text":"Creative Commons license TBD…","code":""},{"path":"gis-basics.html","id":"gis-basics","chapter":"1 GIS basics","heading":"1 GIS basics","text":"","code":""},{"path":"gis-basics.html","id":"overview","chapter":"1 GIS basics","heading":"1.1 Overview","text":"Spatial aspects data can provide lot insights situation outbreak answer questions :current disease hotspots?hotspots changed time?access health facility? improvements needed?section, explore basic spatial data visualization methods using tmap ggplot2 packages.\r\nalso walk basic spatial data management querying methods sf package.Choropleth mapDensity heatmapHealth facility catchment area","code":""},{"path":"gis-basics.html","id":"preparation","chapter":"1 GIS basics","heading":"1.2 Preparation","text":"Load packages\r\nFirst, load packages required analysis:Sample case dataSierra Leone: Admin boundary shapefiles\r\nData downloaded HDX:\r\nhttps://data.humdata.org/dataset/sierra-leone--ad-min-level-boundariesSierra Leone: Population ADM3\r\nData downloaded HDX:\r\nhttps://data.humdata.org/dataset/sierra-leone-populationSierra Leone: Health facility data OpenStreetMap\r\nData downloaded HDX:\r\nhttps://data.humdata.org/dataset/hotosm_sierra_leone_health_facilities","code":"\npacman::p_load(rio,       # to import data\n               here,      # to locate files\n               tidyverse, # to clean, handle, and plot the data (includes ggplot2 package)\n               sf,  # to manage spatial data using a Simple Feature format\n               tmap,# to produce simple maps, works for both interactive and static maps\n               janitor, # to clean column names\n               OpenStreetMap # to add OSM basemap in ggplot map\n               )   ## Installing package into 'C:/Users/Neale/OneDrive - Neale Batra/Documents/R/win-library/4.0'\r\n## (as 'lib' is unspecified)## also installing the dependencies 'dichromat', 'tmaptools', 'stars', 'widgetframe', 'leafsync', 'leafem'## Warning: unable to access index for repository http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.0:\r\n##   cannot open URL 'http://www.stats.ox.ac.uk/pub/RWin/bin/windows/contrib/4.0/PACKAGES'## package 'dichromat' successfully unpacked and MD5 sums checked\r\n## package 'tmaptools' successfully unpacked and MD5 sums checked\r\n## package 'stars' successfully unpacked and MD5 sums checked\r\n## package 'widgetframe' successfully unpacked and MD5 sums checked\r\n## package 'leafsync' successfully unpacked and MD5 sums checked\r\n## package 'leafem' successfully unpacked and MD5 sums checked\r\n## package 'tmap' successfully unpacked and MD5 sums checked\r\n## \r\n## The downloaded binary packages are in\r\n##  C:\\Users\\Neale\\AppData\\Local\\Temp\\RtmpiEpw03\\downloaded_packages## \r\n## tmap installed## Warning: package 'tmap' was built under R version 4.0.3\n# import aggregated case counts of disease X\nlinelist <- rio::import(here::here(\"data\", \"linelist_cleaned.rds\"))  \n\n# Create sf object\nlinelist_sf <- \n     linelist %>%\n     st_as_sf(coords = c(\"lon\", \"lat\"), crs = 4326)\n# ADM3 level\nsle_adm3 <- \n  sf::read_sf(here::here(\"data/shp\", \"sle_adm3.shp\")) %>% janitor::clean_names()\n\n# ADM4 level\nsle_adm4 <-\n  sf::read_sf(here::here(\"data/shp\", \"sle_adm4.shp\")) %>% janitor::clean_names()\n# Population by ADM3\nsle_adm3_pop <- \n     read.csv(here::here(\"data/population\", \"sle_admpop_adm3_2020.csv\")) %>% janitor::clean_names()\n# OSM health facility shapefile\nsle_hf <- \n        sf::read_sf(here::here(\"data/shp\", \"sle_hf.shp\")) %>%\n        janitor::clean_names() %>%\n        filter(amenity %in% c(\"hospital\", \"clinic\", \"doctors\"))"},{"path":"gis-basics.html","id":"sub-tab-1","chapter":"1 GIS basics","heading":"1.2.1 sub-tab 1","text":"Can used separate major steps data preparation. Re-name needed.","code":""},{"path":"gis-basics.html","id":"sub-tab-2","chapter":"1 GIS basics","heading":"1.2.2 sub-tab 2","text":"Can used separate major steps data preparation. Re-name needed.","code":""},{"path":"gis-basics.html","id":"plotting-coordinates","chapter":"1 GIS basics","heading":"1.3 Plotting coordinates","text":"easiest way plot XY coordinates (points) draw map directly sf object created preparation section.tmap offers simple mapping capabilities static (plot mode) interactive (view mode) just lines codes.blog provides good comparison among different mapping options R.\r\nhttps://rstudio-pubs-static.s3.amazonaws.com/324400_69a673183ba449e9af4011b1eeb456b9.html","code":"\ntmap_mode(\"view\") # or \"plot\"## tmap mode set to interactive viewing\ntm_shape(linelist_sf) + tm_dots(size=0.1, col='blue') +\ntm_shape(sle_adm4) + tm_borders(col = \"#686868\", lwd = 2) +\ntm_shape(sle_adm3) + tm_borders(col = \"#000000\", lwd = 3)"},{"path":"gis-basics.html","id":"polygons-and-shapefiles","chapter":"1 GIS basics","heading":"1.4 polygons and shapefiles","text":"Choropleth maps can useful visualize data pre-defined area usually administrative unit health area outbreak response able target resources specific area high incidence rates example.current linelist data contain information administrative units.\r\nAlthough ideal store information initial data collection phase, can also assign administrative units individual cases based spatial relationships (.e. point intersects polygon).sf package offers various methods spatial joins.\r\nSee documentation st_join method spatial join types :\r\nhttps://r-spatial.github.io/sf/reference/geos_binary_pred.htmlSpatial assign administrative units cases\r\nFirst spatially intersect case locations (points) ADM4 boundaries (polygons)19 cases get assigned administrative unit polygons cover areas points located ocean.\r\nSee red points map .can assign cases nearest ADM4 polygon time instead intersecting.Merge cases administrative units.Case counts ADM3Choropleth mapping\r\nNow administrative unit names assigned cases, can start mapping case counts area (choropleth maps).Since also population data ADM3, can add information case_adm3 table created previously.Join table ADM3 polygons mappingMapping results","code":"\ncase_adm <- \n     linelist_sf %>%\n     sf::st_join(sle_adm4,   join = st_intersects) %>%\n     select(names(linelist_sf), admin4name, admin4pcod, admin3name, admin3pcod)## although coordinates are longitude/latitude, st_intersects assumes that they are planar\r\n## although coordinates are longitude/latitude, st_intersects assumes that they are planar\n# Now you will see the ADM3-4 names attached to each case\ncase_adm %>% select(case_id, admin4name, admin3name)## Simple feature collection with 6464 features and 3 fields\r\n## geometry type:  POINT\r\n## dimension:      XY\r\n## bbox:           xmin: -13.27276 ymin: 8.446206 xmax: -13.20522 ymax: 8.491748\r\n## geographic CRS: WGS 84\r\n## First 10 features:\r\n##    case_id         admin4name     admin3name                   geometry\r\n## 1   6c286a George Brook (Dwor        West II POINT (-13.23112 8.464776)\r\n## 2   a3c8b8         Sorie Town      Central I POINT (-13.22319 8.473251)\r\n## 3   d8a13d George Brook (Dwor        West II POINT (-13.23547 8.462768)\r\n## 4   72b905          Leicester Mountain Rural POINT (-13.21226 8.468384)\r\n## 5   be99c8          Leicester Mountain Rural POINT (-13.22263 8.461831)\r\n## 6   566f9e         Cline Town         East I POINT (-13.21294 8.483315)\r\n## 7   ce9c02         Sorie Town      Central I POINT (-13.22437 8.470248)\r\n## 8   acf422 Pipeline/Wilkinson       West III   POINT (-13.2689 8.47846)\r\n## 9   275cc7 George Brook (Dwor        West II POINT (-13.23694 8.469161)\r\n## 10  dbebea         Fourah Bay         East I POINT (-13.21647 8.486664)\ncase_noadm <- \n     case_adm %>% \n     filter(is.na(admin3name)) %>%\n     select(names(linelist_sf))\n\ntmap_mode(\"view\") # or \"plot\"## tmap mode set to interactive viewing\ntm_shape(linelist_sf) + tm_dots(size=0.1, col='blue') +\ntm_shape(case_noadm) + tm_dots(size=0.1, col='red') +\ntm_shape(sle_adm3) + tm_borders(col = \"#000000\", lwd = 3)\ncase_noadm_nearest <-\n     case_noadm %>%\n     st_join(sle_adm4, join=st_nearest_feature) %>%\n     select(names(linelist_sf), admin4name, admin4pcod, admin3name, admin3pcod)## although coordinates are longitude/latitude, st_nearest_points assumes that they are planar\ncase_noadm_nearest %>% select(case_id, admin4name, admin3name)## Simple feature collection with 19 features and 3 fields\r\n## geometry type:  POINT\r\n## dimension:      XY\r\n## bbox:           xmin: -13.25822 ymin: 8.484561 xmax: -13.23782 ymax: 8.490315\r\n## geographic CRS: WGS 84\r\n## First 10 features:\r\n##    case_id         admin4name admin3name                   geometry\r\n## 1   858426         Congo Town    West II POINT (-13.25699 8.485965)\r\n## 2   42b86c         Congo Town    West II POINT (-13.25563 8.485687)\r\n## 3   6b53e9 Connaught Hospital Central II POINT (-13.23869 8.489803)\r\n## 4   3593e1         Congo Town    West II POINT (-13.25577 8.485702)\r\n## 5   5fbfbf         Congo Town    West II POINT (-13.25547 8.484561)\r\n## 6   7b22fa Connaught Hospital Central II POINT (-13.23975 8.489089)\r\n## 7   bb9851         Congo Town    West II POINT (-13.25725 8.486155)\r\n## 8   da57be Connaught Hospital Central II POINT (-13.23782 8.490315)\r\n## 9   9f7775         Congo Town    West II POINT (-13.25693 8.486417)\r\n## 10  d5d522         Congo Town    West II POINT (-13.25581 8.484821)\nlinelist_adm <-\n     case_adm %>% filter(!is.na(admin3name)) %>%\n     bind_rows(case_noadm_nearest)\ncase_adm3 <-\n     linelist_adm %>% as_tibble() %>%\n     #filter(!is.na(admin3pcod)) %>%\n     group_by(admin3pcod, admin3name) %>%\n     summarise(cases = n()) %>%\n     arrange(desc(cases))## `summarise()` has grouped output by 'admin3pcod'. You can override using the `.groups` argument.\ncase_adm3## # A tibble: 9 x 3\r\n## # Groups:   admin3pcod [9]\r\n##   admin3pcod admin3name     cases\r\n##   <chr>      <chr>          <int>\r\n## 1 SL040102   Mountain Rural  1830\r\n## 2 SL040208   West III        1459\r\n## 3 SL040207   West II         1176\r\n## 4 SL040204   East II          711\r\n## 5 SL040201   Central I        386\r\n## 6 SL040203   East I           361\r\n## 7 SL040206   West I           261\r\n## 8 SL040202   Central II       149\r\n## 9 SL040205   East III         131\n# Add population data and calculate cases per 10K population\ncase_adm3 <-\n     case_adm3 %>%\n     left_join(sle_adm3_pop, by=c(\"admin3pcod\"=\"adm3_pcode\")) %>%\n     select(names(case_adm3), total) %>%\n     mutate(case_10kpop = round(cases/total * 10000, 3))\n\ncase_adm3## # A tibble: 9 x 5\r\n## # Groups:   admin3pcod [9]\r\n##   admin3pcod admin3name     cases  total case_10kpop\r\n##   <chr>      <chr>          <int>  <int>       <dbl>\r\n## 1 SL040102   Mountain Rural  1830  33993      538.  \r\n## 2 SL040208   West III        1459 210252       69.4 \r\n## 3 SL040207   West II         1176 145109       81.0 \r\n## 4 SL040204   East II          711  99821       71.2 \r\n## 5 SL040201   Central I        386  69683       55.4 \r\n## 6 SL040203   East I           361  68284       52.9 \r\n## 7 SL040206   West I           261  60186       43.4 \r\n## 8 SL040202   Central II       149  23874       62.4 \r\n## 9 SL040205   East III         131 500134        2.62\n# Add population data and calculate cases per 10K population\ncase_adm3_sf <-\n        case_adm3 %>%\n        left_join(sle_adm3, by=\"admin3pcod\") %>%\n        select(objectid, admin3pcod, admin3name=admin3name.x, admin2name, admin1name,\n               cases, total, case_10kpop, geometry) %>%\n        st_as_sf()\n# Number of cases\ntmap_mode(\"plot\")## tmap mode set to plotting\ntm_shape(case_adm3_sf) + \n        tm_polygons(\"cases\") +\n        tm_text(\"admin3name\")\n# Cases per 10K population\ntmap_mode(\"plot\")## tmap mode set to plotting\ntm_shape(case_adm3_sf) + \n        tm_polygons(\"case_10kpop\",\n                    breaks=c(0, 10, 50, 100, 500),\n                    palette = \"Purples\"\n                    ) +\n        tm_text(\"admin3name\")## Warning: Values have found that are higher than the highest break"},{"path":"gis-basics.html","id":"time-series-heatmap","chapter":"1 GIS basics","heading":"1.5 Time series heatmap","text":"can also look combination time space facetting heatmaps.Set parameters basemap using OpenStreetMap package.Cumulative heatmapHeatmap month onset","code":"\n# Fit basemap by range of lat/long coordinates. Choose tile type\nmap <- openmap(c(max(linelist$lat, na.rm=T), max(linelist$lon, na.rm=T)),  # limits of tile\n               c(min(linelist$lat, na.rm=T), min(linelist$lon, na.rm=T)),\n               zoom = NULL,\n               type = c(\"osm\", \"stamen-toner\", \"stamen-terrain\",\"stamen-watercolor\", \"esri\",\"esri-topo\")[1],\n               mergeTiles = TRUE)## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded ellps WGS 84 in CRS definition: +proj=merc +a=6378137 +b=6378137\r\n## +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs +type=crs## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded datum World Geodetic System 1984 in CRS definition## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded ellps WGS 84 in CRS definition: +proj=merc +a=6378137 +b=6378137\r\n## +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs +type=crs## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded datum World Geodetic System 1984 in CRS definition## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded ellps WGS 84 in CRS definition: +proj=merc +a=6378137 +b=6378137\r\n## +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs +type=crs## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded datum World Geodetic System 1984 in CRS definition## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded ellps WGS 84 in CRS definition: +proj=merc +a=6378137 +b=6378137\r\n## +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs +type=crs## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded datum World Geodetic System 1984 in CRS definition## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded ellps WGS 84 in CRS definition: +proj=merc +a=6378137 +b=6378137\r\n## +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs +type=crs## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded datum World Geodetic System 1984 in CRS definition## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded ellps WGS 84 in CRS definition: +proj=merc +a=6378137 +b=6378137\r\n## +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs +type=crs## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded datum World Geodetic System 1984 in CRS definition## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded ellps WGS 84 in CRS definition: +proj=merc +a=6378137 +b=6378137\r\n## +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs +type=crs## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded datum World Geodetic System 1984 in CRS definition## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded ellps WGS 84 in CRS definition: +proj=merc +a=6378137 +b=6378137\r\n## +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs +type=crs## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded datum World Geodetic System 1984 in CRS definition## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded ellps WGS 84 in CRS definition: +proj=merc +a=6378137 +b=6378137\r\n## +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs +type=crs## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded datum World Geodetic System 1984 in CRS definition## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded ellps WGS 84 in CRS definition: +proj=merc +a=6378137 +b=6378137\r\n## +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs +type=crs## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded datum World Geodetic System 1984 in CRS definition## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded ellps WGS 84 in CRS definition: +proj=merc +a=6378137 +b=6378137\r\n## +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs +type=crs## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded datum World Geodetic System 1984 in CRS definition## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded ellps WGS 84 in CRS definition: +proj=merc +a=6378137 +b=6378137\r\n## +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs +type=crs## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded datum World Geodetic System 1984 in CRS definition## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded ellps WGS 84 in CRS definition: +proj=merc +a=6378137 +b=6378137\r\n## +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs +type=crs## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded datum World Geodetic System 1984 in CRS definition## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded ellps WGS 84 in CRS definition: +proj=merc +a=6378137 +b=6378137\r\n## +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs +type=crs## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded datum World Geodetic System 1984 in CRS definition## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded ellps WGS 84 in CRS definition: +proj=merc +a=6378137 +b=6378137\r\n## +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs +type=crs## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded datum World Geodetic System 1984 in CRS definition## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded ellps WGS 84 in CRS definition: +proj=merc +a=6378137 +b=6378137\r\n## +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs +type=crs## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded datum World Geodetic System 1984 in CRS definition## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded ellps WGS 84 in CRS definition: +proj=merc +a=6378137 +b=6378137\r\n## +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs +type=crs## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded datum World Geodetic System 1984 in CRS definition\n# Projection WGS84\nmap.latlon <- openproj(map, projection = \"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs\")\n# Plot map. Must be autoplotted to work with ggplot\nOpenStreetMap::autoplot.OpenStreetMap(map.latlon)+\n        # Density tiles  \n        ggplot2::stat_density_2d(aes(x = lon,\n                                     y = lat,\n                                     fill = ..level..,\n                                     alpha=..level..),\n                                 bins = 10,\n                                 geom = \"polygon\",\n                                 contour_var = \"count\",\n                                 data = linelist %>% filter(date_onset>='2014-07-01' & date_onset<='2015-02-28'),\n                                 show.legend = F) +\n        #scale_fill_gradient(low = \"black\", high = \"red\")+\n        labs(x = \"Longitude\",\n             y = \"Latitude\",\n             title = \"Distribution of simulated cases\")\n# Extract month of onset\nlinelist$date_onset_ym <- format(linelist$date_onset, \"%Y-%m\")\n\n# Simply facet above map by month of onset\n# Plot map. Must be autoplotted to work with ggplot\nOpenStreetMap::autoplot.OpenStreetMap(map.latlon)+\n        # Density tiles  \n        ggplot2::stat_density_2d(aes(x = lon,\n                                     y = lat,\n                                     fill = ..level..,\n                                     alpha=..level..),\n                                 bins = 10,\n                                 geom = \"polygon\",\n                                 contour_var = \"count\",\n                                 data = linelist %>% filter(date_onset>='2014-07-01' & date_onset<='2015-02-28'),\n                                 show.legend = F) +\n        #scale_fill_gradient(low = \"black\", high = \"red\")+\n        labs(x = \"Longitude\",\n             y = \"Latitude\",\n             title = \"Distribution of simulated cases by month of onset\") +\n        facet_wrap(~ date_onset_ym, ncol = 4)"},{"path":"gis-basics.html","id":"health-facility-catchment-area","chapter":"1 GIS basics","heading":"1.6 Health facility catchment area","text":"might useful know health facilities located relation disease hot spots.Finding nearest health facility\r\ncan use st_nearest_feature method sf package assign cloest health facility individual cases.can see “Den Clinic” closest health facility ~30% cases.Visualizing results mapCases within 30 mins Walking distance closest health facilityWe can also explore many cases located within 2.5km (~30 mins) walking distance closest health facility.Note:\r\naccurate distance calculations, better re-project sf object respective local map projection system UTM (Earth projected onto planar surface).\r\nexample, simplicity stick World Geodetic System (WGS84) Geograhpic coordinate system (Earth represented spherical / round surface, therefore units decimal degrees). use general conversion : 1 decimal degree = ~111km.See information map projections coordinate systems:\r\nhttps://www.esri.com/arcgis-blog/products/arcgis-pro/mapping/gcs_vs_pcs/First create circular buffer radius ~2.5km aroudn health facilityIntersect casesCount results1225 5888 cases (20.8%, shown red dots map ) live 30 mins away nearest health facility)Visualize results","code":"\n# Closet health facility to each case\nlinelist_sf_hf <-\n        linelist_sf %>%\n        st_join(sle_hf,   join = st_nearest_feature) %>%\n        select(case_id, osm_id, name, amenity)## although coordinates are longitude/latitude, st_nearest_points assumes that they are planar\n# Group cases by health facility\nhf_catchment <-\n        linelist_sf_hf %>% as.data.frame() %>%\n        group_by(name) %>%\n        summarise(case_n = n()) %>%\n        arrange(desc(case_n))\n\nhf_catchment## # A tibble: 8 x 2\r\n##   name                                  case_n\r\n##   <chr>                                  <int>\r\n## 1 Den Clinic                              2336\r\n## 2 Shriners Hospitals for Children         2124\r\n## 3 GINER HALL COMMUNITY HOSPITAL           1120\r\n## 4 panasonic                                329\r\n## 5 Princess Christian Maternity Hospital    223\r\n## 6 ARAB EGYPT CLINIC                        145\r\n## 7 <NA>                                      97\r\n## 8 MABELL HEALTH CENTER                      90\ntmap_mode(\"view\")## tmap mode set to interactive viewing\ntm_shape(linelist_sf_hf) + tm_dots(size=0.1, col='name') +\n        tm_shape(sle_hf) + tm_dots(size=0.3, col='red') + tm_text(\"name\")\nsle_hf_2k <-\n        sle_hf %>%\n        st_buffer(dist=0.02) # approximately 2.5km ## Warning in st_buffer.sfc(st_geometry(x), dist, nQuadSegs, endCapStyle = endCapStyle, : st_buffer does not correctly buffer longitude/latitude data## dist is assumed to be in decimal degrees (arc_degrees).\n# Intersect the cases with the buffers\nlinelist_sf_hf_2k <-\n        linelist_sf_hf %>%\n        st_join(sle_hf_2k, join = st_intersects, left = TRUE) %>%\n        filter(osm_id.x==osm_id.y | is.na(osm_id.y)) %>%\n        select(case_id, osm_id.x, name.x, amenity.x, osm_id.y)## although coordinates are longitude/latitude, st_intersects assumes that they are planar\r\n## although coordinates are longitude/latitude, st_intersects assumes that they are planar\nnrow(linelist_sf_hf_2k)## [1] 6464\nnrow(linelist_sf_hf_2k[is.na(linelist_sf_hf_2k$osm_id.y),])## [1] 1345\ntmap_mode(\"view\")## tmap mode set to interactive viewing\ntm_shape(linelist_sf_hf) + tm_dots(size=0.08, col='name') +\n        tm_shape(sle_hf_2k) + tm_borders(col = \"red\", lwd = 2) +\n        tm_shape(linelist_sf_hf_2k[is.na(linelist_sf_hf_2k$osm_id.y),]) +tm_dots(size=0.1, col='red')"},{"path":"gis-basics.html","id":"resources","chapter":"1 GIS basics","heading":"1.7 Resources","text":"R Simple Features sf package\r\nhttps://cran.r-project.org/web/packages/sf/vignettes/sf1.htmlR Simple Features sf package\r\nhttps://cran.r-project.org/web/packages/sf/vignettes/sf1.htmlR tmap package\r\nhttps://cran.r-project.org/web/packages/tmap/vignettes/tmap-getstarted.htmlR tmap package\r\nhttps://cran.r-project.org/web/packages/tmap/vignettes/tmap-getstarted.htmlggmap: Spatial Visualization ggplot2\r\nhttps://journal.r-project.org/archive/2013-1/kahle-wickham.pdfggmap: Spatial Visualization ggplot2\r\nhttps://journal.r-project.org/archive/2013-1/kahle-wickham.pdf","code":""}]

[{"path":"index.html","id":"the-epidemiologist-r-handbook","chapter":"The Epidemiologist R Handbook","heading":"The Epidemiologist R Handbook","text":"DRAFT.REVIEWING BOOK, PLEASE PROVIDE FEEDBACK PAGE LINK","code":""},{"path":"index.html","id":"about-this-handbook","chapter":"The Epidemiologist R Handbook","heading":"About this handbook","text":"free open-access R reference manual applied epidemiologists public health practitioners.book strives :Serve quick reference manual - textbook comprehensive R trainingAddress common epidemiological problems via task-centered examplesBe accessible settings low internet-connectivity via (**downloadable version**)gaps book address?Many epidemiologists transitioning R SAS, STATA, SPSS, Excel, softwareLet’s avoid hours online searching repository best-practice code common epi userEpidemiologists sometimes work low internet-connectivity environments limited supportHow different R books?written epidemiologists, epidemiologists - leveraging experience local, national, academic, emergency settingsIt provides examples epidemic curves, transmission chains, epidemic modeling projections, age sex pyramids standardization, record matching, outbreak detection, survey analysis, causal diagrams, survival analysis, GIS basics, phylogenetic trees, automated reports, etc…","code":""},{"path":"index.html","id":"how-to-read-this-handbook","chapter":"The Epidemiologist R Handbook","heading":"How to read this handbook","text":"Search via search box Table ContentsClick “copy” icons copy codeSee “Resources” section page resources","code":""},{"path":"index.html","id":"edit-or-contribute","chapter":"The Epidemiologist R Handbook","heading":"Edit or contribute","text":"welcome feedback comments survey LINK.want directly contribute modify content, please post issue submit pull request github repository.","code":""},{"path":"index.html","id":"acknowledgements","chapter":"The Epidemiologist R Handbook","heading":"Acknowledgements","text":"","code":""},{"path":"index.html","id":"contributors","chapter":"The Epidemiologist R Handbook","heading":"Contributors","text":"book conceived, written, edited collaboration epidemiologists around world draw upon experiences constellation organizations including local/state/provincial/national health departments ministries, World Health Organization (), MSF (Medecins sans frontiers / Doctors without Borders), hospital systems, academic institutions.Editor--Chief: Neale BatraCore team: Neale Batra, Alex Spina, Amrish Baidjoe, Henry Laurenson-Schafer, Finlay Campbell, Pat KeatingAuthors (order contributions): Neale Batra, Alex Spina, Paula Blomquist, Finlay Campbell, Henry Laurenson-Schafer, Isaac Florence, Natalie Fischer, Daniel Molling, Liza Coyer, Jonny Polonski, Yurie Izawa, Sara Hollis, Isha BerryReviewers: …(list)…Advisers …(list)…","code":""},{"path":"index.html","id":"funding-and-programmatic-support","chapter":"The Epidemiologist R Handbook","heading":"Funding and programmatic support","text":"handbook received funding via COVID-19 emergency capacity-building grant Training Programs Epidemiology Public Health Interventions Network (TEPHINET).Programmatic support provided EPIET Alumni Network (EAN).","code":""},{"path":"index.html","id":"inspiration","chapter":"The Epidemiologist R Handbook","heading":"Inspiration","text":"multitude tutorials vignettes provided foundational knowledge development handbook content credited within respective pages.generally, following sources provided inspiration laid groundwork handbook:“R4Epis” project (collaboration MSF RECON)R Epidemics Consortium (RECON)R Data Science book (R4DS)bookdown: Authoring Books Technical Documents R MarkdownNetlify hosts website","code":""},{"path":"index.html","id":"image-credits","chapter":"The Epidemiologist R Handbook","heading":"Image credits","text":"Logo (US CDC Public Health Image Library):2013 Yemen looking mosquito breeding sitesEbola virusSurvey Rajasthan","code":""},{"path":"index.html","id":"license-and-terms-of-use","chapter":"The Epidemiologist R Handbook","heading":"License and Terms of Use","text":"handbook approved product specific organization.Although strive accuracy, provide guarantee content book.work licensed Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.","code":""},{"path":"phylogenetic-trees.html","id":"phylogenetic-trees","chapter":"1 Phylogenetic trees","heading":"1 Phylogenetic trees","text":"","code":""},{"path":"phylogenetic-trees.html","id":"overview","chapter":"1 Phylogenetic trees","heading":"1.1 Overview","text":"Phylogenetic trees used visualize describe relatedness evolution organisms based sequence genetic code. can constructed genetic sequences using distance-based methods (neighbor-joining method) character-based methods (maximum likelihood Bayesian Markov Chain Monte Carlo method). Next-generation sequencing (NGS) become affordable becoming widely used public health describe pathogens causing infectious diseases. Portable devices decrease turn around time make data available support outbreak investigation real-time. NGS data can used identify origin source outbreak strain propagation, well determine presence antimicrobial resistance genes. visualize genetic relatedness samples phylogenetic tree constructed. page learn use ggtree() package, allows combination phylogenetic trees additional sample data form dataframe order help observe patterns improve understanding outbreak dynamic.","code":""},{"path":"phylogenetic-trees.html","id":"preparation","chapter":"1 Phylogenetic trees","heading":"1.2 Preparation","text":"code chunk shows loading required packages:several different formats phylogenetic tree can stored (eg. Newick, NEXUS, Phylip). common one, also use example Newick file format (.nwk), standard representing trees computer-readable form. means, entire tree can expressed string format “((t2:0.04,t1:0.34):0.89,(t5:0.37,(t4:0.03,t3:0.67):0.9):0.59);” listing nodes tips relationship (branch length) .important understand phylogenetic tree file contain sequencing data, merely result distances sequences. therefore extract sequencing data tree file.use ape() package import phylogenetic tree file store list object class “phylo”. inspect tree object see contains 299 tips (samples) 236 nodes.Second import table additional information sequenced sample gender, country origin attributes antimicrobial resistance:first 30 rows data:clean inspect data: order assign correct sample data phylogenetic tree, Sample_IDs sample_data file need match tip.labels tree file:Upon inspection can see format sample_ID dataframe corresponds format sample names tree tips. sorted order matched.ready go!","code":"\n# load/install packages\npacman::p_load(here, ggplot2, dplyr, ape, ggtree, treeio, ggnewscale)\n# read in the tree: we use the here package to specify the location of our R project and data files:\ntree <- ape::read.tree(here::here(\"data\", \"Shigella_tree.nwk\"))\n\n# inspect the tree file:\ntree## \r\n## Phylogenetic tree with 299 tips and 236 internal nodes.\r\n## \r\n## Tip labels:\r\n##   SRR5006072, SRR4192106, S18BD07865, S18BD00489, S17BD08906, S17BD05939, ...\r\n## Node labels:\r\n##   17, 29, 100, 67, 100, 100, ...\r\n## \r\n## Rooted; includes branch lengths.\n# We read in a csv file into a dataframe format:\nsample_data <- read.csv(\"sample_data_Shigella_tree.csv\", sep = \",\", na.strings = c(\"NA\"), head = TRUE, stringsAsFactors=F)\n# We clean the data: we select certain columns to be protected from cleaning in order to main tain their formating (eg. for the sample names, as they have to match the names in the phylogenetic tree file)\n#sample_data <- linelist::clean_data(sample_data, protect = c(1, 3:5)) \n\n# We check the formatting of the tip labels in the tree file: \n\nhead(tree$tip.label) # these are the sample names in the tree - we inspect the first 6 with head()## [1] \"SRR5006072\" \"SRR4192106\" \"S18BD07865\" \"S18BD00489\" \"S17BD08906\" \"S17BD05939\"\n# We make sure the first column in our dataframe are the Sample_IDs:\ncolnames(sample_data)   ##  [1] \"Sample_ID\"                  \"serotype\"                   \"Country\"                    \"Continent\"                 \r\n##  [5] \"Travel_history\"             \"Year\"                       \"Belgium\"                    \"Source\"                    \r\n##  [9] \"Gender\"                     \"gyrA_mutations\"             \"macrolide_resistance_genes\" \"MIC_AZM\"                   \r\n## [13] \"MIC_CIP\"\n# We look at the sample_IDs in the dataframe to make sure the formatting is the same than in the tip.labels (eg. letters are all capital, no extra _ between letters and numbers etc.)\nhead(sample_data$Sample_ID) # we inspect only the first 6 using head()## [1] \"S17BD05944\" \"S15BD07413\" \"S18BD07247\" \"S19BD07384\" \"S18BD07338\" \"S18BD02657\""},{"path":"phylogenetic-trees.html","id":"simple-tree-visualization","chapter":"1 Phylogenetic trees","heading":"1.3 Simple tree visualization","text":"","code":""},{"path":"phylogenetic-trees.html","id":"different-tree-layouts","chapter":"1 Phylogenetic trees","heading":"Different tree layouts","text":"ggtree() offers many different layout formats may suitable specific purpose others:","code":"\n# Examples:\nggtree(tree) # most simple linear tree\nggtree(tree,  branch.length = \"none\") # most simple linear tree with all tips aligned\nggtree(tree, layout=\"circular\") # most simple circular tree\nggtree(tree, layout=\"circular\", branch.length = \"none\") # most simple circular tree with all tips aligned\n\n# for other options see online: http://yulab-smu.top/treedata-book/chapter4.html"},{"path":"phylogenetic-trees.html","id":"simple-tree-with-addition-of-sample-data","chapter":"1 Phylogenetic trees","heading":"Simple tree with addition of sample data","text":"easy annotation tree addition sample names tips, well coloring tip points desired branches:","code":"\n# A: Plot Circular tree:\nggtree(tree, layout=\"circular\", branch.length='none') %<+% sample_data + # the %<+% is used to add your dataframe with sample data to the tree\n  aes(color=I(Belgium))+     # color the branches according to a variable in your dataframe\n  scale_color_manual(\n    name = \"Sample Origin\",  # name of your color scheme (will show up in the legend like this)\n    breaks = c(\"Yes\", \"No\"), # the different options in your variable\n    labels = c(\"NRCSS Belgium\", \"Other\"), # how you want the different options named in your legend, allows for formatting\n    values= c(\"blue\", \"grey\"),            # the color you want to assign to the variable if its \"nrc_bel\"\n    na.value=\"grey\")+     # for the NA values we choose the color grey\n  new_scale_color()+      # allows to add an additional color scheme for another variable\n     geom_tippoint(       # color the tip point by continent, you may change shape adding \"shape = \"\n       aes(color=Continent),\n       size=1.5)+ \n  scale_color_brewer(\n    name = \"Continent\",   # name of your color scheme (will show up in the legend like this)\n    palette=\"Set1\",       # we choose a premade set of colors coming with the brewer package\n    na.value=\"grey\")+     # for the NA values we choose the color grey\n  geom_tiplab(            # add the name of the sample to the tip of its branch (you can add as many text lines as you like with the + , you just need to change the offset value to place them next to each other)\n    color='black',\n    offset = 1,\n    size = 1,\n    geom = \"text\",\n    align=TRUE)+ \n  ggtitle(\"Phylogenetic tree of Shigella sonnei\")+ # title of your graph\n  theme(\n    axis.title.x=element_blank(), # removes x-axis title\n    axis.title.y=element_blank(), # removes y-axis title\n    legend.title=element_text(face=\"bold\", size =12),  # defines font size and format of the legend title\n    legend.text=element_text(face=\"bold\", size =10),   # defines font size and format of the legend text\n    plot.title = element_text(size =12, face=\"bold\"),  # defines font size and format of the plot title\n    legend.position=\"bottom\", # defines placement of the legend\n    legend.box=\"vertical\",\n    legend.margin=margin())   # defines placement of the legend\n# Export your tree graph:\nggsave(here::here(\"images\", \"example_tree_circular_1.png\"), width = 12, height = 14)"},{"path":"phylogenetic-trees.html","id":"manipulation-of-phylogenetic-trees","chapter":"1 Phylogenetic trees","heading":"1.4 Manipulation of phylogenetic trees","text":"Sometimes may large phylogenetic tree interested one part tree. example produced tree including historical international samples get large overview dataset might fit bigger picture. look closer data want inspect portion bigger tree.Since phylogenetic tree file just output sequencing data analysis, can manipulate order nodes branches file . already determined previous analysis raw NGS data. able though zoom parts, hide parts seven subset part tree.","code":""},{"path":"phylogenetic-trees.html","id":"zooming-in-on-one-part-of-the-tree","chapter":"1 Phylogenetic trees","heading":"1.4.1 Zooming in on one part of the tree:","text":"don’t want “cut” tree, inspect part closely can zoom view specific part:want zoom branch sticking , node number 452 get closer look:","code":"\n# First we plot the whole tree:\np <- ggtree(tree,) %<+% sample_data +\n  geom_tiplab(size =1.5) + # labels the tips of all branche with the sample name in the tree file\n  geom_text2(aes(subset=!isTip, label=node), size =5, color = \"darkred\", hjust=1, vjust =1) # labels all the nodes in the tree\np\nviewClade(p , node=452)"},{"path":"phylogenetic-trees.html","id":"collapsing-one-part-of-the-tree","chapter":"1 Phylogenetic trees","heading":"1.4.2 Collapsing one part of the tree:","text":"way around may want ignore branch sticking can collapsing node (indicated blue square):","code":"\n#First we collapse at node 452\np_collapsed <- collapse(p, node=452)\n\n#To not forget that we collapsed this node we assign a symbol to it:\np_collapsed + geom_point2(aes(subset=(node == 452)), size=5, shape=23, fill=\"steelblue\")"},{"path":"phylogenetic-trees.html","id":"subsetting-a-tree","chapter":"1 Phylogenetic trees","heading":"Subsetting a tree","text":"want make permanent change create new tree work can subset part even save new newick tree file.can also save new tree Newick file:","code":"\n# To do so you can add the node and tip labels to your tree to see which part you want to subset:\nggtree(tree, branch.length='none', layout='circular') %<+% sample_data +\n  geom_tiplab(size =1) +       # labels the tips of all branche with the sample name in the tree file\n  geom_text2(                  # labels all the nodes in the tree\n    aes(subset = !isTip, label=node),\n    size = 3,\n    color = \"darkred\")+  \n theme(\n   legend.position = \"none\", # removes the legend all together\n   axis.title.x = element_blank(),\n   axis.title.y=element_blank(),\n   plot.title = element_text(size =12, face=\"bold\"))\n\n# A: Subset tree based on node:\nsub_tree1 <- tree_subset(\n  tree,\n  node = 528) # we subset the tree at node 528\n\n# lets have a look at the subset tree:\nggtree(sub_tree1)+\n  geom_tiplab(size = 3) +\n  ggtitle(\"Subset tree 1\")\n\n# B: Subset the same part of the tree based on a samplem in this case S17BD07692:\nsub_tree2 <- tree_subset(\n  tree,\n  \"S17BD07692\",\n  levels_back = 9) # levels back defines how many nodes backwards from the sample tip you want to go\n\n# lets have a look at the subset tree:\nggtree(sub_tree2)+\n  geom_tiplab(size = 3)+\n  ggtitle(\"Subset tree 2\")\nape::write.tree(sub_tree2, file='data/Shigelle_subtree_2.nwk')"},{"path":"phylogenetic-trees.html","id":"rotating-nodes-in-a-tree","chapter":"1 Phylogenetic trees","heading":"1.4.3 Rotating nodes in a tree:","text":"mentioned change order tips nodes tree, based genetic relatedness subject visual manipulation. can rote branches around nodes eases visualization.First plot new subsetted tree nodelabels choose node want manipulate:choose manipulate node number 39: applying ggtree::rotate() ggtree::fluip() indirectly node 36 node 39 moves bottom nodes 37 38 move top:","code":"\np <- ggtree(sub_tree2) +  geom_tiplab(size =4) +\n  geom_text2(aes(subset=!isTip, label=node), size =5, color = \"darkred\", hjust =1, vjust =1) # labels all the nodes in the tree\np\n# \n# p1 <- p + geom_hilight(39, \"steelblue\", extend =0.0015)+ # highlights the node 39 in blue\n#    geom_hilight(37, \"yellow\", extend =0.0015)  + # highlights the node 37 in yellow\n#   ggtitle(\"Original tree\")\n# \n# # we want to rotate node 36 so node 39 is on the bottom and nodes 37 and 38 move to the top:\n# # \n# rotate(p1, 39) %>% rotate(37)+\n#   ggtitle(\"Rotated Node 36\")\n# \n# # #or we can use the flip command to achieve the same thing:\n# flip(p1, 39, 37)"},{"path":"phylogenetic-trees.html","id":"example-subtree-with-sample-data-annotation","chapter":"1 Phylogenetic trees","heading":"1.4.4 Example subtree with sample data annotation:","text":"Lets say investigating cluster cases clonal expansion occured 2017 2018 node 39 sub-tree. add year strain isolation well travel history color country see origin closely related strains:observation points towards import strains Asia, circulated Belgium years seem caused latest outbreak.","code":"\n# Add sample data:\nggtree(sub_tree2) %<+% sample_data + \n   geom_tiplab(size =2.5, offset = 0.001, align = TRUE) + # labels the tips of all branche with the sample name in the tree file\n  theme_tree2()+\n  xlab(\"genetic distance\")+ # add a label to the x-azis\n  xlim(0, 0.015)+ # set the x-axis limits of our tree\n  geom_tippoint(aes(color=Country), size=1.5)+ # color the tip point by continent\n  scale_color_brewer(name = \"Country\", \n                       palette=\"Set1\", \n                     na.value=\"grey\")+\n    geom_tiplab(aes(label = Year), color='blue', offset = 0.0045, size = 3, linetype = \"blank\" , geom = \"text\" , align=TRUE)+ # add isolation year\n    geom_tiplab(aes(label = Travel_history), color='red', offset = 0.006, size = 3, linetype = \"blank\" , geom = \"text\" , align=TRUE)+ # add travel history\n  ggtitle(\"Phylogenetic tree of Belgian S. sonnei strains with travel history\")+ # add plot title\n  theme(axis.title.x=element_blank(),\n      axis.title.y=element_blank(),\n     legend.title=element_text(face=\"bold\", size =12),\n       legend.text=element_text(face=\"bold\", size =10),\n      plot.title = element_text(size =12, face=\"bold\"))"},{"path":"phylogenetic-trees.html","id":"more-complex-trees-adding-heatmaps-of-sample-data","chapter":"1 Phylogenetic trees","heading":"1.5 More complex trees: adding heatmaps of sample data","text":"can add complex information, categorical presence antimicrobial resistance genes numeric values actually measured resistance antimicrobials form heatmap using ggtree::gheatmap() function.First need plot tree (can either linear circular): use sub_stree part 3.)Second prepare data. visualize different variables new color schemes, subset dataframe desired variable.example want look gender mutations confer resistance ciprofloxacin:create first plot adding binary heatmap gender phylogenetic tree:add information ciprofloxacin resistance genes:Next add continuous data actual resistance determined laboratory\r\nminimum inhibitory concentration (MIC) ciprofloxacin :can exercise linear tree:","code":"\n# A: Circular tree:\np <- ggtree(sub_tree2, branch.length='none', layout='circular') %<+% sample_data +\n  geom_tiplab(size =3) + \n theme(legend.position = \"none\",\n axis.title.x=element_blank(),\n      axis.title.y=element_blank(),\n      plot.title = element_text(size =12, face=\"bold\",hjust = 0.5, vjust = -15))\np\n# Create your gender dataframe:\ngender <- data.frame(\"gender\" = sample_data[,c(\"Gender\")])\n# Its important to add the Sample_ID as rownames otherwise it cannot match the data to the tree tip.labels:\nrownames(gender) <- sample_data$Sample_ID\n\n# Create your ciprofloxacin dataframe based on mutations in the gyrA gene:\ncipR <- data.frame(\"cipR\" = sample_data[,c(\"gyrA_mutations\")])\nrownames(cipR) <- sample_data$Sample_ID\n\n# Create your ciprofloxacin dataframe based on the measured minimum inhibitory concentration (MIC) from the laboratory:\nMIC_Cip <- data.frame(\"mic_cip\" = sample_data[,c(\"MIC_CIP\")])\nrownames(MIC_Cip) <- sample_data$Sample_ID\n# First we add gender:\nh1 <-  gheatmap(p, gender, offset = 12, width=0.10, color=NULL, # offset shifts the heatmap to the right, width defines the width of the heatmap column, color defines the boarder of the heatmap columns\n         colnames = FALSE)+ # hides column names for the heatmap\n  scale_fill_manual(name = \"Gender\", # define the coloring scheme and legend for gender\n                    values = c(\"#00d1b1\", \"purple\"),\n                    breaks = c(\"Male\", \"Female\"),\n                    labels = c(\"Male\", \"Female\"))+\n   theme(legend.position=\"bottom\",\n        legend.title = element_text(size=12),\n        legend.text = element_text(size =10),\n        legend.box=\"vertical\", legend.margin=margin())\nh1\n# First we assigng a new color scheme to our existing plot, this enables us to define and change the colors for our second variable\nh2 <- h1 + new_scale_fill() \n\n# then we combine these into a new plot:\nh3 <- gheatmap(h2, cipR,  offset = 14, width=0.10, # adds the second row of heatmap describing ciprofloxacin resistance genes\n                colnames = FALSE)+\n  scale_fill_manual(name = \"Ciprofloxacin resistance \\n conferring mutation\",\n                    values = c(\"#fe9698\",\"#ea0c92\"),\n                    breaks = c( \"gyrA D87Y\", \"gyrA S83L\"),\n                    labels = c( \"gyrA d87y\", \"gyrA s83l\"))+\n   theme(legend.position=\"bottom\",\n        legend.title = element_text(size=12),\n        legend.text = element_text(size =10),\n        legend.box=\"vertical\", legend.margin=margin())+\n  guides(fill=guide_legend(nrow=2,byrow=TRUE))\nh3\n# First we add the new coloring scheme:\nh4 <- h3 + new_scale_fill()\n\n# then we combine the two into a new plot:\nh5 <- gheatmap(h4, MIC_Cip,  offset = 16, width=0.10,\n                colnames = FALSE)+\n  scale_fill_continuous(name = \"MIC for ciprofloxacin\",\n                      low = \"yellow\", high = \"red\",\n                      breaks = c(0, 0.50, 1.00),\n                      na.value = \"white\")+\n   guides(fill = guide_colourbar(barwidth = 5, barheight = 1))+\n   theme(legend.position=\"bottom\",\n        legend.title = element_text(size=12),\n        legend.text = element_text(size =10),\n        legend.box=\"vertical\", legend.margin=margin())\nh5\n# B: Lineartree:\np <- ggtree(sub_tree2) %<+% sample_data +\n  geom_tiplab(size =3) + # labels the tips\n  theme_tree2()+\n  xlab(\"genetic distance\")+\n  xlim(0, 0.015)+\n theme(legend.position = \"none\",\n      axis.title.y=element_blank(),\n      plot.title = element_text(size =12, face=\"bold\",hjust = 0.5, vjust = -15))\n\n\n# First we add gender:\n\nh1 <-  gheatmap(p, gender, offset = 0.003, width=0.1, color=\"black\", \n         colnames = FALSE)+\n  scale_fill_manual(name = \"Gender\",\n                    values = c(\"#00d1b1\", \"purple\"),\n                    breaks = c(\"Male\", \"Female\"),\n                    labels = c(\"Male\", \"Female\"))+\n   theme(legend.position=\"bottom\",\n        legend.title = element_text(size=12),\n        legend.text = element_text(size =10),\n        legend.box=\"vertical\", legend.margin=margin())\n# h1\n\n# Then we add ciprofloxacin after adding another colorscheme layer:\n\nh2 <- h1 + new_scale_fill()\nh3 <- gheatmap(h2, cipR,  offset = 0.004, width=0.1,color=\"black\",\n                colnames = FALSE)+\n  scale_fill_manual(name = \"Ciprofloxacin resistance \\n conferring mutation\",\n                    values = c(\"#fe9698\",\"#ea0c92\"),\n                    breaks = c( \"gyrA D87Y\", \"gyrA S83L\"),\n                    labels = c( \"gyrA d87y\", \"gyrA s83l\"))+\n   theme(legend.position=\"bottom\",\n        legend.title = element_text(size=12),\n        legend.text = element_text(size =10),\n        legend.box=\"vertical\", legend.margin=margin())+\n  guides(fill=guide_legend(nrow=2,byrow=TRUE))\n# h3\n\n# Then we add the minimum inhibitory concentration determined by the lab (MIC):\nh4 <- h3 + new_scale_fill()\nh5 <- gheatmap(h4, MIC_Cip, offset = 0.005, width=0.1, color=\"black\", \n                colnames = FALSE)+\n  scale_fill_continuous(name = \"MIC for ciprofloxacin\",\n                      low = \"yellow\", high = \"red\",\n                      breaks = c(0,0.50,1.00),\n                      na.value = \"white\")+\n   guides(fill = guide_colourbar(barwidth = 5, barheight = 1))+\n   theme(legend.position=\"bottom\",\n        legend.title = element_text(size=10),\n        legend.text = element_text(size =8),\n        legend.box=\"horizontal\", legend.margin=margin())+\n  guides(shape = guide_legend(override.aes = list(size = 2)))\nh5"},{"path":"phylogenetic-trees.html","id":"resources","chapter":"1 Phylogenetic trees","heading":"1.6 Resources","text":"http://hydrodictyon.eeb.uconn.edu/eebedia/index.php/Ggtree# Clade_Colors\r\nhttps://bioconductor.riken.jp/packages/3.2/bioc/vignettes/ggtree/inst/doc/treeManipulation.html\r\nhttps://guangchuangyu.github.io/ggtree-book/chapter-ggtree.html\r\nhttps://bioconductor.riken.jp/packages/3.8/bioc/vignettes/ggtree/inst/doc/treeManipulation.html","code":""}]

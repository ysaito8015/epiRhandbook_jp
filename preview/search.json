[{"path":"index.html","id":"section","chapter":"","heading":"","text":"DRAFT.REVIEWING BOOK, PLEASE PROVIDE FEEDBACK PAGE LINK","code":""},{"path":"index.html","id":"about-this-handbook","chapter":"","heading":"About this handbook","text":"open-access R reference manual applied epidemiologists public health practitioners.book strives :Serve quick R code reference manualProvide task-centered examples addressing common epidemiological problemsAssist epidemiologists transitioning R SAS, STATA, SPSS, ExcelBe accessible settings low internet-connectivity via offline version ([instructions ][Download book data])different R books?written epidemiologists, epidemiologists - leveraging experience local, national, academic, emergency settingsIt provides examples epidemic curves, transmission chains, epidemic modeling projections, age sex pyramids standardization, record matching, outbreak detection, survey analysis, causal diagrams, survival analysis, GIS basics, phylogenetic trees, automated reports, etc…","code":""},{"path":"index.html","id":"how-to-read-this-handbook","chapter":"","heading":"How to read this handbook","text":"Online versionSearch via search box Table ContentsClick “copy” icons copy codeSee “Resources” section page resourcesTo download data “follow-along”, see [Download book data] pageOffline versionTo download offline version, follow step--step instructions [Download book data] page.LanguagesWe actively seeking translate book languages English. can help, please contact us epiRhandbook@gmail.com.","code":""},{"path":"index.html","id":"edit-or-contribute","chapter":"","heading":"Edit or contribute","text":"Want share use book? Want offer fix addition?\r\nEmail us epiRhandbook@gmail.com. welcome comments suggestions.can also submit issue pull request Github repository, provide structured feedback via Google survey.","code":""},{"path":"index.html","id":"acknowledgements","chapter":"","heading":"Acknowledgements","text":"","code":""},{"path":"index.html","id":"contributors","chapter":"","heading":"Contributors","text":"book produced collaboration epidemiologists around world, drawing upon experiences organizations including local, state, provincial, national health departments ministries, World Health Organization (), MSF (Médecins Sans Frontières / Doctors without Borders), hospital systems, academic institutions.Editor--Chief: Neale BatraCore team: Neale Batra, Alex Spina, Amrish Baidjoe, Pat Keating, Henry Laurenson-Schafer, Finlay CampbellAuthors: Neale Batra, Alex Spina, Paula Blomquist, Finlay Campbell, Henry Laurenson-Schafer, Isaac Florence, Natalie Fischer, Aminata Ndiaye, Liza Coyer, Jonny Polonski, Yurie Izawa, Daniel Molling, Sara Hollis, Isha Berry, Wen LinReviewers:","code":""},{"path":"index.html","id":"funding-and-programmatic-support","chapter":"","heading":"Funding and programmatic support","text":"handbook approved product specific organization. Although strive accuracy, provide guarantee content book.handbook project received funding via COVID-19 emergency capacity-building grant Training Programs Epidemiology Public Health Interventions Network (TEPHINET). handbook supported Cooperative Agreement number NU2GGH001873, funded Centers Disease Control Prevention TEPHINET, program Task Force Global Health. contents solely responsibility authors necessarily represent official views Centers Disease Control Prevention, Department Health Human Services, Task Force Global Health, Inc. TEPHINET.Programmatic support provided EPIET Alumni Network (EAN) also MSF’s Manson Unit.","code":""},{"path":"index.html","id":"inspiration","chapter":"","heading":"Inspiration","text":"multitude tutorials vignettes provided knowledge development handbook content credited within respective pages.generally, following sources provided inspiration laid groundwork handbook:“R4Epis” project (collaboration MSF RECON)R Epidemics Consortium (RECON)R Data Science book (R4DS)bookdown: Authoring Books Technical Documents R MarkdownNetlify hosts website","code":""},{"path":"index.html","id":"image-credits","chapter":"","heading":"Image credits","text":"Images logo (US CDC Public Health Image Library):2013 Yemen looking mosquito breeding sitesEbola virusSurvey Rajasthan","code":""},{"path":"index.html","id":"terms-of-use-and-license","chapter":"","heading":"Terms of Use and License","text":"work licensed Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.","code":""},{"path":"routine-reports.html","id":"routine-reports","chapter":"1 Routine reports","heading":"1 Routine reports","text":"page cover reportfactory package. reportfactory package developed RECON (R Epidemics Consortium).reportfactory accompaniment using R Markdowns reports. built scenarios running routine reports (daily, weekly, etc.). makes easier organization compilation multiple R Markdown files outputs. essence, provides “factory” can run Rmd reports automatically get organized date- time-stamped folders outputs.","code":""},{"path":"routine-reports.html","id":"preparation","chapter":"1 Routine reports","heading":"1.1 Preparation","text":"","code":""},{"path":"routine-reports.html","id":"packages","chapter":"1 Routine reports","heading":"Packages","text":"begin, install /load reportfactory package CRAN.","code":"\npacman::p_load(reportfactory)"},{"path":"routine-reports.html","id":"r-project","chapter":"1 Routine reports","heading":"R project","text":"Open new R project, existing one. See page [R projects] instructions create R project. report factory live within R project., created R project called “demo_factory”. Currently files within project.","code":""},{"path":"routine-reports.html","id":"new-factory","chapter":"1 Routine reports","heading":"1.2 New factory","text":"Adding new report factory add self-contained folder R project. create factory within empty “demo_factory” R project. report factory called “new_factory” (default name - can changed).Within R project, load reportfactory package entering library(reportfactory) pacman::p_load(reportfactory) console.Run function new_factory(). factory added folder R project root folder default.see folder “new_factory” createdThere several defaults can change new_factory() command:factory = - can provide name factory folder. default shown : “new_factory”.path = - shown , can designate file path new factory. default current directory.report_sources = can provide alternate name folder holds R Markdown scripts create reports. default “report_sources”.outputs = can provide alternate name folder holds output reports. default “outputs”.See ?new_factory complete list function arguments.","code":"\n# This will create the factory folder in the current directory\nnew_factory()\n# Alternatively, you can specify that the factory be made at a specific file path\nnew_factory(path = \"C:/R handbook/demo_factory\")"},{"path":"routine-reports.html","id":"review-the-factory","chapter":"1 Routine reports","heading":"1.3 Review the factory","text":"Looking inside “new_factory” folder can see sub-folders created automatically. can adjust new_factory() command want sub-folders created.report_sources folder hold R Markdown scripts, generate reportsThe outputs folder report outputs (e.g. HTML, Word, PDF, etc.) - contain automatically-generated sub-folder organized report date-time stampThe scripts folder can used store R scripts can sourced/run R Markdown scripts (optional)data folder can used hold data (optional).file created, now can reference files sub-folders relation factory root folder (see [R projects] details package)gitignore file created case decide link Github repository (see [Collaboration Github])empty README markdown file created, assist using Github repositoryWithin R, can run command see structure (folders files) report factory.following “tree” factory’s folders files printed R console. can see sub-folders “raw” “clean” data, example CSV data. also “example_report.Rmd” “report_sources” folder.","code":"\nreportfactory::factory_overview()"},{"path":"routine-reports.html","id":"create-a-report","chapter":"1 Routine reports","heading":"1.4 Create a report","text":"purposes example, create new R markdown script entitled “daily_sitrep.Rmd” save within “report_sources” folder report factory. , case linelist imported “data” folder, summary tables epicurves printed report HTML output exported .csv .png files respectively.also added data report (“linelist_cleaned.rds”) “clean” sub-folder within “data” folder. new R Markdown script can source data following command. read importing data rio package package see page [Import export].screenshot beginning new R Markdown “daily_sitrep.Rmd”. can see output format set HTML, via YAML header output: html_document. Later report, commands :Print summary table cases, also exporting table .csv filePrint epicurve, also saving .png image fileWe can now see factory overview Rmd added “report_sources” data file added well (highlighted):","code":"\nlinelist <- import(here(\"data\", \"clean\", \"linelist_cleaned.rds\"))"},{"path":"routine-reports.html","id":"review","chapter":"1 Routine reports","heading":"1.5 Review","text":"can review R Markdown reports report_sources folder command:","code":"\nlist_reports()"},{"path":"routine-reports.html","id":"compile","chapter":"1 Routine reports","heading":"1.6 Compile","text":"report factory, “compile” R Markdown report means .Rmd rendered (HTML, Word, PDF, etc - however indicated YAML Rmd script). report factory auto-create date- time-stamped folder output “outputs” folder. output exported files (e.g. csv, png, xlsx, etc. saved folder. Rmd also saved folder, record version Rmd, moment.contrasts normal behavior rendered R Markdown, save location .Rmd. default behavior can result crowded, messy folders. report factory aims improve organization one needs run reports frequently.","code":""},{"path":"routine-reports.html","id":"compile-by-name","chapter":"1 Routine reports","heading":"Compile by name","text":"can compile specific report running compile_reports() providing name (without .rmd extension) reports =. , command compile “daily_sitrep.rmd” report, rendering HTML saving products date- time-stamped sub-folder specific report, within “outputs” folder.Note compile, see several files temporarily appear “report_sources” folder - soon disappear.","code":""},{"path":"routine-reports.html","id":"compile-by-number","chapter":"1 Routine reports","heading":"Compile by number","text":"can also specify Rmd compile feeding number vector numbers reports =. numbers must align order reports appear run list_reports().","code":"\n# Run the second and fourth Rmds in the \"report_sources\" folder\ncompile_reports(reports = c(2, 4))"},{"path":"routine-reports.html","id":"compile-from-sub-folder","chapter":"1 Routine reports","heading":"Compile from sub-folder","text":"can add sub-folders “report_sources” folder. run R Markdown report subfolder, simply provide name folder subfolder =. example code compile Rmd report lives sub_folder “report_sources”.","code":"\ncompile_reports(\n     reports = \"summary_for_partners.Rmd\",\n     subfolder = \"for_partners\")"},{"path":"routine-reports.html","id":"compile-all","chapter":"1 Routine reports","heading":"Compile all","text":"can compile R Markdown reports “report_sources” folder setting reports = argument TRUE.","code":""},{"path":"routine-reports.html","id":"parameterization","chapter":"1 Routine reports","heading":"Parameterization","text":"noted page [R Markdown], can run reports specified parameters. can pass parameters list compile_reports() via params = argument. example, fictional report three parameters provided R Markdown reports.","code":"\ncompile_reports(\n  reports = \"daily_sitrep.Rmd\",\n  params = list(most_recent_data = TRUE,\n                region = \"NORTHERN\",\n                rates_denominator = 10000),\n  subfolder = \"regional\"\n)"},{"path":"routine-reports.html","id":"outputs","chapter":"1 Routine reports","heading":"1.7 Outputs","text":"compiled reports times, “outputs” folder might look like (highlights added clarity):Folders created outputs Rmd reportSub-folders created unique compiling - folders date- time-stamped (“2021-04-07_T20-11-25” means 7th April 2021 20:11:25)Within date/time compiled folder, rendered output stored (HTML, PDF, Word, etc.) along Rmd exported files rendering (e.g. csv, png)","code":""},{"path":"routine-reports.html","id":"review-1","chapter":"1 Routine reports","heading":"1.8 Review","text":"can use list_outputs() review list outputs.","code":""},{"path":"routine-reports.html","id":"extras","chapter":"1 Routine reports","heading":"1.9 Extras","text":"reportfactory, can use function list_deps() list packages required across reports entire factory.reportfactory, can use function list_deps() list packages required across reports entire factory.accompanying package development called rfextras offers helper functions assist building reports, :\r\nload_scripts() - sources/loads .R scripts given folder (“scripts” folder default)\r\nfind_latest() - finds latest version file (e.g. latest dataset)\r\naccompanying package development called rfextras offers helper functions assist building reports, :load_scripts() - sources/loads .R scripts given folder (“scripts” folder default)find_latest() - finds latest version file (e.g. latest dataset)","code":""},{"path":"routine-reports.html","id":"resources","chapter":"1 Routine reports","heading":"1.10 Resources","text":"See reportfactory package’s Github pageSee rfextras package’s Github page","code":""}]

[{"path":"index.html","id":"welcome---this-is-a-draft","chapter":"Welcome - THIS IS A DRAFT","heading":"Welcome - THIS IS A DRAFT","text":"","code":""},{"path":"index.html","id":"about-this-handbook","chapter":"Welcome - THIS IS A DRAFT","heading":"About this handbook","text":"free open-access R reference book applied epidemiologists public health practitioners.book strives :Serve quick reference guide - textbookAddress common epidemiological problems via task-centered examplesBe accessible settings limited technical support low internet-connectivity (downloadable version)Contain clear simple language, step--step instructions helpful code annotationBe living document, growing adapting new best practicesWhat gaps book address?Many epidemiologists lack formal R training transitioning SAS, STATA, statistical software.R universe changes frequently - place best practice code catered toward common epidemiologist user.Epidemiologists often search dozens online forums answers, epidemiology-oriented.epidemiologists work low internet-connectivity environments limited technical support.different R books?handbook written epidemiologists, epidemiologists. approved product specific organization. Examples techniques adapted authors lived experience local, national, academic, emergency settings.book offered download-able format settings unreliable internet.addition core R skills book uses epidemiology-centered examples cover tasks like epidemic curves, transmission chains epidemic modeling, age sex pyramids, age sex standardization, probabilistic matching records, outbreak detection methods, survey analysis, causal diagrams, survival analysis, GIS basics, phylogenetic trees, missing data imputation, automated routine reports Rmarkdown, etc…","code":""},{"path":"index.html","id":"how-to-read-this-handbook","chapter":"Welcome - THIS IS A DRAFT","heading":"How to read this handbook","text":"Search via search box Table ContentsClick “clipboard” “copy” icon copy codeSee “Resources” section page links trainingClick download offline versionIf use handbook suggestions, let us know SURVEY LINK!","code":""},{"path":"index.html","id":"edit-or-contribute","chapter":"Welcome - THIS IS A DRAFT","heading":"Edit or contribute","text":"suggestions want contribute content, please post issue submit pull request github repository.","code":""},{"path":"index.html","id":"acknowledgements","chapter":"Welcome - THIS IS A DRAFT","heading":"Acknowledgements","text":"","code":""},{"path":"index.html","id":"contributors","chapter":"Welcome - THIS IS A DRAFT","heading":"Contributors","text":"handbook collaborative team production. conceived, written, edited epidemiologists public health practitioners around world, drawn upon experiences within constellation organizations including local/state/provincial/national health departments ministries, World Health Organization (), MSF (Medecins sans frontiers / Doctors without Borders), UNHCR, WFP, hospital systems, academic institutions.team members:Editor--Chief: Neale BatraEditorial core team: Alex Spina, Amrish Baidjoe, Henry Laurenson-Schafer, Finlay Campbell, Pat KeatingAuthors (order contributions): Neale Batra, Alex Spina, Paula Blomquist, Finlay Campbell, Henry Laurenson-Schafer, Isaac Florence, Natalie Fischer, Daniel Molling, Liza Coyer, Jonny Polonski, Yurie Izawa, Sara HollisReviewers: …(list)…Advisers …(list)…","code":""},{"path":"index.html","id":"funding-and-programmatic-support","chapter":"Welcome - THIS IS A DRAFT","heading":"Funding and programmatic support","text":"handbook received funding via COVID-19 emergency capacity-building grant Training Programs Epidemiology Public Health Interventions Network (TEPHINET).Programmatic support provided EPIET Alumni Network (EAN).","code":""},{"path":"index.html","id":"inspiration","chapter":"Welcome - THIS IS A DRAFT","heading":"Inspiration","text":"multitude tutorials vignettes provided foundational knowledge development handbook content credited within respective pages.generally, following sources provided inspiration laid groundwork handbook:“R4Epis” project (collaboration MSF RECON)R Epidemics Consortium (RECON)R Data Science book (R4DS)bookdown: Authoring Books Technical Documents R Markdown","code":""},{"path":"index.html","id":"image-credits","chapter":"Welcome - THIS IS A DRAFT","heading":"Image credits","text":"Logo: CDC Public Health Image library, R Graph Gallery2013 Yemen looking mosquito breeding sitesEbola virusSurvey RajasthanNetwork","code":""},{"path":"index.html","id":"license-and-terms-of-use","chapter":"Welcome - THIS IS A DRAFT","heading":"License and Terms of Use","text":"handbook approved product specific organization.Although strive accuracy, provide guarantee content book.book licensed Creative Commons license TBD…","code":""},{"path":"r-basics.html","id":"r-basics","chapter":"1 R Basics","heading":"1 R Basics","text":"","code":""},{"path":"r-basics.html","id":"overview","chapter":"1 R Basics","heading":"1.1 Overview","text":"page intended comprehensive “learn R” tutorial. However, cover fundamentals can useful reference refreshing memory. See section recommended training comprehensive tutorials.","code":""},{"path":"r-basics.html","id":"why-use-r","chapter":"1 R Basics","heading":"1.2 Why use R?","text":"stated R project website, R programming language environment statistical computing graphics. highly versatile, extensible, community-driven.CostR free use! strong ethic community free open-source material.ReproducibilityConducting data management analysis programming language (compared Excel another primarily point-click/manual tool) enhances reproducibility, makes error-detection easier, eases workload.CommunityThe R community users enormous collaborative. New packages tools address real-life problems developed daily, vetted community users. one example, R-Ladies worldwide organization whose mission promote gender diversity R community, one largest organizations R users. likely chapter near !","code":""},{"path":"r-basics.html","id":"install","chapter":"1 R Basics","heading":"1.3 Installation","text":"install RVisit website https://www.r-project.org/ download latest version R suitable computer.install R StudioVisit website https://rstudio.com/products/rstudio/download/ download latest free Desktop version RStudio suitable computer.update R RStudioYour version R printed R Console start-. can also run sessionInfo().update R, go website mentioned re-install R. Alternatively, can use installr package (Windows) running installr::updateR(). open dialog boxes help download latest R version update packages new R version. details can found installr documentation.aware old R version still exist computer. can temporarily run older version (older “installation”) R clicking “Tools” -> “Global Options” RStudio choosing R version. can useful want use package updated work newest version R.update RStudio, can go website re-download RStudio. Another option click “Help” -> “Check Updates” within RStudio, may show latest updates.","code":""},{"path":"r-basics.html","id":"other-software-you-may-need-to-install","chapter":"1 R Basics","heading":"1.3.1 Other software you may need to install","text":"TinyTeX (compiling RMarkdown document PDF)Pandoc (compiling RMarkdown documents)RTools (building packages R)phantomjs (saving still images animated networks, transmission chains)","code":""},{"path":"r-basics.html","id":"tinytex","chapter":"1 R Basics","heading":"1.3.1.1 TinyTex","text":"TinyTex custom LaTeX distribution, useful trying produce PDFs R.\r\nSee https://yihui.org/tinytex/ informaton.install TinyTex R:","code":"\ninstall.packages('tinytex')\ntinytex::install_tinytex()\n# to uninstall TinyTeX, run tinytex::uninstall_tinytex()"},{"path":"r-basics.html","id":"pandoc","chapter":"1 R Basics","heading":"Pandoc","text":"Pandoc document converter, separate software R. comes bundled RStudio need downloaded. helps process converting Rmarkdown documents formats like .pdf adding complex functionality.","code":""},{"path":"r-basics.html","id":"rtools","chapter":"1 R Basics","heading":"RTools","text":"RTools collection software building packages RInstall website: https://cran.r-project.org/bin/windows/Rtools/","code":""},{"path":"r-basics.html","id":"phantomjs","chapter":"1 R Basics","heading":"phantomjs","text":"often used take “screenshots” webpages. example make transmission chain epicontacts package, HTML file produced interactive dynamic. want static image, can useful use webshot package automate process. require external program “phantomjs”. can install phantomjs via webshot package command webshot::install_phantomjs().","code":""},{"path":"r-basics.html","id":"rstudio","chapter":"1 R Basics","heading":"1.4 RStudio","text":"","code":""},{"path":"r-basics.html","id":"rstudio-orientation","chapter":"1 R Basics","heading":"1.4.1 RStudio Orientation","text":"First, open RStudio. icons can look similar, sure opening RStudio R.RStudio function must also R installed computer (see section installation instructions).RStudio interface (GUI) easier use R. can think R engine vehicle, crucial work, RStudio body vehicle (seats, accessories, etc.) helps actually use engine move forward!default RStudio displays four rectangle panes.TIP: RStudio displays one left pane scripts open yet.R Console PaneThe R Console, default left lower-left pane R Studio, home R “engine”. commands actually run non-graphic outputs error/warning messages appear. can directly enter run commands R Console, realize commands saved running commands script.familiar Stata, R Console like Command Window also Results Window.Source Pane\r\npane, default upper-left, space edit run scripts. pane can also display datasets (data frames) viewing.Stata users, pane similar -file Data Editor windows.Environment Pane\r\npane, default upper-right, often used see brief summaries objects R Environment current session. objects include imported, modified, created datasets, parameters defined (e.g. specific epi week analysis), vectors lists defined analysis (e.g. names regions). Click arrow next dataframe name see variables.Stata, similar Variables Manager window.pane also contains History can see commands can previously. also “Tutorial” tab can complete interactive R tutorials learnr package installed.Plots, Packages, Help Pane\r\nlower-right pane includes several tabs including plots (display graphics including maps), help, file library, available R packages (including installation/update options).pane contains Stata equivalents Plots Manager Project Manager windows.","code":""},{"path":"r-basics.html","id":"rstudio-settings","chapter":"1 R Basics","heading":"1.4.2 RStudio settings","text":"Change RStudio settings appearance Tools drop-menu, selecting Global Options. can change default settings, including appearance/background color.","code":""},{"path":"r-basics.html","id":"scripts","chapter":"1 R Basics","heading":"1.5 Scripts","text":"Scripts fundamental part programming. Storing code script (vs. typing console) many advantages:ReproducibilityVersion controlCommenting","code":""},{"path":"r-basics.html","id":"rmarkdown","chapter":"1 R Basics","heading":"Rmarkdown","text":"Rmarkdown type script script becomes document (PDF, Word, HTML, Powerpoint, etc.). See handbook page Rmarkdown documents. R Markdown documents. R Markdown documents.","code":""},{"path":"r-basics.html","id":"r-notebooks","chapter":"1 R Basics","heading":"R notebooks","text":"difference writing Rmarkdown vs R notebook. However execution document differs slightly. See site details.","code":""},{"path":"r-basics.html","id":"r-shiny","chapter":"1 R Basics","heading":"R Shiny","text":"Shiny apps contained within one script, must named app.R. file three components:user interface (ui)server functionA call shinyApp functionSee handbook page Shiny basics, online tutorial: Shiny tutorialIn older times, file split two files (ui.R server.R)","code":""},{"path":"r-basics.html","id":"workingdirectory","chapter":"1 R Basics","heading":"1.6 Working directory","text":"working directory root folder location used R work - R looks saves files default.default, save new files outputs location, look files import (e.g. datasets) well.working directory appears grey text top RStudio Console pane. can also return current working directory getwd() (put anything parentheses).NOTE: using R project, working directory default R project root folder open RStudio clicking open R project (file .rproj extension))","code":""},{"path":"r-basics.html","id":"filepaths","chapter":"1 R Basics","heading":"1.6.1 Filepaths","text":"Perhaps common source frustration R beginner Windows machine - typing filepath import data.Use - Avoid problems altogether using relative pathways root R project uses package. See tab Basics page details.Use - Avoid problems altogether using relative pathways root R project uses package. See tab Basics page details.Slashes - typing filepath, beware direction slashes. Enter using forward slashes separate components (“data/provincial.csv”). Windows users, default way filepaths displayed copied backslashes (“\\”) - means must go change direction slash. just use R project noted .Slashes - typing filepath, beware direction slashes. Enter using forward slashes separate components (“data/provincial.csv”). Windows users, default way filepaths displayed copied backslashes (“\\”) - means must go change direction slash. just use R project noted .Avoid using “absolute” paths - “full address” paths direct place regardless user’s working directory. example:Avoid using “absolute” paths - “full address” paths direct place regardless user’s working directory. example:path break script sent someone another computer! Instead, consider using R project filepath begin root directory (.e. working directory R project).One possible exception working larger organization need pull data across several networked drives don’t permission re-save data R project. can get tenuous, may best use full absolute filepaths.","code":"C:/Users/Name/Document/Analytic Software/R/Projects/Analysis2019/data/March2019.csv  "},{"path":"r-basics.html","id":"set-by-command","chapter":"1 R Basics","heading":"1.6.2 Set by command","text":"Use command setwd() filepath quotations, example: setwd(\"C:/Documents/R Files\")CAUTION: using RMarkdown script aware following:R Markdown script, default working directory folder Rmarkdown file (.Rmd) saved . want change , can use setwd() , know change apply specific code chunk.change working directory code chunks R markdown, edit setup chunk add root.dir = parameter, :","code":"\nknitr::opts_knit$set(root.dir = 'desired/filepath/here')"},{"path":"r-basics.html","id":"set-manually","chapter":"1 R Basics","heading":"1.6.3 Set Manually","text":"Setting working directory manually (point--click)RStudio click: Session / Set Working Directory / Choose Directory (time open RStudio)","code":""},{"path":"r-basics.html","id":"in-an-r-project","chapter":"1 R Basics","heading":"1.6.4 In an R project","text":"working R project, working directory default root folder. convenient maximize package (LINK).","code":""},{"path":"r-basics.html","id":"objects","chapter":"1 R Basics","heading":"1.7 Objects","text":"Everything R object. sections explain:create objects (<-)Types objects (e.g. data frames, vectors..)access subparts objects (e.g. variables dataset)Classes objects (e.g. numeric, logical, integer, double, character, factor)","code":""},{"path":"r-basics.html","id":"everything-is-an-object","chapter":"1 R Basics","heading":"1.7.1 Everything is an object","text":"Everything store R - datasets, variables, list village names, total population number, even outputs graphs - objects assigned name can referenced later commands.object exists assigned value (see assignment section ). assigned value, object appears Environment (see upper right pane RStudio). can operated upon, manipulated, changed, re-defined.","code":""},{"path":"r-basics.html","id":"defining-objects--","chapter":"1 R Basics","heading":"1.7.2 Defining objects (<-)","text":"Create objects assigning value <- operator.\r\ncan think assignment operator <- words “defined ”. Assignment commands generally follow standard order:object_name <- value (process/calculation produce value)EXAMPLE: may want record current epidemiological reporting week object reference later code. example, object reporting_week created assigned character value \"2018-W10\" (quote marks make character value).\r\nobject reporting_week appear RStudio Environment pane (upper-right) can referenced later commands.See R commands output boxes .NOTE: Note [1] R console output simply indicating viewing first item outputCAUTION: object’s value can -written time running assignment command re-define value. Thus, order commands run important.following command re-define value reporting_week:Datasets also objects (“dataframes”) must assigned names imported.code , object linelist created assigned value CSV file imported rio package.can read importing exporting datasets section importing data.CAUTION: quick note naming objects:Object names must contain spaces, use underscore (_) period (.) instead space.Object names case-sensitive (meaning Dataset_A different dataset_A).Object names must begin letter (begin number like 1, 2 3).","code":"\nreporting_week <- \"2018-W10\"   # this command creates the object reporting_week by assigning it a value\nreporting_week                 # this command prints the current value of reporting_week object in the console## [1] \"2018-W10\"\nreporting_week <- \"2018-W51\"   # assigns a NEW value to the object reporting_week\nreporting_week                 # prints the current value of reporting_week in the console## [1] \"2018-W51\"\n# linelist is created and assigned the value of the imported CSV file\nlinelist <- rio::import(\"my_linelist.csv\")"},{"path":"r-basics.html","id":"objectstructure","chapter":"1 R Basics","heading":"1.7.3 Object structure","text":"Objects can single piece data (e.g. my_number <- 24), can consist structured data.graphic , sourced online R tutorial shows common data structures names. included image spatial data, discussed GIS section.epidemiology (particularly field epidemiology), commonly encounter data frames vectors:Note create vector “stands alone”, part data frame (list location names), function c() often used:list_of_names <- c(\"Ruhengeri\", \"Gisenyi\", \"Kigali\", \"Butare\")","code":""},{"path":"r-basics.html","id":"objectclasses","chapter":"1 R Basics","heading":"1.7.4 Object classes","text":"objects stored R class tells R handle object. many possible classes, common ones include:can test class object feeding function class(). Note: can reference specific column within dataset using $ notation separate name dataset name column.Sometimes, column converted different class automatically R. Watch ! example, vector column numbers, character value substituted … entire column change class character.One common example working dataframe print table - make total row try paste/glue together percents cell numbers entire columns convert character can longer used mathematical calculations.Sometimes, need convert objects columns another class.likewise, base R functions check whether object specific class, .numeric(), .character(), .double(), .factor(), .integer()online material classes data structures R.","code":"\nclass(linelist$age)     # class should be numeric## [1] \"numeric\"\nclass(linelist$gender)  # class should be character## [1] \"character\"\nnum_vector <- c(1,2,3,4,5) # define vector as all numbers\nclass(num_vector)          # vector is numeric class## [1] \"numeric\"\nnum_vector[3] <- \"three\"   # convert the third element to a character\nclass(num_vector)          # vector is now character class## [1] \"character\""},{"path":"r-basics.html","id":"dollarsign","chapter":"1 R Basics","heading":"1.7.5 Columns/Variables ($)","text":"column dataframe known “vector”, sequence values must class\r\nVectors within data frame (variables dataset) can called, referenced, created using $ symbol. $ symbol connects name column name data frame. $ symbol must used, otherwise R know look create column.handbook, use word “column” instead “variable”.typing name data frame followed $ also see list variables data frame. can scroll using arrow key, select one Enter key, avoid spelling mistakes!ADVANCED TIP: complex objects (e.g. epicontacts object may multiple levels can accessed multiple dollar signs. example epicontacts$linelist$date_onset) .","code":"\n# Retrieve the length of the vector age_years\nlength(linelist$age) # (age is a variable in the linelist data frame)\nknitr::include_graphics(here::here(\"images\", \"Calling_Names.gif\"))"},{"path":"r-basics.html","id":"brackets","chapter":"1 R Basics","heading":"1.7.6 Access/index with brackets ([])","text":"may need view parts objects, also called “indexing”, often done using square brackets [ ]. Note: using $ dataframe access column also type indexing.Square brackets also work return specific parts returned output, output summary() function:view specific rows columns dataset, can using syntax dataframe[rows, columns]:indexing object class list, single brackets always return class list, even single object returned. Double brackets, however, can used access single element return different class list.\r\nBrackets can also written one another, demonstrated .visual explanation pepper shakers humorous helpful.","code":"\nmy_vector <- c(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\")  # define the vector\nmy_vector[5]                                  # print the 5th element## [1] \"e\"\n# All of the summary\nsummary(linelist$age)##           Min.        1st Qu.         Median           Mean        3rd Qu.           Max.           NA's \r\n##  0.00000000000  6.00000000000 13.00000000000 16.42396551724 24.00000000000 95.00000000000             88\n#Just one part\nsummary(linelist$age)[2]  ## 1st Qu. \r\n##       6\n# View a specific row (2) from dataset, with all columns\nlinelist[2,]\n\n# View all rows, but just one column\nlinelist[, \"date_onset\"]\n\n# View values from row 2 and columns 5 through 10\nlinelist[2, 5:10] \n\n# View values from row 2 and columns 5 through 10 and 18\nlinelist[2, c(5:10, 18)] \n\n# View rows 2 through 20, and specific columns\nlinelist[2:20, c(\"date_onset\", \"outcome\", \"age\")]\n\n# View rows and columns based on criteria\n# *** Note the dataframe must still be names in the criteria!\nlinelist[linelist$age > 25 , c(\"date_onset\", \"date_birth\", \"age\")]\n\n# Use View() to see the outputs in the RStudio Viewer pane (easier to read) \n# *** Note the capital \"V\" in View() function\nView(linelist[2:20, \"date_onset\"])\n\n# Save as a new object\nnew_table <- linelist[2:20, c(\"date_onset\")] \n# define demo list\nmy_list <- list(\n  # First element in the list is a character vector\n  hospitals = c(\"Central\", \"Empire\", \"Santa Anna\"),\n  \n  # second element in the list is a dataframe of addresses\n  address   = data.frame(\n    street = c(\"145 Medical Way\", \"1048 Brown Ave\", \"999 El Camino\"),\n    city   = c(\"Andover\", \"Hamilton\", \"El Paso\")\n    )\n  )\n\n\nmy_list[1] # this returns the element in class \"list\"## $hospitals\r\n## [1] \"Central\"    \"Empire\"     \"Santa Anna\"\nmy_list[[1]] # this is a character vector## [1] \"Central\"    \"Empire\"     \"Santa Anna\"\nmy_list[[\"hospitals\"]] # you can also index by name of the list element## [1] \"Central\"    \"Empire\"     \"Santa Anna\"\nmy_list[[1]][3] # this returns the third element of the \"hospitals\" character vector## [1] \"Santa Anna\"\nmy_list[[2]][1] # This returns the first column (\"street\") of the address dataframe##            street\r\n## 1 145 Medical Way\r\n## 2  1048 Brown Ave\r\n## 3   999 El Camino"},{"path":"r-basics.html","id":"remove-objects","chapter":"1 R Basics","heading":"1.7.7 Remove objects","text":"can remove individual objects putting name rm() function (quote marks):can remove objects (clear workspace) running:","code":"\nrm(object_name)\nrm(list = ls(all = TRUE))"},{"path":"r-basics.html","id":"functions","chapter":"1 R Basics","heading":"1.8 Functions","text":"section functions explains:function workWhat arguments areWhat packages areHow get help understanding function","code":""},{"path":"r-basics.html","id":"simple-functions","chapter":"1 R Basics","heading":"1.8.1 Simple functions","text":"function like machine receives inputs, action inputs, produces output.\r\noutput depends function.Functions typically operate upon object placed within function’s parentheses.\r\nexample, function sqrt() calculates square root number:Functions can also applied variables dataset. example, function summary() applied numeric variable age dataset linelist (’s $ symbol?), output summary variable’s numeric missing values.NOTE: Behind scenes, function represents complex additional code wrapped user one easy command.","code":"\nsqrt(49)## [1] 7\nsummary(linelist$age)##           Min.        1st Qu.         Median           Mean        3rd Qu.           Max.           NA's \r\n##  0.00000000000  6.00000000000 13.00000000000 16.42396551724 24.00000000000 95.00000000000             88"},{"path":"r-basics.html","id":"functions-with-multiple-arguments","chapter":"1 R Basics","heading":"1.8.2 Functions with multiple arguments","text":"Functions often ask several inputs, called arguments, located within parentheses function, usually separated commas.arguments required function work correctly, others optional.Optional arguments default settings specified.Arguments can take character, numeric, logical (TRUE/FALSE), inputs.example, age_pyramid() command produces age pyramid graphic based defined age groups binary split column, gender. function given three arguments within parentheses, separated commas. values supplied arguments establish linelist data frame use, age_cat5 column count, gender binary column use splitting pyramid color.NOTE: example, linelist comes pre-created column called “age_cat5”. learn create new variable see section handbook first half argument assignment (e.g. data =) need specified arguments written specific order (specified function’s documentation). code produces exact pyramid , function expects argument order: data frame, age_group variable, split_by variable.complex age_pyramid() command might include optional arguments :Show proportions instead counts (set proportional = TRUE default FALSE)Specify two colors use (pal = short “palette” supplied vector two color names. See objects page function c() makes vector)NOTE: arguments specified equals symbol (e.g. coltotals = ...), order among arguments important (must still within parentheses separated commas).","code":"\n# Creates an age pyramid by specifying the dataframe, age group variable, and a variable to split the pyramid\napyramid::age_pyramid(data = linelist, age_group = \"age_cat5\", split_by = \"gender\")\n# This command will produce the exact same graphic as above\napyramid::age_pyramid(linelist, \"age_cat5\", \"gender\")\napyramid::age_pyramid(linelist, \"age_cat5\", \"gender\", proportional = TRUE, pal = c(\"orange\", \"purple\"))"},{"path":"r-basics.html","id":"packages","chapter":"1 R Basics","heading":"1.9 Packages","text":"Packages contain functions.R package shareable bundle code documentation contains pre-defined functions. Users R community develop share packages time, chances likely solution exists ! install use hundreds packages use R.installation, R contains “base” functions perform common elementary tasks. many R users create specialized functions, verified R community can download package use. handbook, package names written bold. One challenging aspects R often many functions packages choose complete given task.Install packagesFunctions contained within packages can downloaded (“installed”) computer internet. package downloaded, access functions loading package library() command beginning R session.Think R personal library: download package library gains book functions, time want use function book, must borrow book library.CRANCRAN (Comprehensive R Archive Network) public warehouse R packages published R community members. often, R users download packages CRAN.Install vs. LoadTo use package, 2 steps must implemented:package must installed (), andThe package must loaded (R session)basic function installing package install.packages(), name package provided quotes. can also accomplished point--click going RStudio “Packages” pane clicking “Install”.basic function load package use (installed) library(), name package quotes.Using pacmanThis handbook uses package pacman (abbreviation “package manager”), offers useful function p_load(). function combines two steps one - installs /loads packages, depending needed. package yet installed, attempt install CRAN, load ., load packages used R basics page:function p_isinstalled() test whether packages installed already.Install githubSometimes, need install development version package, github repository. can use p_load_gh() pacman (function wrapper around install_github() devtools).first name listed quotation marks Github ID repository owner, slash name repository. want install branch main/master branch, add “@”.Read pacman hereInstall ZIP TARYou get package URL:download computer zipped file:Option 1:Option 2:Delete packagesUse p_delete() pacman, remove.packages() base R. Alternatively, go find folder contains library manually delete folder.DependenciesPackages often depend packages work. called dependencies. dependency fails install, package depending may also fail install.See dependencies package p_depends(), see packages depend p_depends_reverse()Masked functionsIt uncommon two packages contain function name. example, package dplyr filter() function, package stats. default filter() function depends order packages first loaded R session - later one default command filter().can check order Environment pane R Studio - click drop-“Global Environment” see order packages. Functions packages lower drop-list mask functions name packages appear highest drop-list. first loading package, R warn console masking occurring, can easy miss.ways can fix masking:Specify package name command. example, use dplyr::filter()Re-arrange order packages loaded (e.g. within library() p_load()), start new R sessionDetach / unloadTo detach package, use command, correct package name:Packages codeFor clarity handbook, functions usually preceeded name package using :: symbol following way:package_name::function_name()package loaded session, explicit style necessary. One can just use function_name(). However giving package name useful function name common may exist multiple packages (e.g. plot()).\r\nUsing package name also load package already loaded.Installing older versions packagesSee guideFunction helpTo read function, can search Help tab lower-right RStudio. can also run command like ?thefunctionname (put name function question mark) Help page appear Help pane. Finally, try searching online resources.","code":"\ninstall.packages(\"tidyverse\")\nlibrary(tidyverse)\npacman::p_load(tidyverse, rio, here)\n# install development version of package from github repository\np_install_gh(\"reconhub/epicontacts\")\n\n# load development version of package which you had downloaded from github repository\np_load_gh(\"reconhub/epicontacts\")\npackageurl <- \"https://cran.r-project.org/src/contrib/Archive/dsr/dsr_0.2.2.tar.gz\"\ninstall.packages(packageurl, repos=NULL, type=\"source\")\nlibrary(devtools)\ninstall_local(\"~/Downloads/dplyr-master.zip\")\ninstall.packages(path_to_source, repos = NULL, type=\"source\")\n\ninstall.packages(\"~/Downloads/dplyr-master.zip\", repos=NULL, type=\"source\")\ndetach(package:PACKAGE_NAME_HERE, unload=TRUE)\n# This command uses the package \"rio\" and its function \"import()\" to import a dataset\nlinelist <- rio::import(\"linelist.xlsx\", which = \"Sheet1\")"},{"path":"r-basics.html","id":"piping","chapter":"1 R Basics","heading":"1.10 Piping (%>%)","text":"Two general approaches working objects :Tidyverse/piping - sends object function function - emphasizes action, objectDefine intermediate objects - emphasis object, re-defined ","code":""},{"path":"r-basics.html","id":"pipes","chapter":"1 R Basics","heading":"1.10.1 Pipes","text":"Simply explained, pipe operator (%>%) passes intermediate output one function next.\r\ncan think saying “”. Many functions can linked together %>%.Piping emphasizes sequence actions, object actions performed onBest sequence actions must performed one objectPipes come package magrittr, automatically included packages dplyr tidyverseMakes code clean easier read, intuitiveRead approach tidyverse style guideExample:another link describing utility pipes.Piping base function. use piping, magrittr package must installed loaded (typically done loading tidyverse dplyr package). can read piping magrittr documentation.CAUTION: Remember even using piping link functions, assignment operator (<-) present, object left still -written (re-defined) right side.%<>%\r\n“assignment pipe” magritter package, pipes object forward also re-defines object. must first pipe operator chain. shorthand, object %<>% function() %>% function() object <- object %>% function() %>% function().","code":"\n# A fake example of how to bake a care using piping syntax\n\ncake <- flour %>%       # to define cake, start with flour, and then...\n  left_join(eggs) %>%   # add eggs\n  left_join(oil) %>%    # add oil\n  left_join(water) %>%  # add water\n  mix_together(utensil = spoon, minutes = 2) %>%                # mix together\n  bake(degrees = 350, system = \"fahrenheit\", minutes = 35) %>%  # bake\n  let_cool()            # let it cool down"},{"path":"r-basics.html","id":"define-intermediate-objects","chapter":"1 R Basics","heading":"1.10.2 Define intermediate objects","text":"approach changing objects/dataframes may better :need manipulate multiple objectsThere intermediate steps meaningful deserve separate object namesRisks:Creating new objects step means creating lots objects. use wrong one might realize !\r\n*Naming objects can confusingErrors may easily detectableEither name intermediate object, overwrite original, combine functions together. come risks.examples:Combine functions together - also difficult read","code":"\n# a fake example of how to bake a cake using this method (defining intermediate objects)\nbatter_1 <- left_join(flour, eggs)\nbatter_2 <- left_join(batter_1, oil)\nbatter_3 <- left_join(batter_2, water)\n\nbatter_4 <- mix_together(object = batter_3, utensil = spoon, minutes = 2)\n\ncake <- bake(batter_4, degrees = 350, system = \"fahrenheit\", minutes = 35)\n\ncake <- let_cool(cake)\n# an example of combining/nesting mutliple functions together - difficult to read\ncake <- let_cool(bake(mix_together(batter_3, utensil = spoon, minutes = 2), degrees = 350, system = \"fahrenheit\", minutes = 35))"},{"path":"r-basics.html","id":"operators","chapter":"1 R Basics","heading":"1.11 Key operators and functions","text":"section details operators R, :Definitional operatorsRelational operators (less , equal ..)Logical operators (, …)Handling missing valuesMathematical operators functions (+/-, >, sum(), median(), …)%% operator","code":""},{"path":"r-basics.html","id":"assignment-operators","chapter":"1 R Basics","heading":"1.11.1 Assignment operators","text":"<-basic assignment operator R <-. object_name <- value (see R Basics tab “Defining Object”).\r\nassignment operator can also written =. advise use <- general R use.\r\nalso advise surrounding operators spaces, readability.<<-writing functions (LINK PAGE), using R interactive way sourced scripts (LINK PAGE), may need use assignment operator <<- (base R). operator used define object higher ‘parent’ R Environment (LINK tab R environments). Also see online reference.%<>%“assignment pipe” magritter package, pipes object forward also re-defines object. must first pipe operator chain. shorthand, object %<>% function() %>% function() object <- object %>% function() %>% function().%<+%Used add data phylogenetic trees ggtree package. See (LINK PAGE) online resource book.","code":""},{"path":"r-basics.html","id":"relational-and-logical-operators","chapter":"1 R Basics","heading":"1.11.2 Relational and logical operators","text":"Relational operators compare values often used defining new variables subsets datasets. common relational operators R:Logical operators, , often used connect relational operators create complicated criteria. Complex statements might require parentheses ( ) grouping order application.example, , linelist two variables want use create case definition, hep_e_rdt, test result other_cases_in_hh, tell us cases household. command uses function case_when() create new variable case_def :Note R case-sensitive, “Positive” different “positive”…","code":"\nlinelist_cleaned <- linelist_cleaned %>%\n  mutate(case_def = case_when(\n    is.na(hep_e_rdt) & is.na(other_cases_in_hh)           ~ NA_character_,\n    hep_e_rdt == \"Positive\"                               ~ \"Confirmed\",\n    hep_e_rdt != \"Positive\" & other_cases_in_hh == \"Yes\"  ~ \"Probable\",\n    TRUE                                                  ~ \"Suspected\"\n  ))"},{"path":"r-basics.html","id":"missing-values","chapter":"1 R Basics","heading":"1.11.3 Missing values","text":"R, missing values represented special value NA (“reserved” value) (capital letters N - quotation marks). import data records missing data another way (e.g. 99, “Missing”, .), may want re-code values NA.test whether value NA, use special function .na(), returns TRUE FALSE.R documentation missing valuesVariations NANA actually logical value length 1. may also encounter NA_character_, NA_real_, NA_complex_, NA_integer_, correspond specific classes.prominent application one variants common epidemiology work using case_when(). Right-Hand Side (RHS) values must class. Thus, character outcomes RHS like “Confirmed”, “Suspect”, “Probable” NA - get error. Instead NA must NA_character_. Likewise integers, use NA_integer_.NULLNULL null object R, often used represent list 0 length. Use .null() evaluate status.detail difference NA NULL ","code":"\nrdt_result <- c(\"Positive\", \"Suspected\", \"Positive\", NA)   # two positive cases, one suspected, and one unknown\nis.na(rdt_result)  # Tests whether the value of rdt_result is NA## [1] FALSE FALSE FALSE  TRUE"},{"path":"r-basics.html","id":"mathematics-and-statistics","chapter":"1 R Basics","heading":"1.11.4 Mathematics and statistics","text":"operators functions page automatically available using base R.","code":""},{"path":"r-basics.html","id":"mathematical-operators","chapter":"1 R Basics","heading":"1.11.4.1 Mathematical operators","text":"often used perform addition, division, create new columns, etc. common mathematical operators R. Whether put spaces around operators important.","code":""},{"path":"r-basics.html","id":"mathematical-functions","chapter":"1 R Basics","heading":"1.11.4.2 Mathematical functions","text":"DANGER: round() uses “banker’s rounding” rounds .5 upper number even. Use round_half_up() janitor consistently round halves nearest whole number. See ","code":"\n# use the appropriate rounding function for your work\nround(c(2.5, 3.5))## [1] 2 4\njanitor::round_half_up(c(2.5, 3.5))## [1] 3 4"},{"path":"r-basics.html","id":"statistical-functions","chapter":"1 R Basics","heading":"1.11.4.3 Statistical functions:","text":"CAUTION: functions default include missing values calculations. Missing values result output NA, unless argument na.rm=TRUE specifiedDANGER: providing vector numbers one functions, sure wrap numbers within c() .quantile(): x numeric vector examine, probs numeric vector probabilities within 0 1.0, e.g c(0.5, 0.8, 0.85)\r\n** summary(): gives summary numeric vector including mean, median, common percentiles","code":"\n# If supplying raw numbers to a function, wrap them in c()\nmean(1, 6, 12, 10, 5, 0)    # !!! INCORRECT !!!  ## [1] 1\nmean(c(1, 6, 12, 10, 5, 0)) # CORRECT## [1] 5.666666666666667"},{"path":"r-basics.html","id":"other-useful-functions","chapter":"1 R Basics","heading":"1.11.4.4 Other useful functions:","text":"","code":""},{"path":"r-basics.html","id":"in","chapter":"1 R Basics","heading":"1.11.5 %in%","text":"useful operator matching values, quickly assessing value within vector dataframe.ask value %%, put exclamation mark (!) front logic statement:%% useful using dplyr function case_when() recode values column. example:","code":"\nmy_vector <- c(\"a\", \"b\", \"c\", \"d\")\n\n\"a\" %in% my_vector## [1] TRUE\n\"h\" %in% my_vector## [1] FALSE\n# to negate, put an exclamation in front\n!\"a\" %in% my_vector## [1] FALSE\n!\"h\" %in% my_vector## [1] TRUE\nlinelist <- linelist %>% \n  mutate(hospital = case_when(\n    hospital %in% c(\"St. Fr.\", \"Saint Francis\") ~ \"St. Francis\")) # convert to correct spelling"},{"path":"r-basics.html","id":"errors-warnings","chapter":"1 R Basics","heading":"1.12 Errors & Warnings","text":"section explains:General syntax writing R codeCode assiststhe difference errors warningsCommon errors warnings solutions can found X section (TODO).\r\nSee handbook page common errors warnings.","code":""},{"path":"r-basics.html","id":"error-versus-warning","chapter":"1 R Basics","heading":"1.12.1 Error versus Warning","text":"command run, R Console may show warning error messages red text.warning means R completed command, take additional steps produced unusual output aware .warning means R completed command, take additional steps produced unusual output aware .error means R able complete command.error means R able complete command.Look clues:error/warning message often include line number problem.error/warning message often include line number problem.object “unknown” “found”, perhaps spelled incorrectly, forgot call package library(), forgot re-run script making changes.object “unknown” “found”, perhaps spelled incorrectly, forgot call package library(), forgot re-run script making changes.else fails, copy error message Google along key terms - chances someone else worked already!","code":""},{"path":"r-basics.html","id":"general-syntax-tips","chapter":"1 R Basics","heading":"1.12.2 General syntax tips","text":"things remember writing commands R, avoid errors warnings:Always close parentheses - tip: count number opening “(” closing parentheses “)” code chunkAvoid spaces column object names. Use underscore ( _ ) periods ( . ) insteadKeep track remember separate function’s arguments commasR case-sensitive, meaning Variable_A different variable_A","code":""},{"path":"r-basics.html","id":"code-assists","chapter":"1 R Basics","heading":"1.12.3 Code assists","text":"script (RMarkdown otherwise) give clues made mistake. example, forgot write comma needed, close parentheses, RStudio raise flag line, right side script, warn .(/images/Warnings_and_Errors.png)","code":""},{"path":"r-basics.html","id":"recommended-training","chapter":"1 R Basics","heading":"1.13 Recommended training","text":"","code":""},{"path":"r-basics.html","id":"resources-within-rstudio","chapter":"1 R Basics","heading":"1.13.1 Resources within RStudio","text":"Help documentationSearch RStudio “Help” tab documentation packages specific functions. within pane also contains Files, Plots, Packages (typically lower-right pane). shortcut, can also type name package function R console question-mark open relevant Help page. example: ?filter ?diagrammeR.Interactive tutorialsRStudio built-interative tutorials via learnr package. package installed, can go tutorials via “Tutorial” tab upper-right RStudio pane (also contains Environment History tabs).","code":""},{"path":"r-basics.html","id":"cheatsheets","chapter":"1 R Basics","heading":"1.13.2 Cheatsheets","text":"online R resource specifically Excel usersThere many cheatsheets available RStudio website, example:Factors forcats packageDates times lubridate packageStrings stringr pacage“apply” functions purrr packageData import cheatsheetData transformation cheatsheet dplyr packageR MarkdownShinyData viz ggplot2 packageCartographyleaflet packagePython R (reticulate package)","code":""},{"path":"r-basics.html","id":"free-online-books","chapter":"1 R Basics","heading":"1.13.3 Free online books","text":"definitive text R Data Science book Garrett Grolemund Hadley Wickham","code":""},{"path":"r-basics.html","id":"courses","chapter":"1 R Basics","heading":"1.13.4 Courses","text":"","code":""},{"path":"r-markdown.html","id":"r-markdown","chapter":"2 R Markdown","heading":"2 R Markdown","text":"R Markdown fantastic tool creating automated, reproducible, share-worthy outputs. can generate static interactive outputs, form html, word, pdf, powerpoint, others.","code":""},{"path":"r-markdown.html","id":"overview-1","chapter":"2 R Markdown","heading":"2.1 Overview","text":"Using markdown allow easily recreate entire formatted document, including tables/figures/text, using new data (e.g. daily surveillance reports) /subsets data (e.g. reports specific geographies).guide go basics. See ‘resources’ tab info.","code":""},{"path":"r-markdown.html","id":"preparation","chapter":"2 R Markdown","heading":"2.2 Preparation","text":"Background MarkdownTo explain concepts packages involved:Markdown lightweight markup language, syntax allows plain text formatting can converted html formats. specific R, usually markdown file ‘.md’ extension.R Markdown - language: extension markdown specific R, file extensions ‘.Rmd’. allows R code embedded ‘chunks’ code can run, rather just text document.Rmarkdown - package: used R render .Rmd file desire output. However focus markdown (text) syntax, also need…Knitr: package read code chunks, execute , ‘knit’ back document. tables graphs included alongside text.Pandoc: Finally, pandoc needed actually convert documents e.g. word/pdf/powerpoint etc. separate R.R Studio website describes link together (https://rmarkdown.rstudio.com/authoring_quick_tour.html):Creating documents R Markdown starts .Rmd file contains combination markdown (content simple text formatting) R code chunks. .Rmd file fed knitr, executes R code chunks creates new markdown (.md) document includes R code output.markdown file generated knitr processed pandoc responsible creating finished web page, PDF, MS Word document, slide show, handout, book, dashboard, package vignette format.may sound complicated, R Markdown makes extremely simple encapsulating processing single render function. Better still, RStudio includes “Knit” button enables render .Rmd preview using single click keyboard shortcut.InstallationTo create R Markdown, need following installed:Rmarkdown package, described : install.packages('rmarkdown')Pandoc, come RStudio. using RStudio, can download : http://pandoc.org.want generate PDF output (bit trickier), need install LaTeX. R Markdown users installed LaTeX , recommend install TinyTeX (https://yihui.name/tinytex/):WorkflowPreparation R Markdown workflow involves ensuring set R project folder structure suits desired workflow.instance, may want ‘output’ folder rendered documents, ‘input’ folder new cleaned data files, well subfolders within date-stamped reflect subgeographies interest. markdown can go ‘rmd’ subfolder, particularly multiple Rmd files within project.can set code create output subfolders time run reports (see “Producing output”), overall design mind.R Markdown can run pandoc issues running shared network drive, recommended folder local machine, e.g. project within ‘Documents’. use Git (much recommended!), familiar.","code":"install.packages('tinytex')\r\ntinytex::install_tinytex()  # install TinyTeX"},{"path":"r-markdown.html","id":"the-r-markdown-file","chapter":"2 R Markdown","heading":"2.3 The R Markdown file","text":"R Markdown document looks like can edited just like standard R script, R Studio. However, contains just usual R code hashed comments. three basic components:1. Metadata: referred ‘YAML metadata’ top R Markdown document two ‘- - -‘s. tell Rmd file type output produce, formatting preferences, metadata sucsh document title, author, date. uses mentioned (referred ‘Producing output’). Note indentation matters.2. Text: narrative document, including titles. written markdown language, used across many different programmes. means can add basic formatting, instance:_text_ *text* italicise**text** bold text# start new line title (## second-level title, ## third-level title etc)* start new line bullet pointstext display text code ()actual appearance font can set using specific templates (specified YAML metadata; see example tabs).can also include minimal R code within backwards ticks, within-text values. See example .3. Code chunks: R code goes, actual data management visualisation. note:\r\n‘chunks’ appear slightly different background colour narrative part document.chunk always starts three backticks chunk information within squiggly brackets, ends three backticks.notes content squiggly brackets:start ‘r’ indicate language name within chunk rFollowed chunk name - note ALWAYS unique name else R complain try render.can include options , many can configured point--click using setting buttons top right chunk. , can specify parts chunk want rendered document include, namely code, outputs, warnings. come written preferences within squiggly brackets, e.g. ‘echo=FALSE’ specify want ‘Show output ’.","code":""},{"path":"r-markdown.html","id":"producing-an-output","chapter":"2 R Markdown","heading":"2.4 Producing an output","text":"General notesEverything used markdown must referenced within Rmd file. instance, need load required packages data.single test run within R MarkdownThe ‘R Markdown’ tab start processing show overall progress, complete document automatically open complete. document also saved folder markdown, file name aside file extension. obviously ideal version control, rename file .single run separate scriptTo run markdown date-stamped file produced, can create separate script call Rmd file within . can also specify folder file name, include dynamic date time, file date stamped production.Routine runs newly created date-stamped sub foldersAdd couple lines code define date running report (e.g. using Sys.Date example ) create new sub folders. want date reflect specific date rather current date, can also enter object.may want dynamic information included markdown . addressed next section.","code":"rmarkdown::render((\"rmd_reports/create_RED_report.Rmd\"),  \r\n                        output_file = paste0(\"outputs/Report_\", Sys.Date, \".docx\")) # Use 'paste0' to combine text and code for a dynamic file name# Set the date of report\r\nrefdate <- as.Date(\"2020-12-21\")\r\n\r\n# Create the folders\r\noutputfolder <- paste0(\"outputs/\", refdate) # This is the new folder name\r\ndir.create(outputfolder) # Creates the folder (in this case assumed 'outputs' already exists)\r\n\r\n#Run the loop\r\nrmarkdown::render((\"rmd_reports/create_report.Rmd\"),  \r\n                        output_file = paste0(outputfolder, \"/Report_\", refdate, \".docx\")) #Dyanmic folder name now included"},{"path":"r-markdown.html","id":"parametrised-reports","chapter":"2 R Markdown","heading":"2.5 Parametrised reports","text":"Parameterised reports next step content R Markdown can also dynamic. example, title can change according subgeography running, data can filter subgeography interest.Let’s say want run markdown produce report surveillance data Area1 Area2. :Edit R Markdown:Change YAML metadata include ‘params’ section, specifies dynamic object.Refer parameterised object within code needed. E.g. filter(area == params$areanumber) rather filter(area==\"Area1\").instance (simplified version include setup code library/data loading):can change content editing YAML needed, set loop separate script iterate areas. previous section, can set folders well.can see , set list includes areas interest (arealist), rendering markdown specify parameterized areanumber specific iteration Nth value arealist. instance, first iteration, areanumber equate “Area1”. code also specifies Nth area name included output file name.Note work even area date specified within YAML - YAML information get overwritten loop.","code":"# Set the date of report\r\nrefdate <- as.Date(\"2020-12-21\")\r\n\r\n# Set the list (note that this can also be an imported list)\r\narealist <- c(\"Area1\", \"Area2\", \"Area3\", \"Area4\", \"Area5\")\r\n\r\n# Create the folders\r\noutputfolder <- paste0(\"outputs/\", refdate) # This is the new folder name\r\ndir.create(outputfolder) # Creates the folder (in this case assumed 'outputs' already exists)\r\n\r\n#Run the loop\r\n\r\nfor(i in 1:length(arealist))  { # This will loop through from the first value to the last value in 'arealist'\r\n\r\nrmarkdown::render(here(\"rmd_reports/create_report.Rmd\"), \r\n                        params = list(areanumber = arealist[1], #Assigns the nth value of arealist to the current areanumber\r\n                                      refdate = refdate),\r\n                        output_file = paste0(outputfolder, \"/Report_\", arealist[1], refdate, \".docx\")) \r\n                        \r\n}\r\n\r\n"},{"path":"r-markdown.html","id":"resources","chapter":"2 R Markdown","heading":"2.6 Resources","text":"information can found via:https://bookdown.org/yihui/rmarkdown/https://rmarkdown.rstudio.com/articles_intro.htmlA good explainer markdown vs knitr vs Rmarkdown : https://stackoverflow.com/questions/40563479/relationship--r-markdown-knitr-pandoc--bookdown","code":""}]

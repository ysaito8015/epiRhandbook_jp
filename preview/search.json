[{"path":"index.html","id":"the-epidemiologist-r-handbook","chapter":"The Epidemiologist R Handbook","heading":"The Epidemiologist R Handbook","text":"DRAFT.REVIEWING BOOK, PLEASE PROVIDE FEEDBACK PAGE LINK","code":""},{"path":"index.html","id":"about-this-handbook","chapter":"The Epidemiologist R Handbook","heading":"About this handbook","text":"free open-access R reference manual applied epidemiologists public health practitioners.book strives :Serve quick reference manual - textbook comprehensive R trainingAddress common epidemiological problems via task-centered examplesBe accessible settings low internet-connectivity via (**downloadable version**)gaps book address?Many epidemiologists transitioning R SAS, STATA, SPSS, Excel, softwareLet’s avoid hours online searching repository best-practice code common epi userEpidemiologists sometimes work low internet-connectivity environments limited supportHow different R books?written epidemiologists, epidemiologists - leveraging experience local, national, academic, emergency settingsIt provides examples epidemic curves, transmission chains, epidemic modeling projections, age sex pyramids standardization, record matching, outbreak detection, survey analysis, causal diagrams, survival analysis, GIS basics, phylogenetic trees, automated reports, etc…","code":""},{"path":"index.html","id":"how-to-read-this-handbook","chapter":"The Epidemiologist R Handbook","heading":"How to read this handbook","text":"Search via search box Table ContentsClick “copy” icons copy codeSee “Resources” section page resources","code":""},{"path":"index.html","id":"edit-or-contribute","chapter":"The Epidemiologist R Handbook","heading":"Edit or contribute","text":"welcome feedback comments survey LINK.want directly contribute modify content, please post issue submit pull request github repository.","code":""},{"path":"index.html","id":"acknowledgements","chapter":"The Epidemiologist R Handbook","heading":"Acknowledgements","text":"","code":""},{"path":"index.html","id":"contributors","chapter":"The Epidemiologist R Handbook","heading":"Contributors","text":"book conceived, written, edited collaboration epidemiologists around world draw upon experiences constellation organizations including local/state/provincial/national health departments ministries, World Health Organization (), MSF (Medecins sans frontiers / Doctors without Borders), hospital systems, academic institutions.Editor--Chief: Neale BatraCore team: Neale Batra, Alex Spina, Amrish Baidjoe, Henry Laurenson-Schafer, Finlay Campbell, Pat KeatingAuthors (order contributions): Neale Batra, Alex Spina, Paula Blomquist, Finlay Campbell, Henry Laurenson-Schafer, Isaac Florence, Natalie Fischer, Daniel Molling, Liza Coyer, Jonny Polonski, Yurie Izawa, Sara Hollis, Isha BerryReviewers: …(list)…Advisers …(list)…","code":""},{"path":"index.html","id":"funding-and-programmatic-support","chapter":"The Epidemiologist R Handbook","heading":"Funding and programmatic support","text":"handbook received funding via COVID-19 emergency capacity-building grant Training Programs Epidemiology Public Health Interventions Network (TEPHINET).Programmatic support provided EPIET Alumni Network (EAN).","code":""},{"path":"index.html","id":"inspiration","chapter":"The Epidemiologist R Handbook","heading":"Inspiration","text":"multitude tutorials vignettes provided foundational knowledge development handbook content credited within respective pages.generally, following sources provided inspiration laid groundwork handbook:“R4Epis” project (collaboration MSF RECON)R Epidemics Consortium (RECON)R Data Science book (R4DS)bookdown: Authoring Books Technical Documents R MarkdownNetlify hosts website","code":""},{"path":"index.html","id":"image-credits","chapter":"The Epidemiologist R Handbook","heading":"Image credits","text":"Logo (US CDC Public Health Image Library):2013 Yemen looking mosquito breeding sitesEbola virusSurvey Rajasthan","code":""},{"path":"index.html","id":"license-and-terms-of-use","chapter":"The Epidemiologist R Handbook","heading":"License and Terms of Use","text":"handbook approved product specific organization.Although strive accuracy, provide guarantee content book.work licensed Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.","code":""},{"path":"univariate-and-multivariate-regression.html","id":"univariate-and-multivariate-regression","chapter":"1 Univariate and multivariate regression","heading":"1 Univariate and multivariate regression","text":"","code":""},{"path":"univariate-and-multivariate-regression.html","id":"overview","chapter":"1 Univariate and multivariate regression","heading":"1.1 Overview","text":"tab demonstrates use gtstummary regression packages \r\nlook associations variables (e.g. odds ratios, risk ratios hazard\r\nratios)Univariate: two--two tablesStratified: mantel-haenszel estimatesMultivariable: variable selection, model selection, final tableForest plot","code":""},{"path":"univariate-and-multivariate-regression.html","id":"preparation","chapter":"1 Univariate and multivariate regression","heading":"1.2 Preparation","text":"","code":""},{"path":"univariate-and-multivariate-regression.html","id":"packages","chapter":"1 Univariate and multivariate regression","heading":"Packages","text":"code chunk shows loading packages required analyses.","code":"\npacman::p_load(\n  rio,          # File import\n  here,         # File locator\n  tidyverse,    # data management + ggplot2 graphics, \n  stringr,      # manipulate text strings \n  purrr,        # loop over objects in a tidy way\n  gtsummary,    # summary statistics and tests \n  broom,        # tidy up results from regressions\n  parameters,   # alternative to tidy up results from regressions\n  see           # alternative to visualise forest plots\n  )"},{"path":"univariate-and-multivariate-regression.html","id":"load-data","chapter":"1 Univariate and multivariate regression","heading":"Load data","text":"example dataset used section linelist individual cases simulated epidemic. dataset imported using import() function rio package. See page [Import export] various ways import data.first 50 rows linelist displayed .","code":"\n# import the linelist\nlinelist <- rio::import(\"linelist_cleaned.xlsx\")"},{"path":"univariate-and-multivariate-regression.html","id":"clean-data","chapter":"1 Univariate and multivariate regression","heading":"Clean data","text":"Convert 1’s 0’sBelow convert certain columns “yes”/“” 1/0, better function models. efficiently, define vector column names explanatory variables.apply function case_when() convert specified values 1’s 0’s. function applied explanatory_vars columns using across() (see page [Grouping data]).Drop rows missing values\r\n, add column age explanatory_vars (age produced error previous case_when() operation). pipe linelist drop_na() remove rows missing values outcome column explanatory_vars columns.number rows remaining linelist 4166.","code":"\n## define variables of interest \nexplanatory_vars <- c(\"gender\", \"fever\", \"chills\", \"cough\", \"aches\", \"vomit\")\n## convert dichotomous variables to 0/1 \nlinelist <- linelist %>% \n  mutate(\n    ## for each of the variables listed and \"outcome\"\n    across(\n      all_of(c(explanatory_vars, \"outcome\")), \n      ## recode male, yes and death to 1; female, no and recover to 0\n      ## otherwise set to missing\n           ~case_when(\n             . %in% c(\"m\", \"yes\", \"Death\")   ~ 1,\n             . %in% c(\"f\", \"no\",  \"Recover\") ~ 0, \n             TRUE                            ~ NA_real_\n           ))\n  )\n## add in age_category to the explanatory vars \nexplanatory_vars <- c(explanatory_vars, \"age_cat\")\n\n## drop rows with missing information for variables of interest \nlinelist <- linelist %>% \n  drop_na(any_of(c(\"outcome\", explanatory_vars)))"},{"path":"univariate-and-multivariate-regression.html","id":"univariate","chapter":"1 Univariate and multivariate regression","heading":"1.3 Univariate","text":"Just like page [Descriptive analysis], use case determine R package use. present two options univariate analysis:Use functions available base quickly print results console. Accompanied broom package tidy outputs.Use gtsummary package can use individual regression","code":""},{"path":"univariate-and-multivariate-regression.html","id":"gtsummary-package","chapter":"1 Univariate and multivariate regression","heading":"gtsummary package","text":"present use tbl_uvregression() gtsummary package. Just like page [Descriptive analysis], gtsummary functions good job running statistics producing professional-looking outputs.case, select necessary columns linelist pipe tbl_uvregression(). going run univariate regression columns defined explanatory_vars Preparation section (gender, fever, chills, cough, aches, vomit, age_cat).Within function , provide method = glm (quotes), outcome column outcome, specify want run logistic regression (’s list specify multiple), tell exponentiate results.output HTML contains counts\r\n          1\r\n          \r\n           \r\n          = Odds Ratio, CI = Confidence Interval\r\n          ","code":"\nuniv_tab <- linelist %>% \n  ## select variables of interest\n  dplyr::select(explanatory_vars, outcome) %>% \n  ## produce univariate table\n  tbl_uvregression(\n    ## define regression want to run (generalised linear model)\n    method = glm, \n    ## define outcome variable\n    y = outcome, \n    ## define what type of glm want to run (logistic)\n    method.args = list(family = binomial), \n    ## exponentiate the outputs to produce odds ratios (rather than log odds)\n    exponentiate = TRUE\n    )\n\n## view univariate results table \nuniv_tab"},{"path":"univariate-and-multivariate-regression.html","id":"base-r","chapter":"1 Univariate and multivariate regression","heading":"base R","text":"produce odds ratios logistic regression use glm() function stats package (part base R). GLM acronym Generalized Linear Model. Unlike gtsummary, need run multiple times (e.g. within loop) run univariate regression multiple variables. example given .","code":""},{"path":"univariate-and-multivariate-regression.html","id":"univariate-glm-on-one-variable","chapter":"1 Univariate and multivariate regression","heading":"Univariate glm() on one variable","text":"model provided glm() equation, outcome left explanatory variables right tilde ~. example assessing association different age categories outcome death (now coded 1, see Preparation section).dataset specified dataset = argument.family = set “binomial” indicate logistic regression. Options family = . necessary, can also specify link function syntax glm(formula, family=familytype(link=linkfunction), data=).Type ?glm options.output glm() prints console - log odds. baseline reference category first factor level age_cat.single exposure variable, use tidy() \r\nbroom package get exponentiated log odds ratio estimates confidence\r\nintervals. demonstrate combine model outputs table \r\ncounts.output model (tidied via broom):can combine model results table linelist counts. , operate linelist used model:Group rows outcome, get counts age categoryPivot wider column age_cat, 0, 1Remove row NA age_cat, applicable, align model resultsNow can bind two tables together horizontally bind_cols(). case, . represents piped object counts_table bind model. use select() pick columns keep order.","code":"\nglm(outcome ~ age_cat, family = \"binomial\", data = linelist)## \r\n## Call:  glm(formula = outcome ~ age_cat, family = \"binomial\", data = linelist)\r\n## \r\n## Coefficients:\r\n##  (Intercept)    age_cat5-9  age_cat10-14  age_cat15-19  age_cat20-29  age_cat30-49  age_cat50-69    age_cat70+  \r\n##       0.3505        0.1153       -0.1350       -0.1201       -0.1704       -0.1576        0.1379       -0.3505  \r\n## \r\n## Degrees of Freedom: 4165 Total (i.e. Null);  4158 Residual\r\n## Null Deviance:       5693 \r\n## Residual Deviance: 5680  AIC: 5696\nmodel <- glm(\n  ## define the variables of interest\n  outcome ~ age_cat, \n  ## define the type of regression (logistic)\n  family = \"binomial\", \n  ## define your dataset\n  data = linelist) %>% \n  ## clean up the outputs of the regression (exponentiate and produce CIs)\n  tidy(\n      exponentiate = TRUE, \n      conf.int = TRUE)\ncounts_table <- linelist %>% \n  ## get counts of variable of interest grouped by outcome\n  group_by(outcome) %>% \n  count(age_cat) %>% \n  ## spread to wide format (as in cross-tabulation)\n  pivot_wider(names_from = outcome, values_from = n) %>% \n  ## drop rows with missings\n  filter(!is.na(age_cat))\ncombined <- counts_table %>% \n  ## merge with the outputs of the regression \n  bind_cols(., model) %>% \n  ## only keep columns interested in \n  select(term, 2:3, estimate, conf.low, conf.high, p.value)"},{"path":"univariate-and-multivariate-regression.html","id":"looping-through-multiple-variables","chapter":"1 Univariate and multivariate regression","heading":"Looping through multiple variables","text":"run several exposure variables produce univariate odds ratios (.e. \r\ncontrolling ), can pass vector variable names \r\nmap() function purrr package. loop variables\r\nrunning regressions one. See page [Iteration] tips., models contains log odds outputs… longer time multiple outputs combined using bind_rows(). Click see rows model., can create counts table linelist, bind models, make nice table. See page [Tables] ideas convert table HTML output.","code":"\nmodels <- explanatory_vars %>% \n  ## combine each name of the variables of interest with the name of outcome variable\n  str_c(\"outcome ~ \", .) %>% \n  ## for each string above (outcome ~ \"variable of interest)\n  map(\n    ## run a general linear model \n    ~glm(\n      ## define formula as each of the strings above\n      as.formula(.x), \n      ## define type of glm (logistic)\n      family = \"binomial\", \n      ## define your dataset\n      data = linelist)\n  ) %>% \n  ## for each of the output regressions from above \n  map(\n    ## tidy the output\n    ~tidy(\n      ## each of the regressions \n      .x, \n      ## exponentiate and produce CIs\n      exponentiate = TRUE, \n      conf.int = TRUE)\n  ) %>% \n  ## collapse the list of regressions outputs in to one data frame\n  bind_rows()\n## for each explanatory variable\nuniv_tab_base <- map(explanatory_vars, \n      ~{linelist %>% \n          ## group data set by outcome\n          group_by(outcome) %>% \n          ## produce counts for variable of interest\n          count(.data[[.x]]) %>% \n          ## spread to wide format (as in cross-tabulation)\n          pivot_wider(names_from = outcome, values_from = n) %>% \n          ## drop rows with missings\n          filter(!is.na(.data[[.x]])) %>% \n          ## change the variable of interest column to be called \"variable\"\n          rename(\"variable\" = .x) %>% \n          ## change the variable of interest column to be a character \n          ## otherwise non-dichotomous (categorical) variables come out as factor and cant be merged\n          mutate(variable = as.character(variable))\n                 }\n      ) %>% \n  ## collapse the list of count outputs in to one data frame\n  bind_rows() %>% \n  ## merge with the outputs of the regression \n  bind_cols(., models) %>% \n  ## only keep columns interested in \n  select(term, 2:3, estimate, conf.low, conf.high, p.value)"},{"path":"univariate-and-multivariate-regression.html","id":"stratified","chapter":"1 Univariate and multivariate regression","heading":"1.4 Stratified","text":"Stratified analysis currently still worked gtsummary,\r\npage updated due course.","code":""},{"path":"univariate-and-multivariate-regression.html","id":"gtsummary-package-1","chapter":"1 Univariate and multivariate regression","heading":"gtsummary package","text":"TODO","code":""},{"path":"univariate-and-multivariate-regression.html","id":"base-r-1","chapter":"1 Univariate and multivariate regression","heading":"base R","text":"TODO","code":""},{"path":"univariate-and-multivariate-regression.html","id":"multivariable","chapter":"1 Univariate and multivariate regression","heading":"Multivariable","text":"multivariable analysis, much difference using\r\ngtsummary glm() broom present data. workflow , shown , last step pulling table together different.","code":""},{"path":"univariate-and-multivariate-regression.html","id":"base-r-glm","chapter":"1 Univariate and multivariate regression","heading":"1.4.1 base R glm()","text":"can use glm() add variables right side equation, separated plus symbols (+). run model explanatory variables run:Optionally, can leverage pre-defined vector column names create command using str_c() shown . might useful explanatory variable names changing, don’t want type .Note class saved model.Finally, must take model object apply step() function stats package, specify variable selection direction want use building model.can also turn scientific notation, clarity:Pass tidy() described exponentiate log odds CIs. one final step join ","code":"\nglm(outcome ~ gender + fever + chills + cough + aches + vomit + age_cat, family = \"binomial\", data = linelist)## \r\n## Call:  glm(formula = outcome ~ gender + fever + chills + cough + aches + \r\n##     vomit + age_cat, family = \"binomial\", data = linelist)\r\n## \r\n## Coefficients:\r\n##  (Intercept)        gender         fever        chills         cough         aches         vomit    age_cat5-9  age_cat10-14  \r\n##   0.28493722    0.03742866   -0.05370896    0.00006619    0.08773254    0.09387777    0.01519181    0.11980913   -0.13387795  \r\n## age_cat15-19  age_cat20-29  age_cat30-49  age_cat50-69    age_cat70+  \r\n##  -0.12292817   -0.17504784   -0.16993218    0.11501080   -0.37383104  \r\n## \r\n## Degrees of Freedom: 4165 Total (i.e. Null);  4152 Residual\r\n## Null Deviance:       5693 \r\n## Residual Deviance: 5678  AIC: 5706\n## run a regression with all variables of interest \nmv_reg <- explanatory_vars %>% \n  ## combine all names of the variables of interest separated by a plus\n  str_c(collapse = \"+\") %>% \n  ## combined the names of variables of interest with outcome in formula style\n  str_c(\"outcome ~ \", .) %>% \n  glm(## define type of glm (logistic)\n      family = \"binomial\", \n      ## define your dataset\n      data = linelist) \nclass(mv_reg)## [1] \"glm\" \"lm\"\n## choose a model using forward selection based on AIC\n## you can also do \"backward\" or \"both\" by adjusting the direction\nfinal_mv_reg <- mv_reg %>%\n  step(direction = \"forward\", trace = FALSE)\noptions(scipen=999)\nmv_tab_base <- final_mv_reg %>% \n  ## get a tidy dataframe of estimates \n  broom::tidy(exponentiate = TRUE, conf.int = TRUE)"},{"path":"univariate-and-multivariate-regression.html","id":"combine-univariate-and-multivariate","chapter":"1 Univariate and multivariate regression","heading":"Combine univariate and multivariate","text":"","code":""},{"path":"univariate-and-multivariate-regression.html","id":"with-gtsummary","chapter":"1 Univariate and multivariate regression","heading":"With gtsummary","text":"gtsummary package provides tbl_regression function, \r\ntake outputs regression (glm case) produce easy\r\nsummary table.\r\ncan also combine several different output tables produced gtsummary \r\ntbl_merge function.\r\n          1\r\n          \r\n           \r\n          = Odds Ratio, CI = Confidence Interval\r\n          ","code":"\n## show results table of final regression \nmv_tab <- tbl_regression(final_mv_reg, exponentiate = TRUE)\n\n## combine with univariate results \ntbl_merge(\n  tbls = list(univ_tab, mv_tab), \n  tab_spanner = c(\"**Univariate**\", \"**Multivariable**\"))"},{"path":"univariate-and-multivariate-regression.html","id":"with-dplyr-join","chapter":"1 Univariate and multivariate regression","heading":"With dplyr join","text":"combine glm()/tidy()univariate multivariate outputs, can also following dplyr join functions.Join univariate results earlier (contains counts) tidied multivariate resultsUse select() keep columns want, specify order, re-name themUse round() two decimal places column class Double","code":"\n## combine univariate and multivariable tables \nleft_join(univ_tab_base, mv_tab_base, by = \"term\") %>% \n  ## choose columns and rename them\n  select( # new name =  old name\n    \"characteristic\" = term, \n    \"recovered\"      = \"0\", \n    \"dead\"           = \"1\", \n    \"univ_or\"        = estimate.x, \n    \"univ_ci_low\"    = conf.low.x, \n    \"univ_ci_high\"   = conf.high.x,\n    \"univ_pval\"      = p.value.x, \n    \"mv_or\"          = estimate.y, \n    \"mvv_ci_low\"     = conf.low.y, \n    \"mv_ci_high\"     = conf.high.y,\n    \"mv_pval\"        = p.value.y \n  ) %>% \n  mutate(across(is.double, round, 2))## Warning: Problem with `mutate()` input `..1`.\r\n## i Predicate functions must be wrapped in `where()`.\r\n## \r\n##   # Bad\r\n##   data %>% select(is.double)\r\n## \r\n##   # Good\r\n##   data %>% select(where(is.double))\r\n## \r\n## i Please update your code.\r\n## This message is displayed once per session.\r\n## i Input `..1` is `across(is.double, round, 2)`.## # A tibble: 20 x 11\r\n##    characteristic recovered  dead univ_or univ_ci_low univ_ci_high univ_pval mv_or mvv_ci_low mv_ci_high mv_pval\r\n##    <chr>              <int> <int>   <dbl>       <dbl>        <dbl>     <dbl> <dbl>      <dbl>      <dbl>   <dbl>\r\n##  1 (Intercept)          902  1195    1.32        1.22         1.44     0      1.33       1.03       1.72   0.03 \r\n##  2 gender               888  1181    1           0.89         1.13     0.95   1.04       0.91       1.18   0.570\r\n##  3 (Intercept)          352   489    1.39        1.21         1.59     0      1.33       1.03       1.72   0.03 \r\n##  4 fever               1438  1887    0.94        0.81         1.1      0.47   0.95       0.81       1.1    0.49 \r\n##  5 (Intercept)         1436  1907    1.33        1.24         1.42     0      1.33       1.03       1.72   0.03 \r\n##  6 chills               354   469    1           0.86         1.16     0.98   1          0.86       1.17   1    \r\n##  7 (Intercept)          269   333    1.24        1.05         1.45     0.01   1.33       1.03       1.72   0.03 \r\n##  8 cough               1521  2043    1.09        0.91         1.29     0.36   1.09       0.92       1.3    0.32 \r\n##  9 (Intercept)         1615  2126    1.32        1.23         1.4      0      1.33       1.03       1.72   0.03 \r\n## 10 aches                175   250    1.09        0.89         1.33     0.43   1.1        0.9        1.35   0.37 \r\n## 11 (Intercept)          900  1182    1.31        1.2          1.43     0      1.33       1.03       1.72   0.03 \r\n## 12 vomit                890  1194    1.02        0.9          1.15     0.73   1.02       0.9        1.15   0.81 \r\n## 13 (Intercept)          324   460    1.42        1.23         1.64     0      1.33       1.03       1.72   0.03 \r\n## 14 age_cat5-9           300   478    1.12        0.92         1.37     0.26   1.13       0.92       1.38   0.25 \r\n## 15 age_cat10-14         287   356    0.87        0.71         1.08     0.21   0.87       0.71       1.08   0.21 \r\n## 16 age_cat15-19         247   311    0.89        0.71         1.1      0.28   0.88       0.71       1.1    0.27 \r\n## 17 age_cat20-29         365   437    0.84        0.69         1.03     0.09   0.84       0.69       1.03   0.09 \r\n## 18 age_cat30-49         235   285    0.85        0.68         1.07     0.17   0.84       0.67       1.06   0.15 \r\n## 19 age_cat50-69          27    44    1.15        0.7          1.91     0.59   1.12       0.68       1.88   0.66 \r\n## 20 age_cat70+             5     5    0.7         0.19         2.55     0.580  0.69       0.19       2.5    0.56"},{"path":"univariate-and-multivariate-regression.html","id":"interaction-terms","chapter":"1 Univariate and multivariate regression","heading":"Interaction terms","text":"want specify interaction two variables glm(), separate variables colon :. can separate asterisk * shorthand includ two variables interaction:","code":"\nglm(outcome ~ gender + age_cat * fever, family = \"binomial\", data = linelist)"},{"path":"univariate-and-multivariate-regression.html","id":"forest-plot","chapter":"1 Univariate and multivariate regression","heading":"1.5 Forest plot","text":"section shows produce plot outputs regression.\r\ntwo options, can build plot using ggplot2 use \r\npackage called easystats.","code":""},{"path":"univariate-and-multivariate-regression.html","id":"ggplot2-package","chapter":"1 Univariate and multivariate regression","heading":"ggplot2 package","text":"can build forest plot ggplot() plotting elements multivariate regression results. Add layers:estimates geom_point()confidence intervals geom_errorbar()vertical line = 1 geom_vline()may want re-arrange order variables/levels y-axis (see order age_cat levels alphabetical sensical). , use fct_relevel() forcats package classify column term factor specify order manually. See page [Factors] details.","code":"\n## remove the intercept term from your multivariable results\nmv_tab_base %>% \n  filter(term != \"(Intercept)\") %>% \n  ## plot with variable on the y axis and estimate (OR) on the x axis\n  ggplot(aes(x = estimate, y = term)) +\n  ## show the estimate as a point\n  geom_point() + \n  ## add in an error bar for the confidence intervals\n  geom_errorbar(aes(xmin = conf.low, xmax = conf.high)) + \n  ## show where OR = 1 is for reference as a dashed line\n  geom_vline(xintercept = 1, linetype = \"dashed\")"},{"path":"univariate-and-multivariate-regression.html","id":"easystats-packages","chapter":"1 Univariate and multivariate regression","heading":"easystats packages","text":"alternative want decide different things required\r\nggplot, use combination easystats packages.\r\ncase paramaters package function model_parameters equivalent\r\nbroom package function tidy. see package accepts outputs\r\ncreates default forest plot ggplot object.","code":"\n## remove the intercept term from your multivariable results\nfinal_mv_reg %>% \n  model_parameters(exponentiate = TRUE) %>% \n  plot()"},{"path":"univariate-and-multivariate-regression.html","id":"resources","chapter":"1 Univariate and multivariate regression","heading":"1.6 Resources","text":"Much information page adapted resources vignettes online:gtsummarysthda stepwise regression","code":""}]

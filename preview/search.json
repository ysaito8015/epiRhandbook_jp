[{"path":"index.html","id":"welcome","chapter":"Welcome","heading":"Welcome","text":"","code":""},{"path":"index.html","id":"about-this-handbook","chapter":"Welcome","heading":"About this handbook","text":"free open-source R reference guide catered applied epidemiologists.book strives :Serve quick reference guide - textbookAddress common epidemiological problems via task-centered examplesBe accessible settings limited technical support low internet-connectivity (downloadable version)Contain clear simple language, step--step instructions many commentsBe living document, growing adapting new best practices“Epis” using R must often search online read dozens forum pages complete common data manipulation visualization tasks. online tutorials epidemiology-oriented. Furthermore, epidemiologists often work low internet-connectivity environments limited technical support. handbook aims fill gaps.","code":""},{"path":"index.html","id":"how-to-read-this-handbook","chapter":"Welcome","heading":"How to read this handbook","text":"Review pages tabs Table ContentsReview pages tabs Table ContentsSearch via search box Table ContentsSearch via search box Table ContentsClick “clipboard” icon upper-right code chunk copy itClick “clipboard” icon upper-right code chunk copy itClick download offline versionClick download offline versionIf use appreciate resource, let us know !use appreciate resource, let us know !","code":""},{"path":"index.html","id":"contribute","chapter":"Welcome","heading":"Contribute","text":"suggestions want contribute, please post issue github repository.","code":""},{"path":"index.html","id":"acknowledgements","chapter":"Welcome","heading":"Acknowledgements","text":"","code":""},{"path":"index.html","id":"contributors","chapter":"Welcome","heading":"Contributors","text":"handbook collaborative team production; conceived, written, edited epidemiologists public health practitioners around world. team members:Editor--Chief:Editorial core team: …(list)…Authors: …(list)…Reviewers: …(list)…Advisers …(list)…","code":""},{"path":"index.html","id":"funding-and-programmatic-support","chapter":"Welcome","heading":"Funding and programmatic support","text":"Training Programs Epidemiology Public Health Interventions Network (TEPHINET)EPIET Alumni Network (EAN)","code":""},{"path":"index.html","id":"data-sources","chapter":"Welcome","heading":"Data sources","text":"outbreaks R package","code":""},{"path":"index.html","id":"inspiration","chapter":"Welcome","heading":"Inspiration","text":"“R4Epis” project (collaboration MSF RECON)R Epidemics Consortium (RECON)R Data Science book (R4DS)bookdown: Authoring Books Technical Documents R Markdown\r\nspecific tutorials vignettes credited relevant pages","code":""},{"path":"index.html","id":"image-credits","chapter":"Welcome","heading":"Image credits","text":"Logo: CDC Public Health Image library, R Graph Gallery2013 Yemen looking mosquito breeding sitesEbola virusSurvey RajasthanNetwork","code":""},{"path":"index.html","id":"license-and-terms-of-use","chapter":"Welcome","heading":"License and Terms of Use","text":"Creative Commons license TBD…","code":""},{"path":"transmission-chains.html","id":"transmission-chains","chapter":"1 Transmission chains","heading":"1 Transmission chains","text":"","code":""},{"path":"transmission-chains.html","id":"overview","chapter":"1 Transmission chains","heading":"1.1 Overview","text":"primary tool handle, analyse visualise transmission chains contact\r\ntracing data package epicontacts, developed folks \r\nRECON. Try interactive plot hovering nodes \r\ninformation, dragging move clicking highlight downstream cases.","code":""},{"path":"transmission-chains.html","id":"preparation","chapter":"1 Transmission chains","heading":"1.2 Preparation","text":"","code":""},{"path":"transmission-chains.html","id":"packages-and-data","chapter":"1 Transmission chains","heading":"1.2.1 Packages and data","text":"First load standard packages required data import manipulation.require development version epicontacts, can \r\ninstalled github using remotes package. need run code\r\n, every time use package.Next, import standard, cleaned linelist analysis.","code":"\npacman::p_load(\n   rio,          # File import\n   here,         # File locator\n   tidyverse,    # Data management + ggplot2 graphics\n   remotes       # Package installation from github\n)\nremotes::install_github(\"reconhub/epicontacts@timeline\")\n# import the cleaned linelist\nlinelist <- rio::import(\"linelist_cleaned.xlsx\")"},{"path":"transmission-chains.html","id":"creating-an-epicontacts-object","chapter":"1 Transmission chains","heading":"1.2.2 Creating an epicontacts object","text":"need create epicontacts object, requires two types \r\ndata:linelist documenting cases columns variables rows correspond unique casesa list edges defining links cases basis unique IDs (can contacts,\r\ntransmission events, etc.)already linelist, just need create list edges \r\ncases, specifically IDs. can extract transmission links \r\nlinelist linking infector column case_id column. point can also add “edge\r\nproperties”, mean variable describing link two\r\ncases, cases . illustration, add location\r\nvariable describing location transmission event, duration\r\nvariable describing duration contact days.code , dplyr function transmute similar mutate, except keeps\r\ncolumns specified within function. drop_na function \r\nfilter rows specified columns NA value; \r\ncase, want keep rows infector known.can now create epicontacts object using make_epicontacts\r\nfunction. need specify column linelist points unique case\r\nidentifier, well columns contacts point unique\r\nidentifiers cases involved link. links directional \r\ninfection going infector case, need specify\r\narguments accordingly. therefore also set directed\r\nargument TRUE, affect future operations.Upon examining epicontacts objects, can see case_id column\r\nlinelist renamed id case_id infector\r\ncolumns contacts renamed . ensures\r\nconsistency subsequent handling, visualisation analysis operations.","code":"\n## generate contacts\ncontacts <- linelist %>%\n  transmute(\n    infector = infector,\n    case_id = case_id,\n    location = sample(c(\"Community\", \"Nosocomial\"), n(), TRUE),\n    duration = sample.int(10, n(), TRUE)\n  ) %>%\n  drop_na(infector)\n## generate epicontacts object\nepic <- make_epicontacts(\n  linelist = linelist,\n  contacts = contacts,\n  id = \"case_id\",\n  from = \"infector\",\n  to = \"case_id\",\n  directed = TRUE\n)\n## view epicontacts object\nepic## \r\n## /// Epidemiological Contacts //\r\n## \r\n##   // class: epicontacts\r\n##   // 5,888 cases in linelist; 3,800 contacts; directed \r\n## \r\n##   // linelist\r\n## \r\n## # A tibble: 5,888 x 30\r\n##    id    age_unit   age source infector   lat   lon hospital gender age_years age_cat age_cat5 date_outcome outcome generation date_infection date_onset\r\n##    <chr> <chr>    <dbl> <chr>  <chr>    <dbl> <dbl> <chr>    <chr>      <dbl> <fct>   <fct>    <date>       <chr>        <dbl> <date>         <date>    \r\n##  1 40ae~ years       22 other  8508df    8.49 -13.3 Port Ho~ f             22 20-29   20-24    NA           <NA>             4 2014-05-04     NA        \r\n##  2 b881~ years        6 other  f90f5f    8.48 -13.2 Port Ho~ f              6 5-9     5-9      NA           <NA>             3 2014-05-04     2014-05-18\r\n##  3 f96a~ years       14 other  11f8ea    8.46 -13.3 St. Mar~ m             14 10-14   10-14    2014-05-23   Recover          3 2014-05-17     2014-05-19\r\n##  4 47a5~ years       20 other  7a9f33    8.49 -13.3 Missing  m             20 20-29   20-24    2014-06-06   Recover          3 2014-05-03     2014-05-26\r\n##  5 566f~ years        4 other  be7f8a    8.48 -13.2 Other    m              4 0-4     0-4      2014-06-03   Recover          3 2014-05-24     2014-05-27\r\n##  6 acf4~ years       27 other  1511c5    8.48 -13.3 Central~ m             27 20-29   25-29    2014-06-27   Recover          6 2014-05-25     2014-05-27\r\n##  7 ce9c~ years       22 other  53da57    8.47 -13.2 Port Ho~ m             22 20-29   20-24    2014-06-17   Death            5 2014-05-27     2014-05-27\r\n##  8 56d3~ years        4 <NA>   <NA>      8.45 -13.2 St. Mar~ f              4 0-4     0-4      NA           Death            5 NA             2014-05-27\r\n##  9 07e3~ years       17 other  893f25    8.46 -13.2 Missing  f             17 15-19   15-19    2014-06-01   Recover          4 2014-05-22     2014-05-27\r\n## 10 dbeb~ years       17 <NA>   <NA>      8.49 -13.2 Port Ho~ m             17 15-19   15-19    2014-06-05   <NA>             7 NA             2014-06-02\r\n## # ... with 5,878 more rows, and 13 more variables: date_hospitalisation <date>, wt_kg <dbl>, ht_cm <dbl>, ct_blood <dbl>, fever <chr>, chills <chr>, cough <chr>,\r\n## #   aches <chr>, vomit <chr>, temp <dbl>, time_admission <chr>, bmi <dbl>, days_onset_hosp <dbl>\r\n## \r\n##   // contacts\r\n## \r\n## # A tibble: 3,800 x 4\r\n##    from   to     location   duration\r\n##    <chr>  <chr>  <chr>         <int>\r\n##  1 8508df 40ae5f Nosocomial        8\r\n##  2 f90f5f b8812a Community        10\r\n##  3 11f8ea f96aa5 Nosocomial        7\r\n##  4 7a9f33 47a5f5 Nosocomial        5\r\n##  5 be7f8a 566f9e Nosocomial        5\r\n##  6 1511c5 acf422 Nosocomial        2\r\n##  7 53da57 ce9c02 Nosocomial        7\r\n##  8 893f25 07e3e8 Nosocomial        2\r\n##  9 dae8c7 7e95d1 Community         2\r\n## 10 996f3a 2978ac Community         8\r\n## # ... with 3,790 more rows"},{"path":"transmission-chains.html","id":"handling","chapter":"1 Transmission chains","heading":"1.3 Handling","text":"","code":""},{"path":"transmission-chains.html","id":"subsetting","chapter":"1 Transmission chains","heading":"1.3.1 Subsetting","text":"subset() method epicontacts objects allows , among things,\r\nfiltering networks based properties linelist (“node attributes”) contacts\r\ndatabase (“edge attributes”). values must passed named lists \r\nrespective argument. example, code keeping \r\nmale cases linelist infection date April \r\nJuly 2014 (dates specified ranges), transmission links occured\r\nhospital.can use thin function either filter linelist include cases\r\nfound contacts setting argument = \"linelist\", \r\nfilter contacts include cases found linelist setting\r\nargument = \"contacts\". code , filtering \r\nepicontacts object keep transmission links involving male cases\r\ninfected April July filtered . can see \r\ntwo known transmission links fit specification.addition subsetting node edge attributes, networks can pruned \r\ninclude components connected certain nodes. cluster_id\r\nargument takes vector case IDs returns linelist individuals \r\nlinked, directly indirectly, IDs. code , can see\r\ntotal 13 linelist cases involved clusters containing\r\n2ae019 71577a.subset() method epicontacts objects also allows filtering cluster\r\nsize using cs, cs_min cs_max arguments. code , \r\nkeeping cases linked clusters 10 cases larger, can see \r\n271 linelist cases involved clusters.","code":"\nsub_attributes <- subset(\n  epic,\n  node_attribute = list(\n    gender = \"m\",\n    date_infection = as.Date(c(\"2014-04-01\", \"2014-07-01\"))\n  ), \n  edge_attribute = list(location = \"Nosocomial\")\n)\nsub_attributes## \r\n## /// Epidemiological Contacts //\r\n## \r\n##   // class: epicontacts\r\n##   // 69 cases in linelist; 1,917 contacts; directed \r\n## \r\n##   // linelist\r\n## \r\n## # A tibble: 69 x 30\r\n##    id    age_unit   age source infector   lat   lon hospital gender age_years age_cat age_cat5 date_outcome outcome generation date_infection date_onset\r\n##    <chr> <chr>    <dbl> <chr>  <chr>    <dbl> <dbl> <chr>    <chr>      <dbl> <fct>   <fct>    <date>       <chr>        <dbl> <date>         <date>    \r\n##  1 f96a~ years       14 other  11f8ea    8.46 -13.3 St. Mar~ m             14 10-14   10-14    2014-05-23   Recover          3 2014-05-17     2014-05-19\r\n##  2 47a5~ years       20 other  7a9f33    8.49 -13.3 Missing  m             20 20-29   20-24    2014-06-06   Recover          3 2014-05-03     2014-05-26\r\n##  3 566f~ years        4 other  be7f8a    8.48 -13.2 Other    m              4 0-4     0-4      2014-06-03   Recover          3 2014-05-24     2014-05-27\r\n##  4 acf4~ years       27 other  1511c5    8.48 -13.3 Central~ m             27 20-29   25-29    2014-06-27   Recover          6 2014-05-25     2014-05-27\r\n##  5 ce9c~ years       22 other  53da57    8.47 -13.2 Port Ho~ m             22 20-29   20-24    2014-06-17   Death            5 2014-05-27     2014-05-27\r\n##  6 2978~ years       18 other  996f3a    8.48 -13.2 Port Ho~ m             18 15-19   15-19    2014-06-15   Death            4 2014-05-30     2014-06-06\r\n##  7 c36e~ years       16 other  057e7a    8.48 -13.3 Port Ho~ m             16 15-19   15-19    2014-06-24   Death            8 2014-06-15     2014-06-20\r\n##  8 9e74~ years       26 other  02d8fd    8.47 -13.2 St. Mar~ m             26 20-29   25-29    2014-07-08   Recover         10 2014-06-20     2014-06-22\r\n##  9 7157~ years        4 other  542d07    8.48 -13.2 Port Ho~ m              4 0-4     0-4      2014-07-11   Death            6 2014-06-23     2014-07-05\r\n## 10 90e5~ years       11 other  ea3740    8.46 -13.3 Port Ho~ m             11 10-14   10-14    2014-07-16   <NA>             5 2014-06-18     2014-07-13\r\n## # ... with 59 more rows, and 13 more variables: date_hospitalisation <date>, wt_kg <dbl>, ht_cm <dbl>, ct_blood <dbl>, fever <chr>, chills <chr>, cough <chr>,\r\n## #   aches <chr>, vomit <chr>, temp <dbl>, time_admission <chr>, bmi <dbl>, days_onset_hosp <dbl>\r\n## \r\n##   // contacts\r\n## \r\n## # A tibble: 1,917 x 4\r\n##    from   to     location   duration\r\n##    <chr>  <chr>  <chr>         <int>\r\n##  1 8508df 40ae5f Nosocomial        8\r\n##  2 11f8ea f96aa5 Nosocomial        7\r\n##  3 7a9f33 47a5f5 Nosocomial        5\r\n##  4 be7f8a 566f9e Nosocomial        5\r\n##  5 1511c5 acf422 Nosocomial        2\r\n##  6 53da57 ce9c02 Nosocomial        7\r\n##  7 893f25 07e3e8 Nosocomial        2\r\n##  8 3ff1bc a6c614 Nosocomial        1\r\n##  9 057e7a c36eb4 Nosocomial        1\r\n## 10 02d8fd 9e74c4 Nosocomial       10\r\n## # ... with 1,907 more rows\nsub_attributes <- thin(sub_attributes, what = \"contacts\")\nnrow(sub_attributes$contacts)## [1] 4\nsub_id <- subset(epic, cluster_id = c(\"2ae019\",\"71577a\"))\nnrow(sub_id$linelist)## [1] 13\nsub_cs <- subset(epic, cs_min = 10)\nnrow(sub_cs$linelist)## [1] 271"},{"path":"transmission-chains.html","id":"accessing-ids","chapter":"1 Transmission chains","heading":"1.3.2 Accessing IDs","text":"get_id() function retrieves information case IDs \r\ndataset, can parameterized follows:linelist: IDs line list datacontacts: IDs contact dataset (“” “” combined): IDs “” column contact datsetto IDs “” column contact datasetall: IDs appear anywhere either datasetcommon: IDs appear contacts dataset line listFor example, first ten IDs contacts dataset?many IDs found linelist contacts?","code":"\ncontacts_ids <- get_id(epic, \"contacts\")\nhead(contacts_ids, n = 10)##  [1] \"8508df\" \"f90f5f\" \"11f8ea\" \"7a9f33\" \"be7f8a\" \"1511c5\" \"53da57\" \"893f25\" \"dae8c7\" \"996f3a\"\nlength(get_id(epic, \"common\"))## [1] 4352"},{"path":"transmission-chains.html","id":"visualization","chapter":"1 Transmission chains","heading":"1.4 Visualization","text":"","code":""},{"path":"transmission-chains.html","id":"basic-plotting","chapter":"1 Transmission chains","heading":"1.4.1 Basic plotting","text":"visualisations epicontacts objects handled plot\r\nfunction. first filter epicontacts object include \r\ncases onset dates June 2014 using subset function, \r\ninclude contacts linked cases using thin function.can create basic, interactive plot simply follows:can move nodes around dragging , hover \r\ninformation click highlight connected cases.large number arguments modify plot. cover\r\nmain ones , check documentation via ?vis_epicontacts (\r\nfunction called using plot epicontacts object) get full\r\ndescription function arguments.","code":"\n## subset epicontacts object\nsub <- epic %>%\n  subset(\n    node_attribute = list(date_onset = c(as.Date(c(\"2014-06-30\", \"2014-06-01\"))))\n  ) %>%\n thin(\"contacts\")\n## plot epicontacts object\nplot(\n  sub,\n  width = 700,\n  height = 700\n)"},{"path":"transmission-chains.html","id":"visualising-node-attributes","chapter":"1 Transmission chains","heading":"1.4.1.1 Visualising node attributes","text":"Node color, node shape node size can mapped given column linelist\r\nusing node_color, node_shape node_size arguments. similar\r\naes syntax may recognise ggplot2.specific colors, shapes sizes nodes can specified follows:Colors via col_pal argument, either providing name list manual\r\nspecification color done , providing color palette\r\nfunction colorRampPalette(c(\"black\", \"red\", \"orange\")), \r\nprovide gradient colours ones specified.Colors via col_pal argument, either providing name list manual\r\nspecification color done , providing color palette\r\nfunction colorRampPalette(c(\"black\", \"red\", \"orange\")), \r\nprovide gradient colours ones specified.Shapes passing named list shapes argument, specifying one shape\r\nunique element linelist column specified node_shape\r\nargument. See codeawesome available shapes.Shapes passing named list shapes argument, specifying one shape\r\nunique element linelist column specified node_shape\r\nargument. See codeawesome available shapes.Size passing size range nodes size_range argument.Size passing size range nodes size_range argument.example, color represents outcome, shape gender size\r\nage:","code":"\nplot(\n  sub, \n  node_color = \"outcome\",\n  node_shape = \"gender\",\n  node_size = 'age',\n  col_pal = c(Death = \"firebrick\", Recover = \"green\"),\n  shapes = c(f = \"female\", m = \"male\"),\n  size_range = c(40, 60),\n  height = 700,\n  width = 700\n)"},{"path":"transmission-chains.html","id":"visualising-edge-attributes","chapter":"1 Transmission chains","heading":"1.4.1.2 Visualising edge attributes","text":"Edge color, width linetype can mapped given column contacts\r\ndataframe using edge_color, edge_width edge_linetype\r\narguments. specific colors widths edges can specified follows:Colors via edge_col_pal argument, manner used col_pal.Colors via edge_col_pal argument, manner used col_pal.Widths passing size range nodes width_range argument.Widths passing size range nodes width_range argument.example:","code":"\nplot(\n  sub, \n  node_color = \"outcome\",\n  node_shape = \"gender\",\n  node_size = 'age',\n  col_pal = c(Death = \"firebrick\", Recover = \"green\"),\n  shapes = c(f = \"female\", m = \"male\"),\n  size_range = c(40, 60),\n  edge_color = 'location',\n  edge_linetype = 'location',\n  edge_width = 'duration',\n  edge_col_pal = c(Community = \"orange\", Nosocomial = \"purple\"),\n  width_range = c(1, 3),\n  height = 700,\n  width = 700\n)"},{"path":"transmission-chains.html","id":"temporal-axis","chapter":"1 Transmission chains","heading":"1.4.2 Temporal axis","text":"can also visualise network along temporal axis mapping x_axis\r\nargument column linelist. example , x-axis\r\nrepresents date symptom onset. also specified arrow_size\r\nargument ensure arrows large, set label = FALSE make\r\nfigure less cluttered.large number additional arguments futher specify \r\nnetwork visualised along temporal axis, can check \r\nvia ?vis_temporal_interactive (function called using plot \r\nepicontacts object x_axis specified). ’ll go \r\n.","code":"\nplot(\n  sub,\n  x_axis = \"date_onset\",\n  node_color = \"outcome\",\n  col_pal = c(Death = \"firebrick\", Recover = \"green\"),\n  arrow_size = 0.5,\n  node_size = 13,\n  label = FALSE,\n  height = 700,\n  width = 700\n)"},{"path":"transmission-chains.html","id":"specifying-transmission-tree-shape","chapter":"1 Transmission chains","heading":"1.4.2.1 Specifying transmission tree shape","text":"two main shapes transmission tree can assume, specified using\r\nnetwork_shape argument. first branching shape shown ,\r\nstraight edge connects two nodes. intuitive\r\nrepresentation, however can result overlapping edges densely connected\r\nnetwork. second shape rectangle, produces tree resembling \r\nphylogeny. example:case node can assigned unique vertical position toggling \r\nposition_dodge argument. position unconnected cases (.e. \r\nreported contacts) specified using unlinked_pos argument.position parent node relative children nodes can \r\nspecified using parent_pos argument. default option place \r\nparent node middle, however can placed bottom (parent_pos = 'bottom') top (parent_pos = 'top').","code":"\nplot(\n  sub,\n  x_axis = \"date_onset\",\n  network_shape = \"rectangle\",\n  node_color = \"outcome\",\n  col_pal = c(Death = \"firebrick\", Recover = \"green\"),\n  arrow_size = 0.5,\n  node_size = 13,\n  label = FALSE,\n  height = 700,\n  width = 700\n)\nplot(\n  sub,\n  x_axis = \"date_onset\",\n  network_shape = \"rectangle\",\n  node_color = \"outcome\",\n  col_pal = c(Death = \"firebrick\", Recover = \"green\"),\n  position_dodge = TRUE,\n  unlinked_pos = \"bottom\",\n  arrow_size = 0.5,\n  node_size = 13,\n  label = FALSE,\n  height = 700,\n  width = 700\n)\nplot(\n  sub,\n  x_axis = \"date_onset\",\n  network_shape = \"rectangle\",\n  node_color = \"outcome\",\n  col_pal = c(Death = \"firebrick\", Recover = \"green\"),\n  parent_pos = \"top\",\n  arrow_size = 0.5,\n  node_size = 13,\n  label = FALSE,\n  height = 700,\n  width = 700\n)"},{"path":"transmission-chains.html","id":"analysis","chapter":"1 Transmission chains","heading":"1.5 Analysis","text":"","code":""},{"path":"transmission-chains.html","id":"summarising","chapter":"1 Transmission chains","heading":"1.5.1 Summarising","text":"can get overview network properties using \r\nsummary function.example, can see 57% contacts cases \r\nlinelist; means linelist data significant\r\nnumber cases involved transmission chains.","code":"\n## summarise epicontacts object\nsummary(epic)## \r\n## /// Overview //\r\n##   // number of unique IDs in linelist: 5888\r\n##   // number of unique IDs in contacts: 5511\r\n##   // number of unique IDs in both: 4352\r\n##   // number of contacts: 3800\r\n##   // contacts with both cases in linelist: 56.868 %\r\n## \r\n## /// Degrees of the network //\r\n##   // in-degree summary:\r\n##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \r\n##  0.0000  0.0000  1.0000  0.5392  1.0000  1.0000 \r\n## \r\n##   // out-degree summary:\r\n##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \r\n##  0.0000  0.0000  0.0000  0.5392  1.0000  6.0000 \r\n## \r\n##   // in and out degree summary:\r\n##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \r\n##   0.000   1.000   1.000   1.078   1.000   7.000 \r\n## \r\n## /// Attributes //\r\n##   // attributes in linelist:\r\n##  age_unit age source infector lat lon hospital gender age_years age_cat age_cat5 date_outcome outcome generation date_infection date_onset date_hospitalisation wt_kg ht_cm ct_blood fever chills cough aches vomit temp time_admission bmi days_onset_hosp\r\n## \r\n##   // attributes in contacts:\r\n##  location duration"},{"path":"transmission-chains.html","id":"pairwise-characteristics","chapter":"1 Transmission chains","heading":"1.5.2 Pairwise characteristics","text":"get_pairwise() function allows processing variable(s) line list\r\naccording pair contact dataset. following example, date\r\nonset disease extracted line list order compute \r\ndifference disease date onset pair. value \r\nproduced comparison represents serial interval (si).get_pairwise() interpret class column used \r\ncomparison, adjust method comparing values accordingly. \r\nnumbers dates (like si example ), function subtract\r\nvalues. applied columns characters categorical,\r\nget_pairwise() paste values together. function also allows\r\narbitrary processing (see “f” argument), discrete combinations can \r\neasily tabulated analyzed., see significant association transmission links gender.","code":"\nsi <- get_pairwise(epic, \"date_onset\")   \nsummary(si)##    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \r\n##    0.00    5.00    9.00   10.99   15.00   99.00    1821\ntibble(si = si) %>%\n  ggplot(aes(si)) +\n  geom_histogram() +\n  labs(\n    x = \"Serial interval\",\n    y = \"Frequency\"\n  )## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.## Warning: Removed 1821 rows containing non-finite values (stat_bin).\nhead(get_pairwise(epic, \"gender\"), n = 10)##  [1] NA       NA       \"m -> m\" NA       NA       \"f -> m\" NA       \"m -> f\" \"f -> f\" NA\nget_pairwise(epic, \"gender\", f = table)##            values.to\r\n## values.from   f   m\r\n##           f 480 505\r\n##           m 510 450\nfisher.test(get_pairwise(epic, \"gender\", f = table))## \r\n##  Fisher's Exact Test for Count Data\r\n## \r\n## data:  get_pairwise(epic, \"gender\", f = table)\r\n## p-value = 0.05675\r\n## alternative hypothesis: true odds ratio is not equal to 1\r\n## 95 percent confidence interval:\r\n##  0.6991084 1.0060995\r\n## sample estimates:\r\n## odds ratio \r\n##  0.8387524"},{"path":"transmission-chains.html","id":"identifying-clusters","chapter":"1 Transmission chains","heading":"1.5.3 Identifying clusters","text":"get_clusters() function can used identify connected components\r\nepicontacts object. First, use retrieve data.frame\r\ncontaining cluster information:Let us look largest clusters. , add cluster information \r\nepicontacts object subset keep largest clusters:","code":"\nclust <- get_clusters(epic, output = \"data.frame\")\ntable(clust$cluster_size)## \r\n##    1    2    3    4    5    6    7    8    9   10   11   12   13   14 \r\n## 1536 1680 1182  784  545  342  308  208  171  100   99   24   26   42\nggplot(clust, aes(cluster_size)) +\n  geom_bar() +\n  labs(\n    x = \"Cluster size\",\n    y = \"Frequency\"\n  )\nepic <- get_clusters(epic)\nmax_size <- max(epic$linelist$cluster_size)\nplot(subset(epic, cs = max_size))"},{"path":"transmission-chains.html","id":"calculating-degrees","chapter":"1 Transmission chains","heading":"1.5.4 Calculating degrees","text":"degree node corresponds number edges connections \r\nnodes. get_degree() provides easy method calculating value \r\nepicontacts networks. high degree context indicates individual\r\ncontact many others. type argument indicates want\r\ncount -degree -degree, only_linelist argument\r\nindicates want calculate degree cases linelist.individuals ten contacts?mean number contacts?","code":"\ndeg_both <- get_degree(epic, type = \"both\", only_linelist = TRUE)\nhead(sort(deg_both, decreasing = TRUE), 10)## 916d0a 858426 6833d7 f093ea 71577a a2b371 38fc71 07c4ad c8c4d5 a127a7 \r\n##      7      6      6      6      5      5      5      5      5      5\nmean(deg_both)## [1] 1.078473"},{"path":"transmission-chains.html","id":"resources","chapter":"1 Transmission chains","heading":"1.6 Resources","text":"\r\nepicontacts page\r\nprovides overview package functions includes -depth\r\nvignettes.github page can used raise\r\nissues request features.","code":""}]

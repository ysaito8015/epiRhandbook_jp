[{"path":"index.html","id":"welcome---this-is-a-draft","chapter":"Welcome - THIS IS A DRAFT","heading":"Welcome - THIS IS A DRAFT","text":"","code":""},{"path":"index.html","id":"about-this-handbook","chapter":"Welcome - THIS IS A DRAFT","heading":"About this handbook","text":"free open-access R reference book applied epidemiologists public health practitioners.book strives :Serve quick reference guide - textbookAddress common epidemiological problems via task-centered examplesBe accessible settings limited technical support low internet-connectivity (downloadable version)Contain clear simple language, step--step instructions helpful code annotationBe living document, growing adapting new best practicesWhat gaps book address?Many epidemiologists lack formal R training transitioning SAS, STATA, statistical software.R universe changes frequently - place best practice code catered toward common epidemiologist user.Epidemiologists often search dozens online forums answers, epidemiology-oriented.epidemiologists work low internet-connectivity environments limited technical support.different R books?handbook written epidemiologists, epidemiologists. approved product specific organization. Examples techniques adapted authors lived experience local, national, academic, emergency settings.book offered download-able format settings unreliable internet.addition core R skills book uses epidemiology-centered examples cover tasks like epidemic curves, transmission chains epidemic modeling, age sex pyramids, age sex standardization, probabilistic matching records, outbreak detection methods, survey analysis, causal diagrams, survival analysis, GIS basics, phylogenetic trees, missing data imputation, automated routine reports Rmarkdown, etc…","code":""},{"path":"index.html","id":"how-to-read-this-handbook","chapter":"Welcome - THIS IS A DRAFT","heading":"How to read this handbook","text":"Search via search box Table ContentsClick “clipboard” “copy” icon copy codeSee “Resources” section page links trainingClick download offline versionIf use handbook suggestions, let us know SURVEY LINK!","code":""},{"path":"index.html","id":"edit-or-contribute","chapter":"Welcome - THIS IS A DRAFT","heading":"Edit or contribute","text":"suggestions want contribute content, please post issue submit pull request github repository.","code":""},{"path":"index.html","id":"acknowledgements","chapter":"Welcome - THIS IS A DRAFT","heading":"Acknowledgements","text":"","code":""},{"path":"index.html","id":"contributors","chapter":"Welcome - THIS IS A DRAFT","heading":"Contributors","text":"handbook collaborative team production. conceived, written, edited epidemiologists public health practitioners around world, drawn upon experiences within constellation organizations including local/state/provincial/national health departments ministries, World Health Organization (), MSF (Medecins sans frontiers / Doctors without Borders), UNHCR, WFP, hospital systems, academic institutions.team members:Editor--Chief: Neale BatraEditorial core team: Alex Spina, Amrish Baidjoe, Henry Laurenson-Schafer, Finlay Campbell, Pat KeatingAuthors (order contributions): Neale Batra, Alex Spina, Paula Blomquist, Finlay Campbell, Henry Laurenson-Schafer, Isaac Florence, Natalie Fischer, Daniel Molling, Liza Coyer, Jonny Polonski, Yurie Izawa, Sara HollisReviewers: …(list)…Advisers …(list)…","code":""},{"path":"index.html","id":"funding-and-programmatic-support","chapter":"Welcome - THIS IS A DRAFT","heading":"Funding and programmatic support","text":"handbook received funding via COVID-19 emergency capacity-building grant Training Programs Epidemiology Public Health Interventions Network (TEPHINET).Programmatic support provided EPIET Alumni Network (EAN).","code":""},{"path":"index.html","id":"inspiration","chapter":"Welcome - THIS IS A DRAFT","heading":"Inspiration","text":"multitude tutorials vignettes provided foundational knowledge development handbook content credited within respective pages.generally, following sources provided inspiration laid groundwork handbook:“R4Epis” project (collaboration MSF RECON)R Epidemics Consortium (RECON)R Data Science book (R4DS)bookdown: Authoring Books Technical Documents R MarkdownNetlify hosts website","code":""},{"path":"index.html","id":"image-credits","chapter":"Welcome - THIS IS A DRAFT","heading":"Image credits","text":"Logo: CDC Public Health Image library, R Graph Gallery2013 Yemen looking mosquito breeding sitesEbola virusSurvey RajasthanNetwork","code":""},{"path":"index.html","id":"license-and-terms-of-use","chapter":"Welcome - THIS IS A DRAFT","heading":"License and Terms of Use","text":"handbook approved product specific organization.Although strive accuracy, provide guarantee content book.book licensed Creative Commons license TBD…","code":""},{"path":"transmission-chains.html","id":"transmission-chains","chapter":"1 Transmission chains","heading":"1 Transmission chains","text":"","code":""},{"path":"transmission-chains.html","id":"overview","chapter":"1 Transmission chains","heading":"1.1 Overview","text":"primary tool handle, analyse visualise transmission chains contact\r\ntracing data package epicontacts, developed folks \r\nRECON. Try interactive plot hovering nodes \r\ninformation, dragging move clicking highlight downstream cases.","code":""},{"path":"transmission-chains.html","id":"preparation","chapter":"1 Transmission chains","heading":"1.2 Preparation","text":"","code":""},{"path":"transmission-chains.html","id":"packages-and-data","chapter":"1 Transmission chains","heading":"1.2.1 Packages and data","text":"First load standard packages required data import manipulation.require development version epicontacts, can \r\ninstalled github using remotes package. need run code\r\n, every time use package.Next, import standard, cleaned linelist analysis.","code":"\npacman::p_load(\n   rio,          # File import\n   here,         # File locator\n   tidyverse,    # Data management + ggplot2 graphics\n   remotes       # Package installation from github\n)\nremotes::install_github(\"reconhub/epicontacts@timeline\")\n# import the cleaned linelist\nlinelist <- rio::import(\"linelist_cleaned.xlsx\")"},{"path":"transmission-chains.html","id":"creating-an-epicontacts-object","chapter":"1 Transmission chains","heading":"1.2.2 Creating an epicontacts object","text":"need create epicontacts object, requires two types \r\ndata:linelist documenting cases columns variables rows correspond unique casesa list edges defining links cases basis unique IDs (can contacts,\r\ntransmission events, etc.)already linelist, just need create list edges \r\ncases, specifically IDs. can extract transmission links \r\nlinelist linking infector column case_id column. point can also add “edge\r\nproperties”, mean variable describing link two\r\ncases, cases . illustration, add location\r\nvariable describing location transmission event, duration\r\nvariable describing duration contact days.code , dplyr function transmute similar mutate, except keeps\r\ncolumns specified within function. drop_na function \r\nfilter rows specified columns NA value; \r\ncase, want keep rows infector known.can now create epicontacts object using make_epicontacts\r\nfunction. need specify column linelist points unique case\r\nidentifier, well columns contacts point unique\r\nidentifiers cases involved link. links directional \r\ninfection going infector case, need specify\r\narguments accordingly. therefore also set directed\r\nargument TRUE, affect future operations.Upon examining epicontacts objects, can see case_id column\r\nlinelist renamed id case_id infector\r\ncolumns contacts renamed . ensures\r\nconsistency subsequent handling, visualisation analysis operations.","code":"\n## generate contacts\ncontacts <- linelist %>%\n  transmute(\n    infector = infector,\n    case_id = case_id,\n    location = sample(c(\"Community\", \"Nosocomial\"), n(), TRUE),\n    duration = sample.int(10, n(), TRUE)\n  ) %>%\n  drop_na(infector)\n## generate epicontacts object\nepic <- make_epicontacts(\n  linelist = linelist,\n  contacts = contacts,\n  id = \"case_id\",\n  from = \"infector\",\n  to = \"case_id\",\n  directed = TRUE\n)\n## view epicontacts object\nepic## \r\n## /// Epidemiological Contacts //\r\n## \r\n##   // class: epicontacts\r\n##   // 5,888 cases in linelist; 3,800 contacts; directed \r\n## \r\n##   // linelist\r\n## \r\n## # A tibble: 5,888 x 30\r\n##    id    generation date_infection date_onset date_hospitalis~ date_outcome outcome gender   age age_unit age_years age_cat age_cat5 hospital   lon   lat\r\n##    <chr>      <dbl> <date>         <date>     <date>           <date>       <chr>   <chr>  <dbl> <chr>        <dbl> <fct>   <fct>    <chr>    <dbl> <dbl>\r\n##  1 d8a1~          4 2014-05-06     2014-05-08 2014-05-10       NA           <NA>    f          3 years            3 0-4     0-4      St. Mar~ -13.2  8.46\r\n##  2 8689~          4 NA             2014-05-13 2014-05-14       2014-05-18   Recover f          7 years            7 5-9     5-9      Missing  -13.2  8.45\r\n##  3 11f8~          2 NA             2014-05-16 2014-05-18       2014-05-30   Recover m         21 years           21 20-29   20-24    St. Mar~ -13.2  8.46\r\n##  4 dae8~          3 2014-05-23     NA         2014-05-27       2014-05-30   Death   f          4 years            4 0-4     0-4      Port Ho~ -13.2  8.45\r\n##  5 acf4~          6 2014-05-25     2014-05-27 2014-05-28       2014-06-27   Recover m          4 years            4 0-4     0-4      Central~ -13.3  8.48\r\n##  6 1a4a~          6 NA             2014-05-27 2014-05-29       2014-06-07   Death   m         30 years           30 30-49   30-34    Port Ho~ -13.3  8.45\r\n##  7 275c~          5 2014-05-24     2014-05-27 2014-05-28       2014-06-07   Death   f         13 years           13 10-14   10-14    Central~ -13.2  8.47\r\n##  8 1389~          4 NA             2014-06-05 2014-06-07       2014-06-09   Death   f          2 years            2 0-4     0-4      Missing  -13.3  8.47\r\n##  9 057e~          7 2014-06-04     2014-06-14 2014-06-15       NA           Recover f          4 years            4 0-4     0-4      Missing  -13.2  8.47\r\n## 10 c97d~          9 NA             NA         2014-06-19       2014-07-11   Recover m         22 years           22 20-29   20-24    Port Ho~ -13.2  8.47\r\n## # ... with 5,878 more rows, and 14 more variables: infector <chr>, source <chr>, wt_kg <dbl>, ht_cm <dbl>, ct_blood <dbl>, fever <chr>, chills <chr>,\r\n## #   cough <chr>, aches <chr>, vomit <chr>, temp <dbl>, time_admission <chr>, bmi <dbl>, days_onset_hosp <dbl>\r\n## \r\n##   // contacts\r\n## \r\n## # A tibble: 3,800 x 4\r\n##    from   to     location   duration\r\n##    <chr>  <chr>  <chr>         <int>\r\n##  1 20b688 d8a13d Community         6\r\n##  2 be7f8a dae8c7 Community         7\r\n##  3 1511c5 acf422 Community         2\r\n##  4 e02f66 275cc7 Community        10\r\n##  5 cbbe78 057e7a Nosocomial       10\r\n##  6 e61cb9 02d8fd Nosocomial        8\r\n##  7 057e7a c36eb4 Community         9\r\n##  8 4977bd 542d07 Community         7\r\n##  9 a75c7f 7f5a01 Nosocomial        5\r\n## 10 ea3740 b799eb Community         8\r\n## # ... with 3,790 more rows"},{"path":"transmission-chains.html","id":"handling","chapter":"1 Transmission chains","heading":"1.3 Handling","text":"","code":""},{"path":"transmission-chains.html","id":"subsetting","chapter":"1 Transmission chains","heading":"1.3.1 Subsetting","text":"subset() method epicontacts objects allows , among things,\r\nfiltering networks based properties linelist (“node attributes”) contacts\r\ndatabase (“edge attributes”). values must passed named lists \r\nrespective argument. example, code keeping \r\nmale cases linelist infection date April \r\nJuly 2014 (dates specified ranges), transmission links occured\r\nhospital.can use thin function either filter linelist include cases\r\nfound contacts setting argument = \"linelist\", \r\nfilter contacts include cases found linelist setting\r\nargument = \"contacts\". code , filtering \r\nepicontacts object keep transmission links involving male cases\r\ninfected April July filtered . can see \r\ntwo known transmission links fit specification.addition subsetting node edge attributes, networks can pruned \r\ninclude components connected certain nodes. cluster_id\r\nargument takes vector case IDs returns linelist individuals \r\nlinked, directly indirectly, IDs. code , can see\r\ntotal 13 linelist cases involved clusters containing\r\n2ae019 71577a.subset() method epicontacts objects also allows filtering cluster\r\nsize using cs, cs_min cs_max arguments. code , \r\nkeeping cases linked clusters 10 cases larger, can see \r\n271 linelist cases involved clusters.","code":"\nsub_attributes <- subset(\n  epic,\n  node_attribute = list(\n    gender = \"m\",\n    date_infection = as.Date(c(\"2014-04-01\", \"2014-07-01\"))\n  ), \n  edge_attribute = list(location = \"Nosocomial\")\n)\nsub_attributes## \r\n## /// Epidemiological Contacts //\r\n## \r\n##   // class: epicontacts\r\n##   // 67 cases in linelist; 1,903 contacts; directed \r\n## \r\n##   // linelist\r\n## \r\n## # A tibble: 67 x 30\r\n##    id    generation date_infection date_onset date_hospitalis~ date_outcome outcome gender   age age_unit age_years age_cat age_cat5 hospital   lon   lat\r\n##    <chr>      <dbl> <date>         <date>     <date>           <date>       <chr>   <chr>  <dbl> <chr>        <dbl> <fct>   <fct>    <chr>    <dbl> <dbl>\r\n##  1 acf4~          6 2014-05-25     2014-05-27 2014-05-28       2014-06-27   Recover m          4 years            4 0-4     0-4      Central~ -13.3  8.48\r\n##  2 02d8~          9 2014-06-14     2014-06-20 2014-06-20       2014-07-01   Death   m         20 years           20 20-29   20-24    Port Ho~ -13.2  8.45\r\n##  3 c36e~          8 2014-06-15     2014-06-20 2014-06-21       2014-06-24   Death   m         16 years           16 15-19   15-19    Port Ho~ -13.3  8.48\r\n##  4 542d~          5 2014-06-10     NA         2014-06-23       2014-06-28   Death   m         16 years           16 15-19   15-19    Port Ho~ -13.3  8.46\r\n##  5 b799~          5 2014-06-27     2014-07-03 2014-07-05       2014-07-12   Recover m         14 years           14 10-14   10-14    Missing  -13.2  8.46\r\n##  6 3057~          6 2014-05-17     2014-05-27 2014-06-07       2014-06-07   <NA>    m          9 years            9 5-9     5-9      Port Ho~ -13.2  8.47\r\n##  7 e857~          5 2014-05-27     2014-06-03 2014-06-08       2014-06-02   Death   m         21 years           21 20-29   20-24    Missing  -13.2  8.48\r\n##  8 d330~          9 2014-06-27     2014-07-04 2014-07-09       2014-07-10   Recover m         10 years           10 10-14   10-14    St. Mar~ -13.2  8.47\r\n##  9 a3c8~          4 2014-05-07     2014-05-08 2014-05-10       2014-05-14   Recover m         13 years           13 10-14   10-14    Port Ho~ -13.2  8.47\r\n## 10 72b9~          4 2014-05-06     NA         2014-05-13       NA           Recover m         17 years           17 15-19   15-19    Other    -13.2  8.47\r\n## # ... with 57 more rows, and 14 more variables: infector <chr>, source <chr>, wt_kg <dbl>, ht_cm <dbl>, ct_blood <dbl>, fever <chr>, chills <chr>,\r\n## #   cough <chr>, aches <chr>, vomit <chr>, temp <dbl>, time_admission <chr>, bmi <dbl>, days_onset_hosp <dbl>\r\n## \r\n##   // contacts\r\n## \r\n## # A tibble: 1,903 x 4\r\n##    from   to     location   duration\r\n##    <chr>  <chr>  <chr>         <int>\r\n##  1 cbbe78 057e7a Nosocomial       10\r\n##  2 e61cb9 02d8fd Nosocomial        8\r\n##  3 a75c7f 7f5a01 Nosocomial        5\r\n##  4 b799eb bc2adf Nosocomial        2\r\n##  5 beb26e 959170 Nosocomial        5\r\n##  6 af1c1f a9feb3 Nosocomial        3\r\n##  7 d15be5 92ddf7 Nosocomial        2\r\n##  8 805a4f c5d4ec Nosocomial        9\r\n##  9 0e3c82 9cd6d0 Nosocomial        5\r\n## 10 3789ee 4ade58 Nosocomial       10\r\n## # ... with 1,893 more rows\nsub_attributes <- thin(sub_attributes, what = \"contacts\")\nnrow(sub_attributes$contacts)## [1] 4\nsub_id <- subset(epic, cluster_id = c(\"2ae019\",\"71577a\"))\nnrow(sub_id$linelist)## [1] 13\nsub_cs <- subset(epic, cs_min = 10)\nnrow(sub_cs$linelist)## [1] 271"},{"path":"transmission-chains.html","id":"accessing-ids","chapter":"1 Transmission chains","heading":"1.3.2 Accessing IDs","text":"get_id() function retrieves information case IDs \r\ndataset, can parameterized follows:linelist: IDs line list datacontacts: IDs contact dataset (“” “” combined): IDs “” column contact datsetto IDs “” column contact datasetall: IDs appear anywhere either datasetcommon: IDs appear contacts dataset line listFor example, first ten IDs contacts dataset?many IDs found linelist contacts?","code":"\ncontacts_ids <- get_id(epic, \"contacts\")\nhead(contacts_ids, n = 10)##  [1] \"20b688\" \"be7f8a\" \"1511c5\" \"e02f66\" \"cbbe78\" \"e61cb9\" \"057e7a\" \"4977bd\" \"a75c7f\" \"ea3740\"\nlength(get_id(epic, \"common\"))## [1] 4352"},{"path":"transmission-chains.html","id":"visualization","chapter":"1 Transmission chains","heading":"1.4 Visualization","text":"","code":""},{"path":"transmission-chains.html","id":"basic-plotting","chapter":"1 Transmission chains","heading":"1.4.1 Basic plotting","text":"visualisations epicontacts objects handled plot\r\nfunction. first filter epicontacts object include \r\ncases onset dates June 2014 using subset function, \r\ninclude contacts linked cases using thin function.can create basic, interactive plot simply follows:can move nodes around dragging , hover \r\ninformation click highlight connected cases.large number arguments modify plot. cover\r\nmain ones , check documentation via ?vis_epicontacts (\r\nfunction called using plot epicontacts object) get full\r\ndescription function arguments.","code":"\n## subset epicontacts object\nsub <- epic %>%\n  subset(\n    node_attribute = list(date_onset = c(as.Date(c(\"2014-06-30\", \"2014-06-01\"))))\n  ) %>%\n thin(\"contacts\")\n## plot epicontacts object\nplot(\n  sub,\n  width = 700,\n  height = 700\n)"},{"path":"transmission-chains.html","id":"visualising-node-attributes","chapter":"1 Transmission chains","heading":"1.4.1.1 Visualising node attributes","text":"Node color, node shape node size can mapped given column linelist\r\nusing node_color, node_shape node_size arguments. similar\r\naes syntax may recognise ggplot2.specific colors, shapes sizes nodes can specified follows:Colors via col_pal argument, either providing name list manual\r\nspecification color done , providing color palette\r\nfunction colorRampPalette(c(\"black\", \"red\", \"orange\")), \r\nprovide gradient colours ones specified.Colors via col_pal argument, either providing name list manual\r\nspecification color done , providing color palette\r\nfunction colorRampPalette(c(\"black\", \"red\", \"orange\")), \r\nprovide gradient colours ones specified.Shapes passing named list shapes argument, specifying one shape\r\nunique element linelist column specified node_shape\r\nargument. See codeawesome available shapes.Shapes passing named list shapes argument, specifying one shape\r\nunique element linelist column specified node_shape\r\nargument. See codeawesome available shapes.Size passing size range nodes size_range argument.Size passing size range nodes size_range argument.example, color represents outcome, shape gender size\r\nage:","code":"\nplot(\n  sub, \n  node_color = \"outcome\",\n  node_shape = \"gender\",\n  node_size = 'age',\n  col_pal = c(Death = \"firebrick\", Recover = \"green\"),\n  shapes = c(f = \"female\", m = \"male\"),\n  size_range = c(40, 60),\n  height = 700,\n  width = 700\n)"},{"path":"transmission-chains.html","id":"visualising-edge-attributes","chapter":"1 Transmission chains","heading":"1.4.1.2 Visualising edge attributes","text":"Edge color, width linetype can mapped given column contacts\r\ndataframe using edge_color, edge_width edge_linetype\r\narguments. specific colors widths edges can specified follows:Colors via edge_col_pal argument, manner used col_pal.Colors via edge_col_pal argument, manner used col_pal.Widths passing size range nodes width_range argument.Widths passing size range nodes width_range argument.example:","code":"\nplot(\n  sub, \n  node_color = \"outcome\",\n  node_shape = \"gender\",\n  node_size = 'age',\n  col_pal = c(Death = \"firebrick\", Recover = \"green\"),\n  shapes = c(f = \"female\", m = \"male\"),\n  size_range = c(40, 60),\n  edge_color = 'location',\n  edge_linetype = 'location',\n  edge_width = 'duration',\n  edge_col_pal = c(Community = \"orange\", Nosocomial = \"purple\"),\n  width_range = c(1, 3),\n  height = 700,\n  width = 700\n)"},{"path":"transmission-chains.html","id":"temporal-axis","chapter":"1 Transmission chains","heading":"1.4.2 Temporal axis","text":"can also visualise network along temporal axis mapping x_axis\r\nargument column linelist. example , x-axis\r\nrepresents date symptom onset. also specified arrow_size\r\nargument ensure arrows large, set label = FALSE make\r\nfigure less cluttered.large number additional arguments futher specify \r\nnetwork visualised along temporal axis, can check \r\nvia ?vis_temporal_interactive (function called using plot \r\nepicontacts object x_axis specified). ’ll go \r\n.","code":"\nplot(\n  sub,\n  x_axis = \"date_onset\",\n  node_color = \"outcome\",\n  col_pal = c(Death = \"firebrick\", Recover = \"green\"),\n  arrow_size = 0.5,\n  node_size = 13,\n  label = FALSE,\n  height = 700,\n  width = 700\n)"},{"path":"transmission-chains.html","id":"specifying-transmission-tree-shape","chapter":"1 Transmission chains","heading":"1.4.2.1 Specifying transmission tree shape","text":"two main shapes transmission tree can assume, specified using\r\nnetwork_shape argument. first branching shape shown ,\r\nstraight edge connects two nodes. intuitive\r\nrepresentation, however can result overlapping edges densely connected\r\nnetwork. second shape rectangle, produces tree resembling \r\nphylogeny. example:case node can assigned unique vertical position toggling \r\nposition_dodge argument. position unconnected cases (.e. \r\nreported contacts) specified using unlinked_pos argument.position parent node relative children nodes can \r\nspecified using parent_pos argument. default option place \r\nparent node middle, however can placed bottom (parent_pos = 'bottom') top (parent_pos = 'top').","code":"\nplot(\n  sub,\n  x_axis = \"date_onset\",\n  network_shape = \"rectangle\",\n  node_color = \"outcome\",\n  col_pal = c(Death = \"firebrick\", Recover = \"green\"),\n  arrow_size = 0.5,\n  node_size = 13,\n  label = FALSE,\n  height = 700,\n  width = 700\n)\nplot(\n  sub,\n  x_axis = \"date_onset\",\n  network_shape = \"rectangle\",\n  node_color = \"outcome\",\n  col_pal = c(Death = \"firebrick\", Recover = \"green\"),\n  position_dodge = TRUE,\n  unlinked_pos = \"bottom\",\n  arrow_size = 0.5,\n  node_size = 13,\n  label = FALSE,\n  height = 700,\n  width = 700\n)\nplot(\n  sub,\n  x_axis = \"date_onset\",\n  network_shape = \"rectangle\",\n  node_color = \"outcome\",\n  col_pal = c(Death = \"firebrick\", Recover = \"green\"),\n  parent_pos = \"top\",\n  arrow_size = 0.5,\n  node_size = 13,\n  label = FALSE,\n  height = 700,\n  width = 700\n)"},{"path":"transmission-chains.html","id":"saving-plots-and-figures","chapter":"1 Transmission chains","heading":"1.4.2.2 Saving plots and figures","text":"can save plot interactive, self-contained html file \r\nvisSave function VisNetwork package:Saving network outputs image unfortunately less easy requires\r\nsave file html take screenshot file using\r\nwebshot package. code , converting html file saved\r\nPNG:","code":"\nplot(\n  sub,\n  x_axis = \"date_onset\",\n  network_shape = \"rectangle\",\n  node_color = \"outcome\",\n  col_pal = c(Death = \"firebrick\", Recover = \"green\"),\n  parent_pos = \"top\",\n  arrow_size = 0.5,\n  node_size = 13,\n  label = FALSE,\n  height = 700,\n  width = 700\n) %>%\n  visNetwork::visSave(\"network.html\")\nwebshot(url = \"network.html\", file = \"network.png\")"},{"path":"transmission-chains.html","id":"timelines","chapter":"1 Transmission chains","heading":"1.4.3 Timelines","text":"can also case timelines network, represented x-axis\r\ncase. can used visualise case locations, example, time\r\noutcome. generate timeline, need create data.frame least\r\nthree columns indicating case ID, start date “event” end\r\ndate “event”. can also add number columns can\r\nmapped node edge properties timeline. code ,\r\ngenerate timeline going date symptom onset date \r\noutcome, keep outcome hospital variables use define \r\nnode shape colour. Note can one timeline row/event\r\nper case, example case transferred multiple hospitals.pass timeline element timeline argument. can map\r\ntimeline attributes timeline node colours, shapes sizes way\r\ndefined previous sections, except two nodes: start end\r\nnode timeline, seperate arguments. example,\r\ntl_start_node_color defines timeline column mapped colour \r\nstart node, tl_end_node_shape defines timeline column \r\nmapped shape end node. can also map colour, width, linetype \r\nlabels timeline edge via tl_edge_* arguments.See ?vis_temporal_interactive (function called plotting \r\nepicontacts object) detailed documentation arguments. argument\r\nannotated code :","code":"\n## generate timeline\ntimeline <- linelist %>%\n  transmute(\n    id = case_id,\n    start = date_onset,\n    end = date_outcome,\n    outcome = outcome,\n    hospital = hospital\n  )\n## define shapes\nshapes <- c(\n  f = \"female\",\n  m = \"male\",\n  Death = \"user-times\",\n  Recover = \"heartbeat\",\n  \"NA\" = \"question-circle\"\n)\n\n## define colours\ncolours <- c(\n  Death = \"firebrick\",\n  Recover = \"green\",\n  \"NA\" = \"grey\"\n)\n\n## make plot\nplot(\n  sub,\n  ## max x coordinate to date of onset\n  x_axis = \"date_onset\",\n  ## use rectangular network shape\n  network_shape = \"rectangle\",\n  ## mape case node shapes to gender column\n  node_shape = \"gender\",\n  ## we don't want to map node colour to any columns - this is important as the\n  ## default value is to map to node id, which will mess up the colour scheme\n  node_color = NULL,\n  ## set case node size to 30 (as this is not a character, node_size is not\n  ## mapped to a column but instead interpreted as the actual node size)\n  node_size = 30,\n  ## set transmission link width to 4 (as this is not a character, edge_width is\n  ## not mapped to a column but instead interpreted as the actual edge width)\n  edge_width = 4,\n  ## provide the timeline object\n  timeline = timeline,\n  ## map the shape of the end node to the outcome column in the timeline object\n  tl_end_node_shape = \"outcome\",\n  ## set the size of the end node to 15 (as this is not a character, this\n  ## argument is not mapped to a column but instead interpreted as the actual\n  ## node size)\n  tl_end_node_size = 15,\n  ## map the colour of the timeline edge to the hospital column\n  tl_edge_color = \"hospital\",\n  ## set the width of the timeline edge to 2 (as this is not a character, this\n  ## argument is not mapped to a column but instead interpreted as the actual\n  ## edge width)\n  tl_edge_width = 2,\n  ## map edge labels to the hospital variable\n  tl_edge_label = \"hospital\",\n  ## specify the shape for everyone node attribute (defined above)\n  shapes = shapes,\n  ## specify the colour palette (defined above)\n  col_pal = colours,\n  ## set the size of the arrow to 0.5\n  arrow_size = 0.5,\n  ## use two columns in the legend\n  legend_ncol = 2,\n  ## set font size\n  font_size = 15,\n  ## define formatting for dates\n  date_labels = c(\"%d %b %Y\"),\n  ## don't plot the ID labels below nodes\n  label = FALSE,\n  ## specify height\n  height = 1000,\n  ## specify width\n  width = 1200,\n  ## ensure each case node has a unique y-coordinate - this is very important\n  ## when using timelines, otherwise you will have overlapping timelines from\n  ## different cases\n  position_dodge = TRUE\n)## Warning in assert_timeline(timeline, x, x_axis): 5865 timeline row(s) removed as ID not found in linelist or start/end date is NA"},{"path":"transmission-chains.html","id":"analysis","chapter":"1 Transmission chains","heading":"1.5 Analysis","text":"","code":""},{"path":"transmission-chains.html","id":"summarising","chapter":"1 Transmission chains","heading":"1.5.1 Summarising","text":"can get overview network properties using \r\nsummary function.example, can see 57% contacts cases \r\nlinelist; means linelist data significant\r\nnumber cases involved transmission chains.","code":"\n## summarise epicontacts object\nsummary(epic)## \r\n## /// Overview //\r\n##   // number of unique IDs in linelist: 5888\r\n##   // number of unique IDs in contacts: 5511\r\n##   // number of unique IDs in both: 4352\r\n##   // number of contacts: 3800\r\n##   // contacts with both cases in linelist: 56.868 %\r\n## \r\n## /// Degrees of the network //\r\n##   // in-degree summary:\r\n##            Min.         1st Qu.          Median            Mean         3rd Qu.            Max. \r\n## 0.0000000000000 0.0000000000000 1.0000000000000 0.5392365545622 1.0000000000000 1.0000000000000 \r\n## \r\n##   // out-degree summary:\r\n##            Min.         1st Qu.          Median            Mean         3rd Qu.            Max. \r\n## 0.0000000000000 0.0000000000000 0.0000000000000 0.5392365545622 1.0000000000000 6.0000000000000 \r\n## \r\n##   // in and out degree summary:\r\n##           Min.        1st Qu.         Median           Mean        3rd Qu.           Max. \r\n## 0.000000000000 1.000000000000 1.000000000000 1.078473109124 1.000000000000 7.000000000000 \r\n## \r\n## /// Attributes //\r\n##   // attributes in linelist:\r\n##  generation date_infection date_onset date_hospitalisation date_outcome outcome gender age age_unit age_years age_cat age_cat5 hospital lon lat infector source wt_kg ht_cm ct_blood fever chills cough aches vomit temp time_admission bmi days_onset_hosp\r\n## \r\n##   // attributes in contacts:\r\n##  location duration"},{"path":"transmission-chains.html","id":"pairwise-characteristics","chapter":"1 Transmission chains","heading":"1.5.2 Pairwise characteristics","text":"get_pairwise() function allows processing variable(s) line list\r\naccording pair contact dataset. following example, date\r\nonset disease extracted line list order compute \r\ndifference disease date onset pair. value \r\nproduced comparison represents serial interval (si).get_pairwise() interpret class column used \r\ncomparison, adjust method comparing values accordingly. \r\nnumbers dates (like si example ), function subtract\r\nvalues. applied columns characters categorical,\r\nget_pairwise() paste values together. function also allows\r\narbitrary processing (see “f” argument), discrete combinations can \r\neasily tabulated analyzed., see significant association transmission links gender.","code":"\nsi <- get_pairwise(epic, \"date_onset\")   \nsummary(si)##          Min.       1st Qu.        Median          Mean       3rd Qu.          Max.          NA's \r\n##  0.0000000000  5.0000000000  9.0000000000 10.9128256513 15.0000000000 99.0000000000          1804\ntibble(si = si) %>%\n  ggplot(aes(si)) +\n  geom_histogram() +\n  labs(\n    x = \"Serial interval\",\n    y = \"Frequency\"\n  )## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.## Warning: Removed 1804 rows containing non-finite values (stat_bin).\nhead(get_pairwise(epic, \"gender\"), n = 10)##  [1] \"m -> f\" NA       \"f -> m\" \"f -> f\" NA       \"f -> m\" \"f -> m\" NA       NA       NA\nget_pairwise(epic, \"gender\", f = table)##            values.to\r\n## values.from   f   m\r\n##           f 470 518\r\n##           m 519 436\nfisher.test(get_pairwise(epic, \"gender\", f = table))## \r\n##  Fisher's Exact Test for Count Data\r\n## \r\n## data:  get_pairwise(epic, \"gender\", f = table)\r\n## p-value = 0.003167711360736\r\n## alternative hypothesis: true odds ratio is not equal to 1\r\n## 95 percent confidence interval:\r\n##  0.6351504904440458 0.9147305045225598\r\n## sample estimates:\r\n##         odds ratio \r\n## 0.7623492175473596"},{"path":"transmission-chains.html","id":"identifying-clusters","chapter":"1 Transmission chains","heading":"1.5.3 Identifying clusters","text":"get_clusters() function can used identify connected components\r\nepicontacts object. First, use retrieve data.frame\r\ncontaining cluster information:Let us look largest clusters. , add cluster information \r\nepicontacts object subset keep largest clusters:","code":"\nclust <- get_clusters(epic, output = \"data.frame\")\ntable(clust$cluster_size)## \r\n##    1    2    3    4    5    6    7    8    9   10   11   12   13   14 \r\n## 1536 1680 1182  784  545  342  308  208  171  100   99   24   26   42\nggplot(clust, aes(cluster_size)) +\n  geom_bar() +\n  labs(\n    x = \"Cluster size\",\n    y = \"Frequency\"\n  )\nepic <- get_clusters(epic)\nmax_size <- max(epic$linelist$cluster_size)\nplot(subset(epic, cs = max_size))"},{"path":"transmission-chains.html","id":"calculating-degrees","chapter":"1 Transmission chains","heading":"1.5.4 Calculating degrees","text":"degree node corresponds number edges connections \r\nnodes. get_degree() provides easy method calculating value \r\nepicontacts networks. high degree context indicates individual\r\ncontact many others. type argument indicates want\r\ncount -degree -degree, only_linelist argument\r\nindicates want calculate degree cases linelist.individuals ten contacts?mean number contacts?","code":"\ndeg_both <- get_degree(epic, type = \"both\", only_linelist = TRUE)\nhead(sort(deg_both, decreasing = TRUE), 10)## 916d0a 858426 6833d7 f093ea 11f8ea 02d8fd a2b371 38fc71 07c4ad 72268f \r\n##      7      6      6      6      5      5      5      5      5      5\nmean(deg_both)## [1] 1.07847310912445"},{"path":"transmission-chains.html","id":"resources","chapter":"1 Transmission chains","heading":"1.6 Resources","text":"\r\nepicontacts page\r\nprovides overview package functions includes -depth\r\nvignettes.github page can used raise\r\nissues request features.","code":""}]

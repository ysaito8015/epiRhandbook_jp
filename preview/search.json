[{"path":"index.html","id":"section","chapter":"","heading":"","text":"DRAFT. REVIEWERS GIVE FEEDBACK LINK.LIKE HANDBOOK? SOMETHING CHANGED? PLEASE TELL US!","code":""},{"path":"index.html","id":"about-this-handbook","chapter":"","heading":"About this handbook","text":"Epi R Handbook R reference manual applied epidemiology public health.book strives :Serve quick R code reference manualProvide task-centered examples addressing common epidemiologic problemsAssist epidemiologists transitioning R SAS, STATA, SPSS, ExcelBe accessible settings low internet-connectivity via offline version ([instructions ][Download handbook data])different R books?written epidemiologists, epidemiologists - leveraging experience local, national, academic, emergency settingsIt provides examples epidemic curves, transmission chains, automated reports dashboards, epidemic modeling projections, demographic pyramids standardization, record matching, outbreak detection, survey analysis, causal diagrams, survival analysis, GIS basics, phylogenetic trees, etc…","code":""},{"path":"index.html","id":"how-to-read-this-handbook","chapter":"","heading":"How to read this handbook","text":"Online versionSearch via search box Table ContentsClick “copy” icons copy codeSee “Resources” section page resources“Follow-along” [downloading example data][Download handbook data]Offline versionSee instructions download offline version handbook [Download book data] page.LanguagesWe seeking translate book languages English. can help, please contact us.","code":""},{"path":"index.html","id":"edit-or-contribute","chapter":"","heading":"Edit or contribute","text":"welcome comments suggestions feedback link, email epiRhandbook@gmail.com via issue/pull request Github repository.","code":""},{"path":"index.html","id":"acknowledgements","chapter":"","heading":"Acknowledgements","text":"handbook produced collaboration epidemiologists around world spare time, drawing upon experiences organizations including local, state/provincial, national health agencies, World Health Organization (), MSF (Médecins Sans Frontières / Doctors without Borders), hospital systems, academic institutions.handbook approved product specific organization. Although strive accuracy, provide guarantee content book.","code":""},{"path":"index.html","id":"contributors","chapter":"","heading":"Contributors","text":"Editor--Chief: Neale BatraProject core team: Neale Batra, Alex Spina, Amrish Baidjoe, Pat Keating, Henry Laurenson-Schafer, Finlay CampbellAuthors: Neale Batra, Alex Spina, Paula Blomquist, Finlay Campbell, Henry Laurenson-Schafer, Isaac Florence, Natalie Fischer, Aminata Ndiaye, Liza Coyer, Jonathan Polonsky, Yurie Izawa, Daniel Molling, Isha Berry, Emma Buajitti, Chris Bailey, Wen Lin, Sara HollisReviewers: Pat Keating, Mathilde Mousset, Annick Lenglet, Margot Charette, Isha Berry, Paula Blomquist, Natalie Fischer, Daniely Xavier, Esther Kukielka, Michelle Sloan, Aybüke Koyuncu, Rachel Burke, Daniel Molling, Kate Kelsey, Wayne Enanoria, John Rossow, Berhe Etsay, Mackenzie Zendt, James Wright, Flavio Finger, Tim Taylor, Tim Lee, Manual Albela Miranda, Priscilla Spencer, Pattama Ulrich, Joseph Timothy, Olivia Varsaneux, Nienke Meeuwissen, Adam Vaughan, Lionel Monteiro, Joao Muianga","code":""},{"path":"index.html","id":"funding-and-support","chapter":"","heading":"Funding and support","text":"handbook project received supportive funding via COVID-19 emergency capacity-building grant Training Programs Epidemiology Public Health Interventions Network (TEPHINET). handbook supported Cooperative Agreement number NU2GGH001873, funded Centers Disease Control Prevention TEPHINET, program Task Force Global Health. contents solely responsibility authors necessarily represent official views Centers Disease Control Prevention, Department Health Human Services, Task Force Global Health, Inc. TEPHINET.Administrative support provided EPIET Alumni Network (EAN), special thanks Annika Wendland. EPIET European Programme Intervention Epidemiology Training.","code":""},{"path":"index.html","id":"inspiration","chapter":"","heading":"Inspiration","text":"multitude tutorials vignettes provided knowledge development handbook content credited within respective pages.generally, following sources provided inspiration laid groundwork handbook:“R4Epis” project (collaboration MSF RECON)R Epidemics Consortium (RECON)R Data Science book (R4DS)bookdown: Authoring Books Technical Documents R MarkdownNetlify hosts website","code":""},{"path":"index.html","id":"image-credits","chapter":"","heading":"Image credits","text":"Images logo US CDC Public Health Image Library) include 2013 Yemen looking mosquito breeding sites, Ebola virus, Survey Rajasthan.","code":""},{"path":"index.html","id":"terms-of-use-and-license","chapter":"","heading":"Terms of Use and License","text":"work licensed Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.Universities academic courses welcome use handbook students. questions intended use, email epirhandbook@gmail.com.","code":""},{"path":"r-markdown-reports.html","id":"r-markdown-reports","chapter":"1 R Markdown reports","heading":"1 R Markdown reports","text":"R Markdown widely-used tool creating automated, reproducible, share-worthy outputs, reports. can generate static interactive outputs, Word, pdf, html, powerpoint, formats.R Markdown script intersperces R code text script actually becomes output document. can create entire formatted document, including narrative text (can dynamic change based data), tables, figures, bullets/numbers, bibliographies, etc.documents can produced update routine basis (e.g. daily surveillance reports) /run subsets data (e.g. reports jurisdiction).pages handbook expand topic:page [Organizing routine reports] demonstrates routinize report production auto-generated time-stamped folders.page [Dashboards M Markdown] explains format R Markdown report dashboard.","code":""},{"path":"r-markdown-reports.html","id":"preparation","chapter":"1 R Markdown reports","heading":"1.1 Preparation","text":"Background R MarkdownTo explain concepts packages involved:Markdown “language” allows write document using plain text, can converted html formats. specific R. Files written Markdown ‘.md’ extension.R Markdown: variation markdown specific R - allows write document using markdown produce text embed R code display outputs. R Markdown files ‘.Rmd’ extension.rmarkdown - package: used R render .Rmd file desired output. ’s focus converting markdown (text) syntax, also need…knitr: R package read code chunks, execute , ‘knit’ back document. tables graphs included alongside text.Pandoc: Finally, pandoc actually convert output word/pdf/powerpoint etc. software separate R installed automatically RStudio.sum, process involves feeding .Rmd file knitr, executes R code chunks creates new .md (markdown) file includes R code rendered output. .md file processed pandoc create finished product: Microsoft Word document, HTML file, powerpoint document, pdf, etc.(source: https://rmarkdown.rstudio.com/authoring_quick_tour.html):InstallationTo create R Markdown output, need following installed:rmarkdown package (knitr also installed automatically)Pandoc, come installed RStudio. using RStudio, can download : http://pandoc.org.want generate PDF output (bit trickier), need install LaTeX. R Markdown users installed LaTeX , recommend install TinyTeX (https://yihui.name/tinytex/). can use following commands:","code":"\npacman::p_load(tinytex)     # install tinytex package\ntinytex::install_tinytex()  # R command to install TinyTeX software"},{"path":"r-markdown-reports.html","id":"getting-started","chapter":"1 R Markdown reports","heading":"1.2 Getting started","text":"","code":""},{"path":"r-markdown-reports.html","id":"install-rmarkdown-r-package","chapter":"1 R Markdown reports","heading":"Install rmarkdown R package","text":"Install rmarkdown R package. handbook emphasize p_load() pacman, installs package necessary loads use. can also load installed packages library() base R. See page [R basics] information R packages.","code":"\npacman::p_load(rmarkdown)"},{"path":"r-markdown-reports.html","id":"starting-a-new-rmd-file","chapter":"1 R Markdown reports","heading":"Starting a new Rmd file","text":"RStudio, open new R markdown file, starting ‘File’, ‘New file’ ‘R markdown…’.R Studio give output options pick . example select “HTML” want create html document. title author names important. output document type want one , don’t worry - can just pick one change script later.open new .Rmd script.","code":""},{"path":"r-markdown-reports.html","id":"important-to-know","chapter":"1 R Markdown reports","heading":"Important to know","text":"working directoryThe working directory markdown file wherever Rmd file saved. instance, R project within ~/Documents/projectX Rmd file subfolder ~/Documents/projectX/markdownfiles/markdown.Rmd, code read.csv(“data.csv”) within markdown look csv file markdownfiles folder, root project folder scripts within projects normally automatically look.refer files elsewhere, either need use full file path use package. package sets working directory root folder R project explained detail [R projects] [Import export] pages handbook. instance, import file called “data.csv” within projectX folder, code import((“data.csv”)).Note use setwd() R Markdown scripts recommended – applies code chunk written .Working drive vs computerBecause R Markdown can run pandoc issues running shared network drive, recommended folder local machine, e.g. project within ‘Documents’. use Git (much recommended!), familiar. details, see handbook pages [R network drives] [Errors help].","code":""},{"path":"r-markdown-reports.html","id":"r-markdown-components","chapter":"1 R Markdown reports","heading":"1.3 R Markdown components","text":"R Markdown document can edited RStudio just like standard R script. start new R Markdown script, RStudio tries helpful showing template explains different section R Markdown script.appears starting new Rmd script intended produce html output (per previous section).can see, three basic components Rmd file: YAML, Markdown text, R code chunks.create become document output. See diagram :","code":""},{"path":"r-markdown-reports.html","id":"yaml-metadata","chapter":"1 R Markdown reports","heading":"YAML metadata","text":"Referred ‘YAML metadata’ just ‘YAML’, top R Markdown document. section script tell Rmd file type output produce, formatting preferences, metadata document title, author, date. uses mentioned (referred ‘Producing output’). Note indentation matters; tabs accepted spaces .section must begin line containing just three dashes --- must close line containing just three dashes ---. YAML parameters comes key:value pairs. placement colons YAML important - key:value pairs separated colons (equals signs!).YAML begin metadata document. order primary YAML parameters (indented) matter. example:can use R code YAML values writing -line code (preceded r within back-ticks) also within quotes (see example date:).image , clicked default output html file, can see YAML says output: html_document. However can also change say powerpoint_presentation word_document even pdf_document.","code":"title: \"My document\"\r\nauthor: \"Me\"\r\ndate: \"2021-04-29\""},{"path":"r-markdown-reports.html","id":"text","chapter":"1 R Markdown reports","heading":"Text","text":"narrative document, including titles headings. written “markdown” language, used across many different software.core ways write text. See extensive documentation available R Markdown “cheatsheet” RStudio website.","code":""},{"path":"r-markdown-reports.html","id":"new-lines","chapter":"1 R Markdown reports","heading":"New lines","text":"Uniquely R Markdown, initiate new line, enter *two spaces** end previous line Enter/Return.","code":""},{"path":"r-markdown-reports.html","id":"case","chapter":"1 R Markdown reports","heading":"Case","text":"Surround normal text character change appears output.Underscores (_text_) single asterisk (*text*) italiciseDouble asterisks (**text**) bold textBack-ticks (text) display text codeThe actual appearance font can set using specific templates (specified YAML metadata; see example tabs).","code":""},{"path":"r-markdown-reports.html","id":"color","chapter":"1 R Markdown reports","heading":"Color","text":"simple mechanism change color text R Markdown. One work-around, output HTML file, add HTML line markdown text. HTML code print line text bold red.","code":"<span style=\"color: red;\">**_DANGER:_** This is a warning.<\/span>  "},{"path":"r-markdown-reports.html","id":"titles-and-headings","chapter":"1 R Markdown reports","heading":"Titles and headings","text":"hash symbol text portion R Markdown script creates heading. different chunk R code script, hash symbol mechanism comment/annotate/de-activate, normal R script.Different heading levels established different numbers hash symbols start new line. One hash symbol title primary heading. Two hash symbols second-level heading. Third- fourth-level headings can made successively hash symbols.","code":"# First-level heading / title\r\n\r\n## Second level heading  \r\n\r\n### Third-level heading"},{"path":"r-markdown-reports.html","id":"bullets-and-numbering","chapter":"1 R Markdown reports","heading":"Bullets and numbering","text":"Use asterisks (*) created bullets list. Finish previous sentence, enter two spaces, Enter/Return twice, start bullets. Include space asterisk bullet text. bullet enter two spaces Enter/Return. Sub-bullets work way indented. Numbers work way instead asterisk, write 1), 2), etc. R Markdown script text might look.","code":"Here are my bullets (there are two spaces after this colon):  \r\n\r\n* Bullet 1 (followed by two spaces and Enter/Return)  \r\n* Bullet 2 (followed by two spaces and Enter/Return)  \r\n  * Sub-bullet 1 (followed by two spaces and Enter/Return)  \r\n  * Sub-bullet 2 (followed by two spaces and Enter/Return)  \r\n  "},{"path":"r-markdown-reports.html","id":"comment-out-text","chapter":"1 R Markdown reports","heading":"Comment out text","text":"can “comment ” R Markdown text just can use “#” comment line R code R chunk. Simply highlight text press Ctrl+Shift+c (Cmd+Shift+c Mac). text surrounded arrows turn green. appear output.","code":""},{"path":"r-markdown-reports.html","id":"code-chunks","chapter":"1 R Markdown reports","heading":"Code chunks","text":"Sections script dedicated running R code called “chunks”. may load packages, import data, perform actual data management visualisation. may many code chunks, can help organize R code parts, perhaps interspersed text. note:\r\n‘chunks’ appear slightly different background colour narrative part document.chunk opened line starts three back-ticks, curly brackets contain parameters chunk ({ }). chunk ends three back-ticks.can create new chunk typing , using keyboard shortcut “Ctrl + Alt + ” (Cmd + Shift + r Mac), clicking green ‘insert new code chunk’ icon top script editor.notes contents curly brackets { }:start ‘r’ indicate language name within chunk RAfter r can optionally write chunk “name” – necessary can help organise work. Note name chunks, ALWAYS use unique names else R complain try render.curly brackets can include options , written tag=value, :eval = FALSE run R codeecho = FALSE print chunk’s R source code output documentwarning = FALSE print warnings produced R codemessage = FALSE print messages produced R codeinclude = either TRUE/FALSE whether include chunk outputs (e.g. plots) documentout.width = .height = - provide style .width = \"75%\"fig.align = \"center\" adjust figure aligned across pagefig.show='hold' chunk prints multiple figures want printed next (pair .width = c(\"33%\", \"67%\"). Can also set fig.show='asis' show code generates , 'hide' hide, 'animate' concatenate multiple animation.chunk header must written one lineTry avoid periods, underscores, spaces. Use hyphens ( - ) instead need separator.Read extensively knitr options .options can configured point--click using setting buttons top right chunk. , can specify parts chunk want rendered document include, namely code, outputs, warnings. come written preferences within curly brackets, e.g. ‘echo=FALSE’ specify want ‘Show output ’.also two arrows top right chunk, useful run code within chunk, code prior chunks. Hover see .global options applied chunks script, can set within first R code chunk script. instance, outputs shown code chunk code , can include command R code chunk:","code":"\nknitr::opts_chunk$set(echo = FALSE) "},{"path":"r-markdown-reports.html","id":"in-text-r-code","chapter":"1 R Markdown reports","heading":"In-text R code","text":"can also include minimal R code within back-ticks. Within back-ticks, begin code “r” space, RStudio knows evaluate code R code. See example .example shows multiple heading levels, bullets, uses R code current date (Sys.Date()) evaluate printed date.example, script calculates proportion cases aged less 18 years old, using tidyverse functions, creates objects less18, total, less18prop. dynamic value inserted subsequent text. see looks knitted word document.","code":""},{"path":"r-markdown-reports.html","id":"images","chapter":"1 R Markdown reports","heading":"Images","text":"can include images R Markdown one two ways:work, try using knitr::include_graphics()(remember, file path written using package)","code":"![](\"path/to/image.png\")  \nknitr::include_graphics(\"path/to/image.png\")\nknitr::include_graphics(here::here(\"path\", \"to\", \"image.png\"))"},{"path":"r-markdown-reports.html","id":"tables","chapter":"1 R Markdown reports","heading":"Tables","text":"Create table using hyphens ( - ) bars ( | ). number hyphens /bars allow number spaces cell text begins wrap.code produces table :","code":"Column 1 |Column  2 |Column 3\r\n---------|----------|--------\r\nCell A   |Cell B    |Cell C\r\nCell D   |Cell E    |Cell F"},{"path":"r-markdown-reports.html","id":"tabbed-sections","chapter":"1 R Markdown reports","heading":"Tabbed sections","text":"HTML outputs, can arrange sections “tabs”. Simply add .tabset curly brackets { } placed heading. sub-headings beneath heading (another heading level) appear tabs user can click . Read hereYou can add additional option .tabset-pills .tabset give tabs “pilled” appearance. aware viewing tabbed HTML output, Ctrl+f search functionality search “active” tabs, hidden tabs.","code":""},{"path":"r-markdown-reports.html","id":"file-structure","chapter":"1 R Markdown reports","heading":"1.4 File structure","text":"several ways structure R Markdown associated R scripts. advantages disadvantages:Self-contained R Markdown - everything needed report imported created within R Markdown\r\nSource files - can run external R scripts source() command use outputs Rmd\r\nChild scripts - alternate mechanism source()\r\nSource files - can run external R scripts source() command use outputs RmdChild scripts - alternate mechanism source()Utilize “runfile” - Run commands R script prior rendering R Markdown","code":""},{"path":"r-markdown-reports.html","id":"self-contained-rmd","chapter":"1 R Markdown reports","heading":"Self-contained Rmd","text":"relatively simple report, may elect organize R Markdown script “self-contained” involve external scripts.Everything need run R markdown imported created within Rmd file, including code chunks package loading. “self-contained” approach appropriate need much data processing (e.g. brings clean semi-clean data file) rendering R Markdown take long.scenario, one logical organization R Markdown script might :Set global knitr optionsLoad packagesImport dataProcess dataProduce outputs (tables, plots, etc.)Save outputs, applicable (.csv, .png, etc.)","code":""},{"path":"r-markdown-reports.html","id":"source-other-files","chapter":"1 R Markdown reports","heading":"Source other files","text":"One variation “self-contained” approach R Markdown code chunks “source” (run) R scripts. can make R Markdown script less cluttered, simple, easier organize. can also help want display final figures beginning report. approach, final R Markdown script simply combines pre-processed outputs document.One way providing R scripts (file path name extension) base R command source().Note using source() within R Markdown, external files still run course rendering Rmd file. Therefore, script run every time render report. Thus, source() commands within R Markdown speed run time, greatly assist de-bugging, error produced still printed producing R Markdown.alternative utilize child = knitr option. EXPLAIN DOYou must aware various R environments. Objects created within environment necessarily available environment used R Markdown.","code":"\nsource(\"your-script.R\", local = knitr::knit_global())\n# or sys.source(\"your-script.R\", envir = knitr::knit_global())"},{"path":"r-markdown-reports.html","id":"runfile","chapter":"1 R Markdown reports","heading":"Runfile","text":"approach involves utilizing R script contains render() command(s) pre-process objects feed R markdown.instance, can load packages, load clean data, even create graphs interest prior render(). steps can occur R script, scripts sourced. long commands occur RStudio session objects saved environment, objects can called within Rmd content. R markdown used final step - produce output pre-processed objects. much easier de-bug something goes wrong.approach helpful following reasons:informative error messages - messages generated R script, R Markdown. R Markdown errors tend tell chunk problem, tell line.applicable, can run long processing steps advance render() command - run .example , separate R script pre-process data object R Environment render “create_output.Rmd” using render().","code":"\ndata <- import(\"datafile.csv\") %>%       # Load data and save to environment\n  select(age, hospital, weight)          # Select limited columns\n\nrmarkdown::render(input = \"create_output.Rmd\")   # Create Rmd file"},{"path":"r-markdown-reports.html","id":"folder-strucutre","chapter":"1 R Markdown reports","heading":"Folder strucutre","text":"Workflow also concerns overall folder structure, ‘output’ folder created documents figures, ‘data’ ‘inputs’ folders cleaned data. go detail , check [Organizing routine reports] page.","code":""},{"path":"r-markdown-reports.html","id":"producing-the-document","chapter":"1 R Markdown reports","heading":"1.5 Producing the document","text":"can produce document following ways:command via render() function rmarkdown package (executed outside R Markdown script)Manually pressing “Knit” button top RStudio script editor","code":""},{"path":"r-markdown-reports.html","id":"option-1-render-command","chapter":"1 R Markdown reports","heading":"Option 1: render() command","text":"One way produce R Markdown output run render() function rmarkdown package. must execute command outside R Markdown script - either separate R script (often called “run file”), stand-alone command R Console.default settings, running command save Rmd output folder Rmd script, file name (aside file extension). instance “my_report.Rmd” knitted create “my_report.docx” knitting word document.render() can accept optional arguments, including:output_format = output format convert (e.g. \"html_document\", \"pdf_document\", \"word_document\", \"\"). can also specify YAML inside R Markdown script.output_file = name output file (file path). can created via R functions like () str_glue() demonstrated .output_dir = output directory (folder) save file. allows chose alternative directory Rmd file saved .output_options = can provide list options override script YAML (e.g. )output_yaml = can provide path .yml file contains YAML specificationsparams = See section parameters belowSee complete list one example, improve version control, following command save output file within ‘outputs’ sub-folder, current date file name. create file name, function str_glue() stringr package use ‘glue’ together static strings (written plainly) dynamic R code (written curly brackets). instance April 10th 2021, file name “Report_2021-04-10.docx”. See page [Characters strings] details str_glue().file renders, RStudio Console show rendering progress 100%, final message indicate rendering complete.","code":"\nrmarkdown::render(input = \"my_report.Rmd\")\nrmarkdown::render(\n  input = \"create_output.Rmd\",\n  output_file = stringr::str_glue(\"outputs/Report_{Sys.Date()}.docx\")) "},{"path":"r-markdown-reports.html","id":"option-2-knit-button","chapter":"1 R Markdown reports","heading":"Option 2: “Knit” button","text":"Rmd file open, press ‘Knit’ icon/button top file. RStudio’s shortcut button render() function rmarkdown. compatible self-contained R markdown, needed components exist sourced within file.Just like knitting separate script, R Studio show progress Rmd file. Except time, appear within ‘R Markdown’ tab panel console. complete document automatically open complete document saved folder markdown, file name aside file extension. obviously ideal version control, need rename file .","code":""},{"path":"r-markdown-reports.html","id":"options-3-reportfactory-package","chapter":"1 R Markdown reports","heading":"Options 3: reportfactory package","text":"R package reportfactory offers alternative method organising compiling R Markdown reports catered scenarios run reports routinely (e.g. daily, weekly…). eases compilation multiple R Markdown files organization outputs. essence, provides “factory” can run R Markdown reports, get automatically date- time-stamped folders outputs, “light” version control.Read work flow page [Organizing routine reports].","code":""},{"path":"r-markdown-reports.html","id":"parameterised-reports","chapter":"1 R Markdown reports","heading":"1.6 Parameterised reports","text":"can use parameterisation make report dynamic, can run specific setting (e.g. specific date place certain knitting options). , focus basics, detail online parameterized reports.Using Ebola linelist example, let’s say want run standard surveillance report hospital day. show one can using parameters.Important: dynamic reports also possible without formal parameter structure (without params:), using simple R objects adjacent R script. explained end section.","code":""},{"path":"r-markdown-reports.html","id":"setting-parameters","chapter":"1 R Markdown reports","heading":"Setting parameters","text":"several options specifying parameter values R Markdown output.","code":""},{"path":"r-markdown-reports.html","id":"option-1-set-parameters-within-yaml","chapter":"1 R Markdown reports","heading":"Option 1: Set parameters within YAML","text":"Edit YAML include params: option, indented statements parameter want define. example create parameters date hospital, specify values. values subject change time report run. use “Knit” button produce output, parameters default values. Likewise, use render() parameters default values unless otherwise specified render() command.background, parameter values contained within read-list called params. Thus, can insert parameter values R code another R object/value environment. Simply type params$ followed parameter name. example params$hospital represent hospital name (“Central Hospital” default).Note parameters can also hold values true false, can included knitr options R chunk. example, can set {r, eval=params$run} instead {r, eval=FALSE}, now whether chunk runs depends value parameter run:.Note parameters dates, input string. params$date interpreted R code likely need wrapped .Date() similar function convert class Date.","code":"---\r\ntitle: Surveillance report\r\noutput: html_document\r\nparams:\r\n date: 2021-04-10\r\n hospital: Central Hospital\r\n---"},{"path":"r-markdown-reports.html","id":"option-2-set-parameters-within-render","chapter":"1 R Markdown reports","heading":"Option 2: Set parameters within render()","text":"mentioned , alternative pressing “Knit” button produce output execute render() function separate script. later case, can specify parameters used rendering params = argument render().Note parameter values provided overwrite default values written within YAML. write values quotation marks case defined character/string values.command renders “surveillance_report.Rmd”, specifies dynamic output file name folder, provides list() two parameters values argument params =.","code":"\nrmarkdown::render(\n  input = \"surveillance_report.Rmd\",  \n  output_file = stringr::str_glue(\"outputs/Report_{Sys.Date()}.docx\"),\n  params = list(date = \"2021-04-10\", hospital  = \"Central Hospital\"))"},{"path":"r-markdown-reports.html","id":"option-3-set-parameters-using-a-graphical-user-interface","chapter":"1 R Markdown reports","heading":"Option 3: Set parameters using a Graphical User Interface","text":"interactive feel, can also use Graphical User Interface (GUI) manually select values parameters. can click drop-menu next ‘Knit’ button choose ‘Knit parameters’.pop-appear allowing type values parameters established document’s YAML.can achieve render() command specifying params = \"ask\", demonstrated .However, typing values pop-window subject error spelling mistakes. may prefer add restrictions values can entered drop-menus. can adding YAML several specifications params: entry.label: title particular drop-menuvalue: default (starting) valueinput: set select drop-menuchoices: Give eligible values drop-menuBelow, specifications written hospital parameter.knitting (either via ‘knit parameters’ button render()), pop-window drop-options select .","code":"rmarkdown::render(\r\n  input = \"surveillance_report.Rmd\",  \r\n  output_file = stringr::str_glue(\"outputs/Report_{Sys.Date()}.docx\"),\r\n  params = “ask”)---\r\ntitle: Surveillance report\r\noutput: html_document\r\nparams:\r\n date: 2021-04-10\r\n hospital: \r\n  label: “Town:”\r\n  value: Central Hospital\r\n  input: select\r\n  choices: [Central Hospital, Military Hospital, Port Hospital, St. Mark's Maternity Hospital (SMMH)]\r\n---"},{"path":"r-markdown-reports.html","id":"parameterized-example","chapter":"1 R Markdown reports","heading":"Parameterized example","text":"following code creates parameters date hospital, used R Markdown params$date params$hospital, respectively.resulting report output, see data filtered specific hospital, plot title refers correct hospital date. use “linelist_cleaned.rds” file , particularly appropriate linelist also datestamp within align parameterised date.Knitting produces final output default font layout.","code":""},{"path":"r-markdown-reports.html","id":"parameterisation-without-params","chapter":"1 R Markdown reports","heading":"Parameterisation without params","text":"rendering R Markdown file render() separate script, can actually create impact parameterization without using params: functionality.instance, R script contains render() command, can simply define hospital date two R objects (values) render() command. R Markdown, need params: section YAML, refer date object rather params$date hospital rather params$hospital.Following approach means means can “knit parameters”, use GUI, include knitting options within parameters. However allows simpler code, may advantageous.","code":"\n# This is a R script that is separate from the R Markdown\n\n# define R objects\nhospital <- \"Central Hospital\"\ndate <- \"2021-04-10\"\n\n# Render the R markdown\nrmarkdown::render(input = \"create_output.Rmd\") "},{"path":"r-markdown-reports.html","id":"looping-reports","chapter":"1 R Markdown reports","heading":"1.7 Looping reports","text":"may want run report multiple times, varying input parameters, produce report jurisdictions/unit. can done using tools iteration, explained detail thepage [Loops, iteration, lists]. Options include purrr package, use loop explained ., use simple loop generate surveillance report hospitals interest. done one command (instead manually changing hospital parameter one---time). command render reports must exist separate script outside report Rmd. script also contain defined objects “loop ” - today’s date, vector hospital names loop .feed values one---time render() command using loop, runs command value hospitals vector. letter represents index position (1 4) hospital currently used iteration, hospital_list[1] “Central Hospital”. information supplied two places render() command:file name, file name first iteration produced 10th April 2021 “Report_Central Hospital_2021-04-10.docx”, saved ‘output’ subfolder working directory.params = Rmd uses hospital name internally whenever params$hospital value called (e.g. filter dataset particular hospital ). example, four files created - one hospital.","code":"\nhospitals <- c(\"Central Hospital\",\n                \"Military Hospital\", \n                \"Port Hospital\",\n                \"St. Mark's Maternity Hospital (SMMH)\") \nfor(i in 1:length(hospitals)){\n  rmarkdown::render(\n    input = \"surveillance_report.Rmd\",\n    output_file = str_glue(\"output/Report_{hospitals[i]}_{Sys.Date()}.docx\"),\n    params = list(hospital  = hospitals[i]))\n}       "},{"path":"r-markdown-reports.html","id":"templates","chapter":"1 R Markdown reports","heading":"1.8 Templates","text":"using template document contains desired formatting, can adjust aesthetics Rmd output look. can create instance MS Word Powerpoint file contains pages/slides desired dimensions, watermarks, backgrounds, fonts.","code":""},{"path":"r-markdown-reports.html","id":"word-documents","chapter":"1 R Markdown reports","heading":"Word documents","text":"create template, start new word document (use existing output formatting suits ), edit fonts defining Styles. Style,Headings 1, 2, 3 refer various markdown header levels (# Header 1, ## Header 2 ### Header 3 respectively). Right click style click ‘modify’ change font formatting well paragraph (e.g. can introduce page breaks certain styles can help spacing). aspects word document margins, page size, headers etc, can changed like usual word document working directly within.","code":""},{"path":"r-markdown-reports.html","id":"powerpoint-documents","chapter":"1 R Markdown reports","heading":"Powerpoint documents","text":", create new slideset use existing powerpoint file desired formatting. editing, click ‘View’ ‘Slide Master’. can change ‘master’ slide appearance editing text formatting text boxes, well background/page dimensions overall page.Unfortunately, editing powerpoint files slightly less flexible:first level header (# Header 1) automatically become title new slide,## Header 2 text come subtitle text within slide’s main textbox (unless find way maniuplate Master view).Outputted plots tables automatically go new slides. need combine , instance patchwork function combine ggplots, show page.See officer package tool work -depth powerpoint presentations.","code":""},{"path":"r-markdown-reports.html","id":"integrating-templates-into-the-yaml","chapter":"1 R Markdown reports","heading":"Integrating templates into the YAML","text":"template prepared, detail can added YAML Rmd underneath ‘output’ line underneath document type specified (goes separate line ). Note reference_doc can used powerpoint slide templates.easiest save template folder Rmd file (example ), subfolder within.","code":"---\r\ntitle: Surveillance report\r\noutput: \r\n word_document:\r\n  reference_docx: \"template.docx\"\r\nparams:\r\n date: 2021-04-10\r\n hospital: Central Hospital\r\ntemplate:\r\n \r\n---"},{"path":"r-markdown-reports.html","id":"formatting-html-files","chapter":"1 R Markdown reports","heading":"Formatting HTML files","text":"HTML files use templates, can styles configured within YAML. HTMLs interactive documents, particularly flexible. cover basic options .Table contents: can add table contents toc: true , also specify remains viewable (“floats”) scroll, toc_float: true.Table contents: can add table contents toc: true , also specify remains viewable (“floats”) scroll, toc_float: true.Themes: can refer pre-made themes, come Bootswatch theme library. example use cerulean. options include: journal, flatly, darkly, readable, spacelab, united, cosmo, lumen, paper, sandstone, simplex, yeti.Themes: can refer pre-made themes, come Bootswatch theme library. example use cerulean. options include: journal, flatly, darkly, readable, spacelab, united, cosmo, lumen, paper, sandstone, simplex, yeti.Highlight: Configuring changes look highlighted text (e.g. code within chunks shown). Supported styles include default, tango, pygments, kate, monochrome, espresso, zenburn, haddock, breezedark, textmate.Highlight: Configuring changes look highlighted text (e.g. code within chunks shown). Supported styles include default, tango, pygments, kate, monochrome, espresso, zenburn, haddock, breezedark, textmate.example integrate options YAML.two examples HTML outputs floating tables contents, different theme highlight styles selected:","code":"---\r\ntitle: \"HTML example\"\r\noutput:\r\n  html_document:\r\n    toc: true\r\n    toc_float: true\r\n    theme: cerulean\r\n    highlight: kate\r\n    \r\n---"},{"path":"r-markdown-reports.html","id":"dynamic-content","chapter":"1 R Markdown reports","heading":"1.9 Dynamic content","text":"","code":""},{"path":"r-markdown-reports.html","id":"tables-1","chapter":"1 R Markdown reports","heading":"Tables","text":"HTML report, can print data frame / tibbles content dynamic, filters scroll bars. several packages offer capability.DT package, used throughout handbook, can insert code chunk like :function datatable() print provided data frame dynamic table reader. can set rownames = FALSE simplify far left-side table. filter = \"top\" provides filter column. option() argument provide list specifications. include two: pageLength = 5 set number rows appear 5 (remaining rows can viewed paging arrows), scrollX=TRUE enables scrollbar bottom table (columns extend far right).dataset large, consider showing top X rows wrapping data frame head().","code":""},{"path":"r-markdown-reports.html","id":"resources","chapter":"1 R Markdown reports","heading":"1.10 Resources","text":"information can found via:https://bookdown.org/yihui/rmarkdown/https://rmarkdown.rstudio.com/articles_intro.htmlA good explainer markdown vs knitr vs Rmarkdown : https://stackoverflow.com/questions/40563479/relationship--r-markdown-knitr-pandoc--bookdown","code":""}]

[{"path":"index.html","id":"welcome---this-is-a-draft","chapter":"Welcome - THIS IS A DRAFT","heading":"Welcome - THIS IS A DRAFT","text":"","code":""},{"path":"index.html","id":"about-this-handbook","chapter":"Welcome - THIS IS A DRAFT","heading":"About this handbook","text":"free open-access R reference book applied epidemiologists public health practitioners.book strives :Serve quick reference guide - textbookAddress common epidemiological problems via task-centered examplesBe accessible settings limited technical support low internet-connectivity (link downloadable version)Contain clear simple language, step--step instructions helpful code annotationBe living document, growing adapting new best practicesWhat gaps book address?Many epidemiologists lack formal R training transitioning SAS, STATA, statistical software.R universe changes frequently - place best practice code catered toward common epidemiologist user.Epidemiologists often search dozens online forums answers, epidemiology-oriented.epidemiologists work low internet-connectivity environments limited technical support.different R books?handbook written epidemiologists, epidemiologists. approved product specific organization. Examples techniques adapted authors lived experience local, national, academic, emergency settings.book offered download-able format settings unreliable internet.addition core R skills book uses epidemiology-centered examples cover tasks like epidemic curves, transmission chains epidemic modeling, age sex pyramids, age sex standardization, probabilistic matching records, outbreak detection methods, survey analysis, causal diagrams, survival analysis, GIS basics, phylogenetic trees, missing data imputation, automated routine reports Rmarkdown, etc…","code":""},{"path":"index.html","id":"how-to-read-this-handbook","chapter":"Welcome - THIS IS A DRAFT","heading":"How to read this handbook","text":"Search via search box Table ContentsClick “clipboard” “copy” icon copy codeSee “Resources” section page links trainingClick download offline versionIf use handbook suggestions, let us know SURVEY LINK!","code":""},{"path":"index.html","id":"edit-or-contribute","chapter":"Welcome - THIS IS A DRAFT","heading":"Edit or contribute","text":"suggestions want contribute content, please post issue submit pull request github repository.","code":""},{"path":"index.html","id":"acknowledgements","chapter":"Welcome - THIS IS A DRAFT","heading":"Acknowledgements","text":"","code":""},{"path":"index.html","id":"contributors","chapter":"Welcome - THIS IS A DRAFT","heading":"Contributors","text":"handbook collaborative team production. conceived, written, edited epidemiologists public health practitioners around world, drawn upon experiences within constellation organizations including local/state/provincial/national health departments ministries, World Health Organization (), MSF (Medecins sans frontiers / Doctors without Borders), UNHCR, WFP, hospital systems, academic institutions.team members:Editor--Chief: Neale BatraCore team: Alex Spina, Amrish Baidjoe, Henry Laurenson-Schafer, Finlay Campbell, Pat KeatingAuthors (order contributions): Neale Batra, Alex Spina, Paula Blomquist, Finlay Campbell, Henry Laurenson-Schafer, Isaac Florence, Natalie Fischer, Daniel Molling, Liza Coyer, Jonny Polonski, Yurie Izawa, Sara HollisReviewers: …(list)…Advisers …(list)…","code":""},{"path":"index.html","id":"funding-and-programmatic-support","chapter":"Welcome - THIS IS A DRAFT","heading":"Funding and programmatic support","text":"handbook received funding via COVID-19 emergency capacity-building grant Training Programs Epidemiology Public Health Interventions Network (TEPHINET).Programmatic support provided EPIET Alumni Network (EAN).","code":""},{"path":"index.html","id":"inspiration","chapter":"Welcome - THIS IS A DRAFT","heading":"Inspiration","text":"multitude tutorials vignettes provided foundational knowledge development handbook content credited within respective pages.generally, following sources provided inspiration laid groundwork handbook:“R4Epis” project (collaboration MSF RECON)R Epidemics Consortium (RECON)R Data Science book (R4DS)bookdown: Authoring Books Technical Documents R MarkdownNetlify hosts website","code":""},{"path":"index.html","id":"image-credits","chapter":"Welcome - THIS IS A DRAFT","heading":"Image credits","text":"Logo: CDC Public Health Image library, R Graph Gallery2013 Yemen looking mosquito breeding sitesEbola virusSurvey RajasthanNetwork","code":""},{"path":"index.html","id":"license-and-terms-of-use","chapter":"Welcome - THIS IS A DRAFT","heading":"License and Terms of Use","text":"handbook approved product specific organization.Although strive accuracy, provide guarantee content book.book licensed Creative Commons license TBD…","code":""},{"path":"pivoting.html","id":"pivoting","chapter":"1 Pivoting","heading":"1 Pivoting","text":"manipulating data, pivoting can understood refer one two processes:creation pivot tables, tables “… statistics summarize data extensive table (database, spreadsheet, business intelligence program). summary might include sums, averages, statistics, pivot table groups together meaningful way… arrange rearrange (”pivot“) statistics order draw attention useful information. leads finding figures facts quickly making integral data analysis.” see wiki.conversion table long wide format, vice versa.former crucial step data analysis, covered elsewhere (link dplyr, summarise, etc). section, focus latter definition.","code":""},{"path":"pivoting.html","id":"wide-to-long","chapter":"1 Pivoting","heading":"1.1 Wide-to-long","text":"Transforming dataset wide long (image source)","code":""},{"path":"pivoting.html","id":"data","chapter":"1 Pivoting","heading":"Data","text":"Data often entered stored format might useful presentation, analysis. Let us take count_data dataset example, stored “wide” format, means column variable row observation. useful presenting information table entering data (e.g. Excel) case report forms. However, typically needs transformed “long” format order analyse visualise.observation dataset refers malaria counts one 65 facilities given date, ranging 2019-03-18 2019-06-14. facilties located one Province (North) four Districts (Spring, Bolo, Dingo, Barnard). dataset provides overall counts malaria, well age-specific counts three age groups - <4 years, 5-14 years, 15 years older.Visualising overall malaria counts time poses difficulty data ’s current format:However, wanted display relative contributions age group total count? case, need ensure variable interest (age group), appears dataset single column can passed ggplot2’s “aesthetics” (aes()) function.Consider also using common problem whereby data stored dates columns, example dataset tidyr::table4a","code":"\ncount_data <- import(\"facility_count_data.rds\")\nggplot(count_data) +\n  geom_col(aes(x = data_date, y = malaria_tot))\ntidyr::table4a## # A tibble: 3 x 3\r\n##   country     `1999` `2000`\r\n## * <chr>        <int>  <int>\r\n## 1 Afghanistan    745   2666\r\n## 2 Brazil       37737  80488\r\n## 3 China       212258 213766"},{"path":"pivoting.html","id":"pivot_longer","chapter":"1 Pivoting","heading":"pivot_longer()","text":"First, let’s begin loading packages converting count_data tibble easy printing:Next, want use tidyr’s pivot_longer() function convert wide dataset long format, converting four columns data malaria counts two new columns: one captures variable name one captures values cells. Since four variables begin prefix malaria_, can make use handy function starts_with().However, also specified columns position:named range:Notice newly created dataframe (df_long) rows (12,152 vs 3,038); become longer. fact, precisely four times long, row original dataset now represents four rows df_long, one malaria count observations (<4y, 5-14y, 15y+, total).addition becoming longer, new dataset fewer columns (8 vs 10), data previously stored four columns (beginning prefix malaria_) now stored two. two columns given default names name value, can override defaults provide meaningful names, can help remember stored within, using names_to values_to arguments. Let’s use names age_group count:can now pass new dataset ggplot2 display malaria counts age group:look plot - wrong ? encountered common problem - also included total counts malaria_tot column, magnitude bar plot twice high .can handle number ways. simply filter dataset pass ggplot2:Alternatively, excluded variable ran pivot_longer, thereby maintaining dataset separate variable:","code":"\npacman::p_load(tidyverse)\n\n# Convert count_data to `tibble` for better printing\ncount_data <- \n  count_data %>% \n  as_tibble() \n\ncount_data## # A tibble: 3,038 x 10\r\n##    location_name data_date  submitted_date Province District `malaria_rdt_0-4` `malaria_rdt_5-14` malaria_rdt_15 malaria_tot newid\r\n##    <chr>         <date>     <date>         <chr>    <chr>                <int>              <int>          <int>       <int> <int>\r\n##  1 Facility 1    2019-06-13 2019-06-14     North    Spring                  11                 12             23          46     1\r\n##  2 Facility 2    2019-06-13 2019-06-14     North    Bolo                    11                 10              5          26     2\r\n##  3 Facility 3    2019-06-13 2019-06-14     North    Dingo                    8                  5              5          18     3\r\n##  4 Facility 4    2019-06-13 2019-06-14     North    Bolo                    16                 16             17          49     4\r\n##  5 Facility 5    2019-06-13 2019-06-14     North    Bolo                     9                  2              6          17     5\r\n##  6 Facility 6    2019-06-13 2019-06-14     North    Dingo                    3                  1              4           8     6\r\n##  7 Facility 6    2019-06-12 2019-06-14     North    Dingo                    4                  0              3           7     6\r\n##  8 Facility 5    2019-06-12 2019-06-14     North    Bolo                    15                 14             13          42     5\r\n##  9 Facility 5    2019-06-11 2019-06-14     North    Bolo                    11                 11             13          35     5\r\n## 10 Facility 5    2019-06-10 2019-06-14     North    Bolo                    19                 15             15          49     5\r\n## # ... with 3,028 more rows\ndf_long <- \n  count_data %>% \n  pivot_longer(\n    cols = starts_with(\"malaria_\")\n  )\n\ndf_long## # A tibble: 12,152 x 8\r\n##    location_name data_date  submitted_date Province District newid name             value\r\n##    <chr>         <date>     <date>         <chr>    <chr>    <int> <chr>            <int>\r\n##  1 Facility 1    2019-06-13 2019-06-14     North    Spring       1 malaria_rdt_0-4     11\r\n##  2 Facility 1    2019-06-13 2019-06-14     North    Spring       1 malaria_rdt_5-14    12\r\n##  3 Facility 1    2019-06-13 2019-06-14     North    Spring       1 malaria_rdt_15      23\r\n##  4 Facility 1    2019-06-13 2019-06-14     North    Spring       1 malaria_tot         46\r\n##  5 Facility 2    2019-06-13 2019-06-14     North    Bolo         2 malaria_rdt_0-4     11\r\n##  6 Facility 2    2019-06-13 2019-06-14     North    Bolo         2 malaria_rdt_5-14    10\r\n##  7 Facility 2    2019-06-13 2019-06-14     North    Bolo         2 malaria_rdt_15       5\r\n##  8 Facility 2    2019-06-13 2019-06-14     North    Bolo         2 malaria_tot         26\r\n##  9 Facility 3    2019-06-13 2019-06-14     North    Dingo        3 malaria_rdt_0-4      8\r\n## 10 Facility 3    2019-06-13 2019-06-14     North    Dingo        3 malaria_rdt_5-14     5\r\n## # ... with 12,142 more rows\ncount_data %>% \n  pivot_longer(\n    cols = 6:9\n  )## # A tibble: 12,152 x 8\r\n##    location_name data_date  submitted_date Province District newid name             value\r\n##    <chr>         <date>     <date>         <chr>    <chr>    <int> <chr>            <int>\r\n##  1 Facility 1    2019-06-13 2019-06-14     North    Spring       1 malaria_rdt_0-4     11\r\n##  2 Facility 1    2019-06-13 2019-06-14     North    Spring       1 malaria_rdt_5-14    12\r\n##  3 Facility 1    2019-06-13 2019-06-14     North    Spring       1 malaria_rdt_15      23\r\n##  4 Facility 1    2019-06-13 2019-06-14     North    Spring       1 malaria_tot         46\r\n##  5 Facility 2    2019-06-13 2019-06-14     North    Bolo         2 malaria_rdt_0-4     11\r\n##  6 Facility 2    2019-06-13 2019-06-14     North    Bolo         2 malaria_rdt_5-14    10\r\n##  7 Facility 2    2019-06-13 2019-06-14     North    Bolo         2 malaria_rdt_15       5\r\n##  8 Facility 2    2019-06-13 2019-06-14     North    Bolo         2 malaria_tot         26\r\n##  9 Facility 3    2019-06-13 2019-06-14     North    Dingo        3 malaria_rdt_0-4      8\r\n## 10 Facility 3    2019-06-13 2019-06-14     North    Dingo        3 malaria_rdt_5-14     5\r\n## # ... with 12,142 more rows\ncount_data %>% \n  pivot_longer(\n    cols = `malaria_rdt_0-4`:malaria_tot\n  )## # A tibble: 12,152 x 8\r\n##    location_name data_date  submitted_date Province District newid name             value\r\n##    <chr>         <date>     <date>         <chr>    <chr>    <int> <chr>            <int>\r\n##  1 Facility 1    2019-06-13 2019-06-14     North    Spring       1 malaria_rdt_0-4     11\r\n##  2 Facility 1    2019-06-13 2019-06-14     North    Spring       1 malaria_rdt_5-14    12\r\n##  3 Facility 1    2019-06-13 2019-06-14     North    Spring       1 malaria_rdt_15      23\r\n##  4 Facility 1    2019-06-13 2019-06-14     North    Spring       1 malaria_tot         46\r\n##  5 Facility 2    2019-06-13 2019-06-14     North    Bolo         2 malaria_rdt_0-4     11\r\n##  6 Facility 2    2019-06-13 2019-06-14     North    Bolo         2 malaria_rdt_5-14    10\r\n##  7 Facility 2    2019-06-13 2019-06-14     North    Bolo         2 malaria_rdt_15       5\r\n##  8 Facility 2    2019-06-13 2019-06-14     North    Bolo         2 malaria_tot         26\r\n##  9 Facility 3    2019-06-13 2019-06-14     North    Dingo        3 malaria_rdt_0-4      8\r\n## 10 Facility 3    2019-06-13 2019-06-14     North    Dingo        3 malaria_rdt_5-14     5\r\n## # ... with 12,142 more rows\ndf_long <- \n  count_data %>% \n  pivot_longer(\n    cols = starts_with(\"malaria_\"),\n    names_to = \"age_group\",\n    values_to = \"counts\"\n  )\n\ndf_long## # A tibble: 12,152 x 8\r\n##    location_name data_date  submitted_date Province District newid age_group        counts\r\n##    <chr>         <date>     <date>         <chr>    <chr>    <int> <chr>             <int>\r\n##  1 Facility 1    2019-06-13 2019-06-14     North    Spring       1 malaria_rdt_0-4      11\r\n##  2 Facility 1    2019-06-13 2019-06-14     North    Spring       1 malaria_rdt_5-14     12\r\n##  3 Facility 1    2019-06-13 2019-06-14     North    Spring       1 malaria_rdt_15       23\r\n##  4 Facility 1    2019-06-13 2019-06-14     North    Spring       1 malaria_tot          46\r\n##  5 Facility 2    2019-06-13 2019-06-14     North    Bolo         2 malaria_rdt_0-4      11\r\n##  6 Facility 2    2019-06-13 2019-06-14     North    Bolo         2 malaria_rdt_5-14     10\r\n##  7 Facility 2    2019-06-13 2019-06-14     North    Bolo         2 malaria_rdt_15        5\r\n##  8 Facility 2    2019-06-13 2019-06-14     North    Bolo         2 malaria_tot          26\r\n##  9 Facility 3    2019-06-13 2019-06-14     North    Dingo        3 malaria_rdt_0-4       8\r\n## 10 Facility 3    2019-06-13 2019-06-14     North    Dingo        3 malaria_rdt_5-14      5\r\n## # ... with 12,142 more rows\nggplot(df_long) +\n  geom_col(\n    aes(x = data_date, y = counts, fill = age_group)\n  )\ndf_long %>% \n  filter(age_group != \"malaria_tot\") %>% \n  ggplot() +\n  geom_col(\n    aes(x = data_date, y = counts, fill = age_group)\n  )\ncount_data %>% \n  pivot_longer(\n    cols = `malaria_rdt_0-4`:malaria_rdt_15,\n    names_to = \"age_group\",\n    values_to = \"counts\"\n  ) %>% \n  ggplot() +\n  geom_col(\n    aes(x = data_date, y = counts, fill = age_group)\n  )"},{"path":"pivoting.html","id":"long-to-wide","chapter":"1 Pivoting","heading":"1.2 Long-to-wide","text":"Transforming dataset long wide (image source)instances, may wish convert dataset wider format. , can use pivot_wider() function.typical use case want transform results analysis format digestible reader. Typically, transforming dataset observations spread multiple rows one observation occupies single row.introduces useful topic “tidy data”, variable ’s column, observation ’s row, value ’s cell. topic can found https://r4ds..co.nz/tidy-data.html.","code":""},{"path":"pivoting.html","id":"data-1","chapter":"1 Pivoting","heading":"Data","text":"Let us use linelist dataset. Suppose want know counts individuals different age groups, sex:gives us long dataset great visualisation, ideal presentation table:","code":"\nlinelist <- \n  linelist %>% \n  as_tibble()\n  \ndf_wide <- \n  linelist %>% \n  count(age_cat, gender)\nggplot(df_wide) +\n  geom_col(aes(x = age_cat, y = n, fill = gender))"},{"path":"pivoting.html","id":"pivot-wider","chapter":"1 Pivoting","heading":"Pivot wider","text":"Therefore, can use pivot_wider() put better format inclusion tables reports. argument names_from specifies column generate new column names, argument values_from specifies column take values populate cells:table much nicer inclusion reports:","code":"\ntable_wide <- \n  df_wide %>% \n  pivot_wider(\n    names_from = gender,\n    values_from = n\n  )\n\ntable_wide## # A tibble: 9 x 4\r\n##   age_cat     f     m  `NA`\r\n##   <fct>   <int> <int> <int>\r\n## 1 0-4       622   411    34\r\n## 2 5-9       661   399    44\r\n## 3 10-14     527   377    25\r\n## 4 15-19     400   332    35\r\n## 5 20-29     451   605    29\r\n## 6 30-49     158   559    24\r\n## 7 50-69       5    88     3\r\n## 8 70+        NA    12    NA\r\n## 9 <NA>       NA    NA    87\ntable_wide %>% \n  janitor::adorn_totals(c(\"row\", \"col\")) %>% # adds a total row and column\n  knitr::kable() %>% \n  kableExtra::row_spec(row = 9, bold = TRUE) %>% \n  kableExtra::column_spec(column = 5, bold = TRUE) "},{"path":"pivoting.html","id":"fill","chapter":"1 Pivoting","heading":"1.3 Fill","text":"Filling missing data","code":""},{"path":"pivoting.html","id":"data-2","chapter":"1 Pivoting","heading":"Data","text":"situations pivot, commonly bind, left gaps cells like fill. example, take two datasets, observations measurement number, name facility, case count time. However, second dataset also variable Year. perform bind_rows() join two datasets together, Year variable filled NA rows prior information (.e. first dataset):","code":"\ndf1 <- \n  tibble::tribble(\n       ~Measurement, ~Facility, ~Cases,\n                  1,  \"Hosp 1\",     66,\n                  2,  \"Hosp 1\",     26,\n                  3,  \"Hosp 1\",      8,\n                  1,  \"Hosp 2\",     71,\n                  2,  \"Hosp 2\",     62,\n                  3,  \"Hosp 2\",     70,\n                  1,  \"Hosp 3\",     47,\n                  2,  \"Hosp 3\",     70,\n                  3,  \"Hosp 3\",     38,\n       )\n\ndf1 ## # A tibble: 9 x 3\r\n##   Measurement Facility Cases\r\n##         <dbl> <chr>    <dbl>\r\n## 1           1 Hosp 1      66\r\n## 2           2 Hosp 1      26\r\n## 3           3 Hosp 1       8\r\n## 4           1 Hosp 2      71\r\n## 5           2 Hosp 2      62\r\n## 6           3 Hosp 2      70\r\n## 7           1 Hosp 3      47\r\n## 8           2 Hosp 3      70\r\n## 9           3 Hosp 3      38\ndf2 <- \n  tibble::tribble(\n    ~Year, ~Measurement, ~Facility, ~Cases,\n     2000,            1,  \"Hosp 4\",     82,\n     2001,            2,  \"Hosp 4\",     87,\n     2002,            3,  \"Hosp 4\",     46\n  )\n\ndf2## # A tibble: 3 x 4\r\n##    Year Measurement Facility Cases\r\n##   <dbl>       <dbl> <chr>    <dbl>\r\n## 1  2000           1 Hosp 4      82\r\n## 2  2001           2 Hosp 4      87\r\n## 3  2002           3 Hosp 4      46\ndf_combined <- \n  bind_rows(df1, df2) %>% \n  arrange(Measurement, Facility)\n\ndf_combined## # A tibble: 12 x 4\r\n##    Measurement Facility Cases  Year\r\n##          <dbl> <chr>    <dbl> <dbl>\r\n##  1           1 Hosp 1      66    NA\r\n##  2           1 Hosp 2      71    NA\r\n##  3           1 Hosp 3      47    NA\r\n##  4           1 Hosp 4      82  2000\r\n##  5           2 Hosp 1      26    NA\r\n##  6           2 Hosp 2      62    NA\r\n##  7           2 Hosp 3      70    NA\r\n##  8           2 Hosp 4      87  2001\r\n##  9           3 Hosp 1       8    NA\r\n## 10           3 Hosp 2      70    NA\r\n## 11           3 Hosp 3      38    NA\r\n## 12           3 Hosp 4      46  2002"},{"path":"pivoting.html","id":"fill-1","chapter":"1 Pivoting","heading":"fill()","text":"case, Year useful variable include, particularly want explore trends time. Therefore, use fill() fill empty cells, specifying column fill direction (case ):can rearrange data need fill downward direction:dataset now useful plotting:less useful presenting table, let’s practice converting long, untidy dataframe wider, tidy dataframe:N.B. case, specify include three variables Facility, Year, Cases additional variable Measurement interfere creation table:","code":"\ndf_combined %>% \n  fill(Year, .direction = \"up\")## # A tibble: 12 x 4\r\n##    Measurement Facility Cases  Year\r\n##          <dbl> <chr>    <dbl> <dbl>\r\n##  1           1 Hosp 1      66  2000\r\n##  2           1 Hosp 2      71  2000\r\n##  3           1 Hosp 3      47  2000\r\n##  4           1 Hosp 4      82  2000\r\n##  5           2 Hosp 1      26  2001\r\n##  6           2 Hosp 2      62  2001\r\n##  7           2 Hosp 3      70  2001\r\n##  8           2 Hosp 4      87  2001\r\n##  9           3 Hosp 1       8  2002\r\n## 10           3 Hosp 2      70  2002\r\n## 11           3 Hosp 3      38  2002\r\n## 12           3 Hosp 4      46  2002\ndf_combined <- \n  df_combined %>% \n  arrange(Measurement, desc(Facility))\n\ndf_combined## # A tibble: 12 x 4\r\n##    Measurement Facility Cases  Year\r\n##          <dbl> <chr>    <dbl> <dbl>\r\n##  1           1 Hosp 4      82  2000\r\n##  2           1 Hosp 3      47    NA\r\n##  3           1 Hosp 2      71    NA\r\n##  4           1 Hosp 1      66    NA\r\n##  5           2 Hosp 4      87  2001\r\n##  6           2 Hosp 3      70    NA\r\n##  7           2 Hosp 2      62    NA\r\n##  8           2 Hosp 1      26    NA\r\n##  9           3 Hosp 4      46  2002\r\n## 10           3 Hosp 3      38    NA\r\n## 11           3 Hosp 2      70    NA\r\n## 12           3 Hosp 1       8    NA\ndf_combined <- \n  df_combined %>% \n  fill(Year, .direction = \"down\")\n\ndf_combined## # A tibble: 12 x 4\r\n##    Measurement Facility Cases  Year\r\n##          <dbl> <chr>    <dbl> <dbl>\r\n##  1           1 Hosp 4      82  2000\r\n##  2           1 Hosp 3      47  2000\r\n##  3           1 Hosp 2      71  2000\r\n##  4           1 Hosp 1      66  2000\r\n##  5           2 Hosp 4      87  2001\r\n##  6           2 Hosp 3      70  2001\r\n##  7           2 Hosp 2      62  2001\r\n##  8           2 Hosp 1      26  2001\r\n##  9           3 Hosp 4      46  2002\r\n## 10           3 Hosp 3      38  2002\r\n## 11           3 Hosp 2      70  2002\r\n## 12           3 Hosp 1       8  2002\nggplot(df_combined) +\n  aes(Year, Cases, fill = Facility) +\n  geom_col()\ndf_combined %>% \n  pivot_wider(\n    id_cols = c(Facility, Year, Cases),\n    names_from = \"Year\",\n    values_from = \"Cases\"\n  ) %>% \n  arrange(Facility) %>% \n  janitor::adorn_totals(c(\"row\", \"col\")) %>% \n  knitr::kable() %>% \n  kableExtra::row_spec(row = 5, bold = TRUE) %>% \n  kableExtra::column_spec(column = 5, bold = TRUE) \ndf_combined %>% \n  pivot_wider(\n    names_from = \"Year\",\n    values_from = \"Cases\"\n  ) %>% \n  knitr::kable()"},{"path":"pivoting.html","id":"resources","chapter":"1 Pivoting","heading":"1.4 Resources","text":"helpful tutorial","code":""}]

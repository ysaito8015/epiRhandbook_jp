[{"path":"index.html","id":"section","chapter":"","heading":"","text":"DRAFT. REVIEWERS GIVE FEEDBACK LINK.LIKE HANDBOOK? SOMETHING CHANGED? PLEASE TELL US!","code":""},{"path":"index.html","id":"r-for-applied-epi-and-public-health","chapter":"","heading":"R for applied ‘epi’ and public health","text":"handbook strives :Serve quick R code reference manualProvide task-centered examples addressing common epidemiologic problemsAssist epidemiologists transitioning R SAS, STATA, SPSS, ExcelBe accessible settings low internet-connectivity via offline version (instructions )different R books?community-driven - written epidemiologists epidemiologists spare time leveraging experience local, national, academic, emergency settingsIt uses practical epi examples - cleaning case linelists, making transmission chains epidemic curves, automated reports dashboards, modeling incidence making projections, demographic pyramids rate standardization, record matching, outbreak detection, survey analysis, survival analysis, GIS basics, contact tracing, phylogenetic trees…","code":""},{"path":"index.html","id":"how-to-read-this-handbook","chapter":"","heading":"How to read this handbook","text":"Online versionSearch via search box Table ContentsClick “copy” icons copy codeSee “Resources” section page resources“Follow-along” downloading example dataAdjust font size browser zoom settingsOffline versionSee instructions download offline version handbook [Download book data] page.LanguagesWe seeking translate book languages English. can help, please contact us.","code":""},{"path":"index.html","id":"contact_us","chapter":"","heading":"Contact us","text":"Structured feedback formEmail us epiRhandbook@gmail.comSubmit issues Github repositoryTwitter handle @epiRhandbook","code":""},{"path":"index.html","id":"acknowledgements","chapter":"","heading":"Acknowledgements","text":"handbook produced collaboration epidemiologists around world spare time, drawing upon experiences organizations including local, state/provincial, national health agencies, World Health Organization (), MSF (Médecins Sans Frontières / Doctors without Borders), hospital systems, academic institutions.handbook approved product specific organization. Although strive accuracy, provide guarantee content book.","code":""},{"path":"index.html","id":"contributors","chapter":"","heading":"Contributors","text":"Editor--Chief: Neale BatraProject core team: Neale Batra, Alex Spina, Amrish Baidjoe, Pat Keating, Henry Laurenson-Schafer, Finlay CampbellAuthors: Neale Batra, Alex Spina, Paula Blomquist, Finlay Campbell, Henry Laurenson-Schafer, Isaac Florence, Natalie Fischer, Aminata Ndiaye, Liza Coyer, Jonathan Polonsky, Yurie Izawa, Chris Bailey, Daniel Molling, Isha Berry, Emma Buajitti, Mathilde Mousset, Sara Hollis, Wen LinReviewers: Pat Keating, Annick Lenglet, Margot Charette, Daniely Xavier, Esther Kukielka, Michelle Sloan, Aybüke Koyuncu, Rachel Burke, Kate Kelsey, Berhe Etsay, John Rossow, Mackenzie Zendt, James Wright, Laura Haskins, Flavio Finger, Tim Taylor, Jae Hyoung Tim Lee, Brianna Bradley, Wayne Enanoria, Manual Albela Miranda, Molly Mantus, Priscilla Spencer, Pattama Ulrich, Joseph Timothy, Adam Vaughan, Olivia Varsaneux, Lionel Monteiro, Joao MuiangaIllustrations: Calder Fong","code":""},{"path":"index.html","id":"funding-and-support","chapter":"","heading":"Funding and support","text":"publication received supportive funding via COVID-19 emergency capacity-building grant Training Programs Epidemiology Public Health Interventions Network (TEPHINET). publication supported Cooperative Agreement number NU2GGH001873, funded Centers Disease Control Prevention TEPHINET, program Task Force Global Health. contents solely responsibility authors necessarily represent official views Centers Disease Control Prevention, Department Health Human Services, Task Force Global Health, Inc. TEPHINET.Administrative support provided EPIET Alumni Network (EAN), special thanks Annika Wendland. EPIET European Programme Intervention Epidemiology Training.Special thanks Médecins Sans Frontières (MSF) Operational Centre Amsterdam (OCA) support development handbook.","code":""},{"path":"index.html","id":"inspiration","chapter":"","heading":"Inspiration","text":"multitude tutorials vignettes provided knowledge development handbook content credited within respective pages.generally, following sources provided inspiration handbook:“R4Epis” project (collaboration MSF RECON)R Epidemics Consortium (RECON)R Data Science book (R4DS)bookdown: Authoring Books Technical Documents R MarkdownNetlify hosts website","code":""},{"path":"index.html","id":"terms-of-use-and-license","chapter":"","heading":"Terms of Use and License","text":"work licensed Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.Universities academic courses welcome use handbook students. questions intended use, email epirhandbook@gmail.com.Contributor code","code":""},{"path":"download-handbook-and-data.html","id":"download-handbook-and-data","chapter":"1 Download handbook and data","heading":"1 Download handbook and data","text":"","code":""},{"path":"download-handbook-and-data.html","id":"download-offline-handbook","chapter":"1 Download handbook and data","heading":"1.1 Download offline handbook","text":"can download offline version handbook HTML file can view file web browser even longer internet access. considering offline use Epi R Handbook things consider:open file may take minute two images Table Contents loadThe offline handbook slightly different layout - one long page Table Contents left. search specific terms use Ctrl+f (Cmd-f)See [Suggested packages] page assist installing appropriate R packages lose internet connectivityInstall R package handbookfiles contains example data (install process described )two ways can download handbook:","code":""},{"path":"download-handbook-and-data.html","id":"option-1-use-download-link","chapter":"1 Download handbook and data","heading":"Option 1: Use download link","text":"quick access, right-click link select “Save link ”.Mac, use Cmd+click. mobile, press hold link select “Save link”. handbook download device. screen raw HTML code appears, ensure followed instructions try Option 2.","code":""},{"path":"download-handbook-and-data.html","id":"option-2-use-our-r-package","chapter":"1 Download handbook and data","heading":"Option 2: Use our R package","text":"offer R package called handbookfiles. includes function download_book() downloads handbook file Github repository computer.package also contains function get_data() downloads example data computer.Run following code install R package handbookfiles Github repository epirhandbook. package CRAN, use special function p_install_gh() install Github.Next, run function download_book() (empty parentheses) download handbook computer. window appear allowing select save location.","code":"\n# install the latest version of the Epi R Handbook package\npacman::p_install_gh(\"epirhandbook/handbookfiles\")\n# download the offline handbook to your computer\ndownload_book()"},{"path":"download-handbook-and-data.html","id":"download-data-to-follow-along","chapter":"1 Download handbook and data","heading":"1.2 Download data to follow along","text":"“follow along” handbook pages, can download example data outputs.","code":""},{"path":"download-handbook-and-data.html","id":"option-1-use-our-r-package","chapter":"1 Download handbook and data","heading":"Option 1: Use our R package","text":"easiest approach download data install R package handbookfiles. contains function get_data() saves example data folder choice computer.install R package handbookfiles, run following code. package CRAN, use function p_install_gh() install epirhandbook Github page.Next, use function get_data() download example data computer. Run get_data(\"\") get example data, provide specific file name extension within quotes retrieve one file.data already downloaded package, simply need transferred folder computer. pop-window appear, allowing select save folder location. suggest create new “data” folder 30 files (including example data example outputs).used get_data() save file computer, still need import R. See [Import export] page details.wish, can review data used handbook “data” folder Github repository.","code":"\n# install the latest version of the Epi R Handbook package\npacman::p_install_gh(\"epirhandbook/handbookfiles\")\n# download all the example data into a folder on your computer\nget_data(\"all\")\n\n# download only the linelist example data into a folder on your computer\nget_data(file = \"linelist_cleaned.rds\")\n# download a specific file into a folder on your computer\nget_data(\"linelist_cleaned.rds\")"},{"path":"download-handbook-and-data.html","id":"option-2-download-one-by-one","chapter":"1 Download handbook and data","heading":"Option 2: Download one-by-one","text":"option involves downloading data file--file Github repository via either link R command specific file. file types allow download button, others can downloaded via R command.","code":""},{"path":"download-handbook-and-data.html","id":"case-linelist","chapter":"1 Download handbook and data","heading":"Case linelist","text":"fictional Ebola outbreak, expanded handbook team ebola_sim practice dataset outbreaks package.Click download “raw” linelist (.xlsx). “raw” case linelist Excel spreadsheet messy data. Use follow-along [Cleaning data core functions] page.Click download “raw” linelist (.xlsx). “raw” case linelist Excel spreadsheet messy data. Use follow-along [Cleaning data core functions] page.Click download “clean” linelist (.rds). Use file pages handbook use linelist. .rds file R-specific file type preserves column classes. ensures minimal cleaning importing data R.Click download “clean” linelist (.rds). Use file pages handbook use linelist. .rds file R-specific file type preserves column classes. ensures minimal cleaning importing data R.related files:Click download “clean” linelist Excel fileClick download “clean” linelist Excel filePart cleaning page uses “cleaning dictionary” (.csv file). can load directly R running following commands:Part cleaning page uses “cleaning dictionary” (.csv file). can load directly R running following commands:","code":"\npacman::p_load(rio) # install/load the rio package\n\n# import the file directly from Github\ncleaning_dict <- import(\"https://github.com/epirhandbook/Epi_R_handbook/raw/master/data/case_linelists/cleaning_dict.csv\")"},{"path":"download-handbook-and-data.html","id":"data_malaria","chapter":"1 Download handbook and data","heading":"Malaria count data","text":"data fictional counts malaria cases age group, facility, day. .rds file R-specific file type preserves column classes. ensures minimal cleaning importing data R.\r\nClick download\r\nmalaria count data (.rds file)\r\n","code":""},{"path":"download-handbook-and-data.html","id":"likert-scale-data","chapter":"1 Download handbook and data","heading":"Likert-scale data","text":"fictional data Likert-style survey, used page [Demographic pyramids Likert-scales]. can load data directly R running following commands:","code":"\npacman::p_load(rio) # install/load the rio package\n\n# import the file directly from Github\nlikert_data <- import(\"https://raw.githubusercontent.com/nsbatra/Epi_R_handbook/master/data/likert_data.csv\")"},{"path":"download-handbook-and-data.html","id":"flexdashboard","chapter":"1 Download handbook and data","heading":"Flexdashboard","text":"links file associated page [Dashboards R Markdown]:download R Markdown outbreak dashboard, right-click link (Cmd+click Mac) select “Save link ”.download HTML dashboard, right-click link (Cmd+click Mac) select “Save link ”.","code":""},{"path":"download-handbook-and-data.html","id":"contact-tracing","chapter":"1 Download handbook and data","heading":"Contact Tracing","text":"Contact Tracing page demonstrated analysis contact tracing data, using example data Go.Data. data used page can downloaded .rds files clicking following links:\r\nClick download\r\ncase investigation data (.rds file)\r\n\r\nClick download\r\ncontact registration data (.rds file)\r\n\r\nClick download\r\ncontact follow-data (.rds file)\r\nNOTE: Structured contact tracing data software (e.g. KoBo, DHIS2 Tracker, CommCare) may look different. like contribute alternative sample data content page, please contact us.TIP: deploying Go.Data want connect instance’s API, see Import export page (API section) Go.Data Community Practice.","code":""},{"path":"download-handbook-and-data.html","id":"gis","chapter":"1 Download handbook and data","heading":"GIS","text":"Shapefiles many sub-component files, different file extention. One file “.shp” extension, others may “.dbf”, “.prj”, etc.[GIS basics] page provides links Humanitarian Data Exchange website can download shapefiles directly zipped files.example, health facility points data can downloaded . Download “hotosm_sierra_leone_health_facilities_points_shp.zip”. saved computer, “unzip” folder. see several files different extensions (e.g. “.shp”, “.prj”, “.shx”) - must saved folder computer. import R, provide file path name “.shp” file st_read() sf package (described [GIS basics] page).follow Option 1 download example data (via R package handbookfiles), shapefiles included.Alternatively, can download shapefiles R Handbook Github “data” folder (see “gis” sub-folder). However, aware need download sub-file individually computer. Github, click file individually download clicking “Download” button. , can see shapefile “sle_adm3” consists many files - need downloaded Github.","code":""},{"path":"download-handbook-and-data.html","id":"phylogenetic-trees","chapter":"1 Download handbook and data","heading":"Phylogenetic trees","text":"See page Phylogenetic trees. Newick file phylogenetic tree constructed whole genome sequencing 299 Shigella sonnei samples corresponding sample data (converted text file). Belgian samples resulting data kindly provided Belgian NRC Salmonella Shigella scope project conducted ECDC EUPHEM Fellow, also published manuscript. international data openly available public databases (ncbi) previously published.download “Shigella_tree.txt” phylogenetic tree file, right-click link (Cmd+click Mac) select “Save link ”.download “sample_data_Shigella_tree.csv” additional information sample, right-click link (Cmd+click Mac) select “Save link ”.see new, created subset-tree, right-click link (Cmd+click Mac) select “Save link ”. .txt file download computer.can import .txt files read.tree() ape package, explained page.","code":"\nape::read.tree(\"Shigella_tree.txt\")"},{"path":"download-handbook-and-data.html","id":"standardization","chapter":"1 Download handbook and data","heading":"Standardization","text":"See page [Standardised rates]. can load data directly Github repository internet R session following commands:","code":"\n# install/load the rio package\npacman::p_load(rio) \n\n##############\n# Country A\n##############\n# import demographics for country A directly from Github\nA_demo <- import(\"https://github.com/epirhandbook/Epi_R_handbook/raw/master/data/standardization/country_demographics.csv\")\n\n# import deaths for country A directly from Github\nA_deaths <- import(\"https://github.com/epirhandbook/Epi_R_handbook/raw/master/data/standardization/deaths_countryA.csv\")\n\n##############\n# Country B\n##############\n# import demographics for country B directly from Github\nB_demo <- import(\"https://github.com/epirhandbook/Epi_R_handbook/raw/master/data/standardization/country_demographics_2.csv\")\n\n# import deaths for country B directly from Github\nB_deaths <- import(\"https://github.com/epirhandbook/Epi_R_handbook/raw/master/data/standardization/deaths_countryB.csv\")\n\n\n###############\n# Reference Pop\n###############\n# import demographics for country B directly from Github\nstandard_pop_data <- import(\"https://github.com/epirhandbook/Epi_R_handbook/raw/master/data/standardization/world_standard_population_by_sex.csv\")"},{"path":"download-handbook-and-data.html","id":"data_outbreak","chapter":"1 Download handbook and data","heading":"Time series and outbreak detection","text":"See page Time series outbreak detection. use campylobacter cases reported Germany 2002-2011, available surveillance R package.\r\nClick download\r\n Campylobacter Germany (.xlsx)\r\nalso use climate data Germany 2002-2011 (temperature degrees celsius rain fail millimetres) . downloaded EU Copernicus satellite reanalysis dataset using ecmwfr package. need download import stars::read_stars() explained time series page.\r\nClick download\r\n Germany weather 2002 (.nc file)\r\n\r\nClick download\r\n Germany weather 2003 (.nc file)\r\n\r\nClick download\r\n Germany weather 2004 (.nc file)\r\n\r\nClick download\r\n Germany weather 2005 (.nc file)\r\n\r\nClick download\r\n Germany weather 2006 (.nc file)\r\n\r\nClick download\r\n Germany weather 2007 (.nc file)\r\n\r\nClick download\r\n Germany weather 2008 (.nc file)\r\n\r\nClick download\r\n Germany weather 2009 (.nc file)\r\n\r\nClick download\r\n Germany weather 2010 (.nc file)\r\n\r\nClick download\r\n Germany weather 2011 (.nc file)\r\n","code":""},{"path":"download-handbook-and-data.html","id":"data_survey","chapter":"1 Download handbook and data","heading":"Survey analysis","text":"survey analysis page use fictional mortality survey data based MSF OCA survey templates. fictional data generated part “R4Epis” project.\r\nClick download\r\n Fictional survey data (.xlsx)\r\n\r\nClick download\r\n Fictional survey data dictionary (.xlsx)\r\n\r\nClick download\r\n Fictional survey population data (.xlsx)\r\n","code":""},{"path":"download-handbook-and-data.html","id":"data_shiny","chapter":"1 Download handbook and data","heading":"Shiny","text":"page [Dashboards Shiny] demonstrates construction simple app display malaria data.download R files produce Shiny app:can \r\nclick download app.R file contains UI Server code Shiny app.can \r\nclick download facility_count_data.rds file contains malaria data Shiny app. Note may need store within “data” folder () file paths work correctly.can \r\nclick download global.R file run prior app opening, explained page.can \r\nclick download plot_epicurve.R file sourced global.R. Note may need store within “funcs” folder () file paths work correctly.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"version-control-and-collaboration-with-git-and-github","chapter":"2 Version control and collaboration with Git and Github","heading":"2 Version control and collaboration with Git and Github","text":"chapter presents overview using Git collaborate others.\r\nextensive tutorials can \r\nfound bottom Resources section.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"what-is-git","chapter":"2 Version control and collaboration with Git and Github","heading":"2.1 What is Git?","text":"Git version control software allows tracking changes \r\nfolder. can used like “track change” option Word, LibreOffice \r\nGoogle docs, types files. one powerful\r\nused options version control.never heard ? - people developer\r\nbackground routinely learn use version control software (Git,\r\nMercurial, Subversion others), us \r\nquantitative disciplines taught skills. Consequently, epidemiologists never\r\nhear studies, learn fly.Wait, heard Github, ? - exactly, \r\noften use together, show . short:Git version control system, piece software. can use \r\nlocally computer synchronize folder \r\nhost website. default, one uses terminal give Git\r\ninstructions command-line.Git version control system, piece software. can use \r\nlocally computer synchronize folder \r\nhost website. default, one uses terminal give Git\r\ninstructions command-line.can use Git client/interface avoid command-line \r\nperform actions (least simple, super common\r\nones).can use Git client/interface avoid command-line \r\nperform actions (least simple, super common\r\nones).want store folder host website \r\ncollaborate others, may create account Github,\r\nGitlab, Bitbucket others.want store folder host website \r\ncollaborate others, may create account Github,\r\nGitlab, Bitbucket others.use client/interface Github Desktop, uses\r\nGit background manage files, locally \r\ncomputer, remotely Github server.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"why-use-the-combo-git-and-github","chapter":"2 Version control and collaboration with Git and Github","heading":"2.2 Why use the combo Git and Github?","text":"Using Git facilitates:Archiving documented versions incremental changes \r\ncan easily revert backwards previous stateHaving parallel branches, .e. developing/“working” versions \r\nstructured ways integrate changes reviewThis can done locally computer, even don’t collaborate\r\npeople. ever:regretted deleted section code, realize two\r\nmonths later actually needed ?regretted deleted section code, realize two\r\nmonths later actually needed ?come back project pause attempted \r\nremember whether made tricky modification one \r\nmodels?come back project pause attempted \r\nremember whether made tricky modification one \r\nmodels?file model_1.R another file model_1_test.R file\r\nmodel_1_not_working.R try things ?file model_1.R another file model_1_test.R file\r\nmodel_1_not_working.R try things ?file report.Rmd, file report_full.Rmd, file\r\nreport_true_final.Rmd, file report_final_20210304.Rmd, file\r\nreport_final_20210402.Rmd cursed archiving skills?file report.Rmd, file report_full.Rmd, file\r\nreport_true_final.Rmd, file report_final_20210304.Rmd, file\r\nreport_final_20210402.Rmd cursed archiving skills?Git help , worth learn alone.However, becomes even powerful used online repository\r\nGithub support collaborative projects. facilitates:Collaboration: others can review, comment , \r\naccept/decline changesCollaboration: others can review, comment , \r\naccept/decline changesSharing code, data, outputs, invite feedback\r\npublic (privately, team)Sharing code, data, outputs, invite feedback\r\npublic (privately, team)avoids:“Oops, forgot send last version now need \r\nredo two days worth work new file”“Oops, forgot send last version now need \r\nredo two days worth work new file”Mina, Henry Oumar worked time one script \r\nneed manually merge changesMina, Henry Oumar worked time one script \r\nneed manually merge changesTwo people try modify file Dropbox Sharepoint\r\ncreates synchronization error.Two people try modify file Dropbox Sharepoint\r\ncreates synchronization error.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"this-sounds-complicated-i-am-not-a-programmer","chapter":"2 Version control and collaboration with Git and Github","heading":"This sounds complicated, I am not a programmer","text":"can . Examples advanced uses can quite scary. However, much\r\nlike R, even Excel, don’t need become expert reap \r\nbenefits tool. Learning small number functions notions\r\nlets track changes, synchronize files online\r\nrepository collaborate colleagues short amount\r\ntime.Due learning curve, emergency context may best time\r\nlearn tools. learning can achieved steps. acquire\r\ncouple notions, workflow can quite efficient fast.\r\nworking project collaborating people\r\nGit necessity, actually good time get\r\nconfident using solo diving collaboration.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"setup","chapter":"2 Version control and collaboration with Git and Github","heading":"2.3 Setup","text":"","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"install-git","chapter":"2 Version control and collaboration with Git and Github","heading":"Install Git","text":"Git engine behind scenes computer, tracks\r\nchanges, branches (versions), merges, reverting. must first\r\ninstall Git https://git-scm.com/downloads.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"install-an-interface-optional-but-recommended","chapter":"2 Version control and collaboration with Git and Github","heading":"Install an interface (optional but recommended)","text":"Git language commands, can typed command\r\nline terminal. However, many clients/interfaces non-developpers, \r\nday--day use, rarely need interact Git directly \r\ninterface usually provide nice visualisation tools file modifications branches.Many options exist, OS, beginner friendly complex ones.\r\nGood options beginners include RStudio Git pane \r\nGithub Desktop, showcase \r\nchapter.\r\nIntermediate (powerfull, complex) options include Source Tree,\r\nGitkracken, Smart Git others.Quick explanation Git clients.Note: since interfaces actually use Git internally, can try several \r\n, switch one another given project, use console punctually\r\naction interface support, even perform number \r\nactions online Github.noted , may occasionally write Git commands \r\nterminal RStudio terminal pane (tab adjacent R\r\nConsole) Git Bash terminal.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"github-account","chapter":"2 Version control and collaboration with Git and Github","heading":"Github account","text":"Sign-free account github.com.may offered set-two-factor authentication app \r\nphone. Read Github help\r\ndocuments.use Github Desktop, can enter Gitub credentials \r\ninstallation following \r\nsteps.\r\ndon’t know, credentials asked later try \r\nclone project Github.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"vocabulary-concepts-and-basic-functions","chapter":"2 Version control and collaboration with Git and Github","heading":"2.4 Vocabulary, concepts and basic functions","text":"learning R, bit vocabulary remember \r\nunderstand Git. basics get \r\ngoing\r\n/ interactive tutorial. next\r\nsections, show use interfaces, good\r\nvocabulary concepts mind, build mental model,\r\n’ll need using interfaces anyway.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"repository","chapter":"2 Version control and collaboration with Git and Github","heading":"Repository","text":"Git repository (“repo”) folder contains \r\nsub-folders files project (data, code, images, etc.) \r\nrevision histories. begin tracking changes \r\nrepository , Git create hidden folder contains\r\ntracking information. typical Git repository \r\nR Project folder (see handbook page [R projects]).show create (initialize) Git repository\r\nGithub, Github Desktop Rstudio next\r\nsections.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"commits","chapter":"2 Version control and collaboration with Git and Github","heading":"Commits","text":"commit snapshot project given time.\r\nmake change project, make new commit\r\ntrack changes (delta) made \r\nfiles. example, perhaps edited lines code updated \r\nrelated dataset. changes saved, can bundle \r\nchanges together one “commit”.commit unique ID (hash). version control purposes,\r\ncan revert project back time based commits, best\r\nkeep relatively small coherent. also attach brief\r\ndescription changes called “commit message”.Staged changes? stage changes add staging area\r\npreparation next commit. idea can finely\r\ndecide changes include given commit. example, \r\nworked model specification one script, later figure \r\nanother script, make sense two different commits (easier\r\ncase wanted revert changes figure model).","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"branches","chapter":"2 Version control and collaboration with Git and Github","heading":"Branches","text":"branch represents independent line changes repo, \r\nparallel, alternate version project files.Branches useful test changes incorporated \r\nmain branch, usually primary/final/“live” version \r\nproject. done experimenting branch, can bring\r\nchanges main branch, merging , delete , \r\nchanges successful.Note: collaborate people use branches,\r\nneed remote online repository.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"local-and-remote-repositories","chapter":"2 Version control and collaboration with Git and Github","heading":"Local and remote repositories","text":"clone create copy Git repository another place.example, can clone online repository Github locally \r\ncomputer, begin local repository clone\r\nonline Github.cloned repository, project files exist \r\ntwo places:LOCAL repository physical computer. \r\nmake actual changes files/code.LOCAL repository physical computer. \r\nmake actual changes files/code.REMOTE, online repository: versions project files\r\nGithub repository (web\r\nhost).REMOTE, online repository: versions project files\r\nGithub repository (web\r\nhost).synchronize repositories, use functions. Indeed,\r\nunlike Sharepoint, Dropbox synchronizing software, Git \r\nautomatically update local repository based ’s online,\r\nvice-versa. get choose synchronize.git fetch downloads new changes remote repository \r\nchange local repository. Think checking state remote repository.git fetch downloads new changes remote repository \r\nchange local repository. Think checking state remote repository.git pull downloads new changes remote repositories\r\nupdate local repository.git pull downloads new changes remote repositories\r\nupdate local repository.made one several commits locally, can\r\ngit push commits remote repository. sends \r\nchanges Github people can see pull \r\nwant .made one several commits locally, can\r\ngit push commits remote repository. sends \r\nchanges Github people can see pull \r\nwant .","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"get-started-create-a-new-repository","chapter":"2 Version control and collaboration with Git and Github","heading":"2.5 Get started: create a new repository","text":"many ways create new repositories. can \r\nconsole, Github, interface.Two general approaches set-:Create new R Project existing new Github repository\r\n(preferred beginners), orCreate Github repository existing R project","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"start-up-files","chapter":"2 Version control and collaboration with Git and Github","heading":"Start-up files","text":"create new repository, can optionally create\r\nfiles, can add repository later stage.\r\ntypically live “root” folder repository.README file file someone can read understand \r\nproject exists else know use . \r\nempty first, complete later.README file file someone can read understand \r\nproject exists else know use . \r\nempty first, complete later..gitignore file text file line contain\r\nfolders files Git ignore (track changes). Read\r\nsee examples\r\n..gitignore file text file line contain\r\nfolders files Git ignore (track changes). Read\r\nsee examples\r\n.can choose license work, people\r\nknow conditions can use reproduce work. \r\ninformation, see Creative Commons\r\nlicenses.can choose license work, people\r\nknow conditions can use reproduce work. \r\ninformation, see Creative Commons\r\nlicenses.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"create-a-new-repository-in-github","chapter":"2 Version control and collaboration with Git and Github","heading":"Create a new repository in Github","text":"create new repository, log Github look green\r\nbutton create new repository. now empty repository can \r\ncloned locally computer (see next section).must choose want repository public (visible \r\neveryone internet) private (visible \r\npermission). important implications data sensitive.\r\nrepository private encounter quotas advanced\r\nspecial circumstances, using Github actions \r\nautomatically run code cloud.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"clone-from-a-github-repository","chapter":"2 Version control and collaboration with Git and Github","heading":"Clone from a Github repository","text":"can clone existing Github repository create\r\nnew local R project computer.Github repository one already exists contains\r\ncontent, empty repository just created. \r\nlatter case essentially creating Github repo local R\r\nproject time (see instructions ).Note: contributing rights Github repository,\r\npossible first fork repository profile, \r\nproceed actions. Forking explained end \r\nchapter, recommend read sections first.Step 1: Navigate Github repository, click green “Code”\r\nbutton copy HTTPS clone URL (see image )next step can performed interface. illustrate \r\nRstudio et Github desktop.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"in-rstudio","chapter":"2 Version control and collaboration with Git and Github","heading":"In Rstudio","text":"RStudio, start new R project clicking File > New Project >\r\nVersion Control > GitWhen prompted “Repository URL”, paste HTTPS URL \r\nGithubAssign R project short, informative nameChoose new R Project saved locallyCheck “Open new session” click “Create project”now new, local, RStudio project clone \r\nGithub repository. local project Github repository now\r\nlinked.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"in-github-desktop","chapter":"2 Version control and collaboration with Git and Github","heading":"In Github Desktop","text":"Click File > Clone repositoryClick File > Clone repositorySelect URL tabSelect URL tabPaste HTTPS URL Github first boxPaste HTTPS URL Github first boxSelect folder want local repositorySelect folder want local repositoryClick “CLONE”Click “CLONE”","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"new-github-repo-from-existing-r-project","chapter":"2 Version control and collaboration with Git and Github","heading":"New Github repo from existing R project","text":"alternative setup scenario existing R project\r\ncontent, want create Github repository .Create new, empty Github repository project (see\r\ninstructions )Clone repository locally (see HTTPS instructions )Copy content pre-existing R\r\nproject (codes, data, etc.) new empty, local, repository (e.g. use copy paste).Open new project RStudio, go Git pane. new files \r\nregister file changes, now tracked Git. Therefore, can\r\nbundle changes commit push Github.\r\npushed, repository Github reflect files.See Github workflow section details process.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"what-does-it-look-like-now","chapter":"2 Version control and collaboration with Git and Github","heading":"What does it look like now?","text":"","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"in-rstudio-1","chapter":"2 Version control and collaboration with Git and Github","heading":"In RStudio","text":"cloned Github repository new R project,\r\nnow see RStudio “Git” tab. tab appears RStudio pane\r\nR Environment:Please note buttons circled image , \r\nreferenced later (left right):Button commit saved file changes local\r\nbranch (open new window)Blue arrow pull (update local version branch \r\nchanges made remote/Github version branch)Green arrow push (send commits/changes local\r\nversion branch remote/Github version branch)Git tab RStudioButton create NEW branch using whichever local branch shown\r\nright base. almost always want branch \r\nmain branch (first pull update main branch)branch currently working inChanges made code files appear ","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"in-github-desktop-1","chapter":"2 Version control and collaboration with Git and Github","heading":"In Github Desktop","text":"Github Desktop independent application allows manage\r\nrepositories. open , interface allows \r\nchoose repository want work , perform basic Git\r\nactions .","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"git-github-workflow","chapter":"2 Version control and collaboration with Git and Github","heading":"2.6 Git + Github workflow","text":"","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"process-overview","chapter":"2 Version control and collaboration with Git and Github","heading":"Process overview","text":"completed setup (described ), \r\nGithub repo connected (cloned) local R project. \r\nmain branch (created default) -called “live” version \r\nfiles. want make modifications, good\r\npractice create new branch main branch (like “Make \r\nCopy”). typical workflow Git creating branch \r\neasy fast.typical workflow follow:Make sure local repository --date, update \r\nnotMake sure local repository --date, update \r\nnotGo branch working previously, create new\r\nbranch try thingsGo branch working previously, create new\r\nbranch try thingsWork files locally computer, make one several\r\ncommits branchWork files locally computer, make one several\r\ncommits branchUpdate remote version branch changes (push)Update remote version branch changes (push)satisfied branch, can merge online\r\nversion working branch online “main” branch \r\ntransfer changesWhen satisfied branch, can merge online\r\nversion working branch online “main” branch \r\ntransfer changesOther team members may thing branches,\r\nperhaps contributing commits working branch well.go process step--step detail .\r\nschematic ’ve developed - ’s format two-way\r\ntable help epidemiologists understand.’s another diagram.Note: recently, term “master” branch used, now\r\nreferred “main” branch.Image\r\nsource","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"create-a-new-branch","chapter":"2 Version control and collaboration with Git and Github","heading":"2.7 Create a new branch","text":"select branch work , Git resets working directory\r\nway last time branch.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"in-rstudio-git-pane","chapter":"2 Version control and collaboration with Git and Github","heading":"In Rstudio Git pane","text":"Ensure “main” branch, click purple icon \r\ncreate new branch (see image ).prompted name branch one-word descriptive\r\nname (can use underscores needed).see locally, still R project, \r\nlonger working “main” branch.created, new branch also appear Github website\r\nbranch.can visualize branches Git Pane Rstudio clicking “History”","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"in-github-desktop-2","chapter":"2 Version control and collaboration with Git and Github","heading":"In Github Desktop","text":"process much similar, prompted give branch\r\nname. , prompted “Publish branch Github” \r\nmake new branch appear remote repo well.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"in-console","chapter":"2 Version control and collaboration with Git and Github","heading":"In console","text":"actually happening behind scenes create new\r\nbranch git branch, go branch \r\ngit checkout (.e. tell Git next commits occur ).\r\ngit repository:information using console, see section \r\nGit commands end.","code":"git branch my-new-branch  # Create the new branch branch\r\ngit checkout my-new-branch # Go to the branch\r\ngit checkout -b my-new-branch # Both at once (shortcut)"},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"commit-changes","chapter":"2 Version control and collaboration with Git and Github","heading":"2.8 Commit changes","text":"Now can edit code, add new files, update datasets, etc.Every one changes tracked, respective file \r\nsaved. Changed files appear RStudio Git tab, Github\r\nDesktop, using command git status terminal (see ).Whenever make substantial changes (e.g. adding updating section \r\ncode), pause commit changes. Think commit “batch”\r\nchanges related common purpose. can always continue \r\nrevise file committed changes .Advice commits: generally, better make small commits, \r\ncan easily reverted problem arises, commit together\r\nmodifications related common purpose. achieve , \r\nfind commit often. beginning, ’ll probably\r\nforget commit often, habit kicks .","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"in-rstudio-2","chapter":"2 Version control and collaboration with Git and Github","heading":"In Rstudio","text":"example shows , since last commit, R Markdown script “collaboration.Rmd” changed,\r\nseveral PNG images added.might wondering yellow, blue, green, red squares next \r\nfile names represent. snapshot RStudio\r\ncheatsheet\r\nexplains meaning. Note changes yellow “?” can still\r\nstaged, committed, pushed.Press “Commit” button Git tab, open new\r\nwindow (shown )Press “Commit” button Git tab, open new\r\nwindow (shown )Click file name upper-left boxClick file name upper-left boxReview changes made file (highlighted green\r\nred)Review changes made file (highlighted green\r\nred)“Stage” file, include changes commit. \r\nchecking box next file name. Alternatively, \r\ncan highlight multiple file names click “Stage”“Stage” file, include changes commit. \r\nchecking box next file name. Alternatively, \r\ncan highlight multiple file names click “Stage”Write commit message short descriptive (required)Write commit message short descriptive (required)Press “Commit” button. pop-box appear showing success\r\nerror message.Press “Commit” button. pop-box appear showing success\r\nerror message.Now can make changes commits, many times like","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"in-github-desktop-3","chapter":"2 Version control and collaboration with Git and Github","heading":"In Github Desktop","text":"can see list files changed left. \r\nselect text file, see summary modifications made\r\nright pane (view work complex files like .docs .xlsx).stage changes, just tick little box near file names. \r\nselected files want add commit, give commit\r\nname, optionally description click commit\r\nbutton.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"in-console-1","chapter":"2 Version control and collaboration with Git and Github","heading":"In console","text":"two functions used behind scenes git add select/stage\r\nfiles git commit actually commit.","code":"git status # see the changes \r\n\r\ngit add new_pages/collaboration.Rmd  # select files to commit (= stage the changes)\r\n\r\ngit commit -m \"Describe commit from Github Desktop\" # commit the changes with a message\r\n\r\ngit log  # view information on past commits"},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"amend-a-previous-commit","chapter":"2 Version control and collaboration with Git and Github","heading":"2.8.1 Amend a previous commit","text":"happens commit changes, carry working, realize\r\nmade changes “belong” past commit (opinion).\r\nFear ! can append changes previous commit.Rstudio, pretty obvious “Amend previous commit”\r\nbox line COMMIT button.unclear reason, functionality implemented\r\nGithub Desktop, (conceptually awkward easy)\r\nway around. committed pushed changes yet,\r\n“UNDO” button appears just COMMIT button. Click \r\nrevert commit (keep staged files commit message).\r\nSave changes, add new files commit necessary commit .console:Note: think modifying commits already public shared collaborators.","code":"git add [YOUR FILES] # Stage your new changes\r\n\r\ngit commit --amend  # Amend the previous commit\r\n\r\ngit commit --amend -m \"An updated commit message\"  # Amend the previous commit AND update the commit message"},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"pull-and-push-changes-up-to-github","chapter":"2 Version control and collaboration with Git and Github","heading":"2.9 Pull and push changes up to Github","text":"“First PULL, PUSH”good practice fetch pull begin working \r\nproject, update branch version local computer \r\nchanges made remote/Github version.PULL often. Don’t hesitate. Always pull pushing.changes made committed happy \r\nstate project, can push commits \r\nremote/Github version branch.Rince repeat working repository.Note: much easier revert changes committed \r\npushed (.e. still local) revert changes pushed \r\nremote repository (perhaps already pulled someone else), better\r\npush done introducing changes task \r\nworking .","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"in-rstudio-3","chapter":"2 Version control and collaboration with Git and Github","heading":"In Rstudio","text":"PULL - First, click “Pull” icon (downward arrow) fetches \r\npulls time.PUSH - Clicking green “Pull” icon (upward arrow). may asked\r\nenter Github username password. first time \r\nasked, may need enter two Git command lines Terminal:git config –global user.email\r\n“@example.com” (Github\r\nemail address), andgit config –global user.name “Github username”learn enter commands, see section \r\nGit commands.TIP: Asked provide password often? See chapters\r\n10 & 11 \r\ntutorial\r\nconnect repository using SSH key (\r\ncomplicated)","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"in-github-desktop-4","chapter":"2 Version control and collaboration with Git and Github","heading":"In Github Desktop","text":"Click “Fetch origin” button check new commits \r\nremote repository.Git finds new commits remote repository, button \r\nchange “Pull” button. button used push \r\npull, push changes don’t pull .can go “History” tab (near “Changes” tab) see \r\ncommits (others). nice way acquainting \r\ncollaborators . can read commit message, \r\ndescription one, compare code two files using\r\ndiff pane.remote changes pulled, least one local change\r\ncommitted, can push clicking button.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"console","chapter":"2 Version control and collaboration with Git and Github","heading":"Console","text":"Without surprise, commands fetch, pull push.","code":"git fetch  # are there new commits in the remote directory?\r\ngit pull   # Bring remote commits into your local branch\r\ngit push   # Puch local commits of this branch to the remote branch"},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"i-want-to-pull-but-i-have-local-work","chapter":"2 Version control and collaboration with Git and Github","heading":"2.9.1 I want to pull but I have local work","text":"can happen sometimes:\r\nmade changes local repository, remote\r\nrepository commits didn’t pull.Git refuse pull might overwrite changes.\r\nseveral strategies keep changes,\r\nwell described Happy Git R,\r\namong two main ones :\r\n- commit changes, fetch remote changes, pull , resolve conflicts\r\nneeded (see section ), push everything online\r\n- stash changes, sort stores aside, pull, unstash\r\n(restore), commit, solve conflicts, push.files concerned remote changes files concerned\r\nlocal changes overlap, Git may solve conflicts automatically.Github Desktop, can done buttons. stash, go Branch > Stash changes.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"merge-branch-into-main","chapter":"2 Version control and collaboration with Git and Github","heading":"2.10 Merge branch into Main","text":"finished making changes, can begin process \r\nmerging changes main branch. Depending situation,\r\nmay fast, may deliberate review approval\r\nsteps involving teammates.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"locally-in-github-desktop","chapter":"2 Version control and collaboration with Git and Github","heading":"Locally in Github Desktop","text":"One can merge branches locally using Github Desktop. First, go \r\n(checkout) branch recipient commits, words, \r\nbranch want update. go menu Branch > Merge \r\ncurrent branch click. box allow select branch \r\nwant import .","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"in-console-2","chapter":"2 Version control and collaboration with Git and Github","heading":"In console","text":"First move back branch recipient changes.\r\nusually master, another branch. merge \r\nworking branch master.\r\npage\r\nshows advanced example branching explains bit \r\nhappening behind scenes.","code":"git checkout master  # Go back to master (or to the branch you want to move your )\r\ngit merge this_fancy_new_branch"},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"in-github-submitting-pull-requests","chapter":"2 Version control and collaboration with Git and Github","heading":"In Github: submitting pull requests","text":"totally possible merge two branches locally, without\r\ninforming anybody, merge may discussed investigated several\r\npeople integrated master branch. help \r\nprocess, Github offers discussion features around merge: \r\npull request.pull request (“PR”) request merge one branch another\r\n(words, request working branch pulled “main” branch).\r\npull request typically involves multiple commits. pull request usually begins conversation review\r\nprocess accepted branch merged. example,\r\ncan read pull request discussions dplyr’s\r\ngithub.can submit pull request (PR) directly form website (\r\nillustrated bellow) Github Desktop.Go Github repository (online)View tab “Pull Requests” click “New pull request” buttonSelect drop-menu merge branch mainWrite detailed Pull Request comment click “Create Pull\r\nRequest”.image , branch “forests” selected merged\r\n“main”:Now able see pull request (example image ):Review tab “Files changed” see “main” branch \r\nchange branch merged.right, can request review members team \r\ntagging Github ID. like, can set repository\r\nsettings require one approving review order merge \r\nmain.pull request approved, button \r\n“Merge pull request” become active. Click .completed, delete branch explained .","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"resolving-conflicts","chapter":"2 Version control and collaboration with Git and Github","heading":"Resolving conflicts","text":"two people modified line(s) time, \r\nmerge conflict arises. Indeed, Git refuses make decision \r\nversion keep, helps find \r\nconflict . PANIC. time, pretty straightforward\r\nresolve.example, Github:merge raised conflict, open file favorite editor.\r\nconflict indicated series characters:text <<<<<<< HEAD ======= comes \r\nlocal repository, one ======= >>>>>>> \r\nbranch (may origin, master branch \r\nchoice).need decide version code prefer (even write \r\nthird, including changes sides pertinent), delete rest\r\nremove marks Git added (<<<<<<< HEAD, =======,\r\n>>>>>>> origin/master/your_branch_name)., save file, stage commit : commit\r\nmakes merged version “official”. forget push afterwards.often collaborators pull push, smaller \r\nconflicts .Note: feel ease console, advanced\r\nmerging\r\noptions\r\n(e.g. ignoring whitespace, giving collaborator priority etc.).","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"delete-your-branch","chapter":"2 Version control and collaboration with Git and Github","heading":"Delete your branch","text":"branch merged master longer needed, can\r\ndelete .","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"github-rstudio","chapter":"2 Version control and collaboration with Git and Github","heading":"2.10.0.1 Github + Rstudio","text":"Go repository Github click button view \r\nbranches (next drop-select branches). Now find \r\nbranch click trash icon next . Read detail deleting\r\nbranch\r\n.sure also delete branch locally computer. \r\nhappen automatically.RStudio, make sure Main branchSwitch typing Git commands RStudio “Terminal” (tab\r\nadjacent R console), type: git branch -d\r\nbranch_name, “branch_name” name branch \r\ndeletedRefresh Git tab branch gone","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"in-github-desktop-5","chapter":"2 Version control and collaboration with Git and Github","heading":"2.10.0.2 In Github Desktop","text":"Just checkout branch want delete, go menu\r\nBranch > Delete.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"forking","chapter":"2 Version control and collaboration with Git and Github","heading":"2.10.1 Forking","text":"can fork project like contribute \r\nrights , just\r\nwant modify personal use. \r\nshort description forking can found .Github, click “Fork” button:clone original repository, profile. now,\r\ntwo versions repository Github: original one,\r\nmodify, cloned version profile., can proceed clone version online repository locally\r\ncomputer, using methods described previous sections.\r\n, can create new branch, make changes, commit push \r\nremote repository.happy result can create Pull Request\r\nGithub Github Desktop begin conversation \r\nowners/maintainers original repository.need newer commits official repository?Imagine someone makes critical modification official repository,\r\nwant include cloned version.\r\npossible synchronize fork official repository.\r\ninvolves using terminal, complicated.\r\nmostly need remember :\r\n- upstream = official repository, one modify\r\n- origin = version repository Github profileYou can read tutorial follow along :First, type Git terminal (inside repo):yet configured upstream repository \r\nsee two lines, beginning origin. show remote repo\r\nfetch push point . Remember, origin conventional\r\nnickname version repository Github. example:Now, add new remote repository:address address Github generates clone\r\nrepository (see section cloning). Now four remote pointers:Now setup done, whenever want get changes \r\noriginal (upstream) repository, just go (checkout) \r\nbranch want update type:conflicts, solve , explained\r\nResolving conflicts section.Summary: forking cloning, Github server side.\r\nrest actions typical collaboration workflow actions\r\n(clone, push, pull, commit, merge, submit pull requests…).Note: forking concept, Git command, also exist Web hosts, like Bitbucket.","code":"git remote -vgit remote add upstream https://github.com/epirhandbook/Epi_R_handbook.gitgit fetch upstream # Get the new commits from the remote repository\r\ngit checkout the_branch_you_want_to_update\r\ngit merge upstream/the_branch_you_want_to_update  # Merge the upstream branch into your branch.\r\ngit push # Update your own version of the remote repo"},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"what-we-learned","chapter":"2 Version control and collaboration with Git and Github","heading":"2.11 What we learned","text":"learned :\r\n- setup Git track modifications folders,\r\n- connect local repository remote online repository,\r\n- commit changes,\r\n- synchronize local remote repositories.get going enough needs \r\nepidemiologists. usually advanced usage developers.However, know want (need) go , Git offers power simplify\r\ncommit histories, revert one several commits, cherry-pick commits, etc.\r\nmay sound like pure wizardry, now basics,\r\neasier build .Note Git pane Rstudio Github Desktop good \r\nbeginners / day--day usage line work, offer \r\ninterface intermediate / advanced Git functions.\r\ncomplete interfaces allows point--click\r\n(usually cost complex layout).Remember since can use tool point track repository,\r\ncan easily install interface try sometimes,\r\nperform less common complex task occasionally,\r\npreferring simplified interface rest time (e.g. using\r\nGithub Desktop time, switching SourceTree Gitbash specific tasks).","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"git","chapter":"2 Version control and collaboration with Git and Github","heading":"2.12 Git commands","text":"","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"recommended-learning","chapter":"2 Version control and collaboration with Git and Github","heading":"Recommended learning","text":"learn Git commands interactive tutorial, see \r\nwebsite.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"where-to-enter-commands","chapter":"2 Version control and collaboration with Git and Github","heading":"Where to enter commands","text":"enter commands Git shell.Option 1 can open new Terminal RStudio. tab next \r\nR Console. type text , click \r\ndrop-menu “Terminal” select “New terminal”. Type \r\ncommands blinking space front dollar sign “$”.Option 2 can also open shell (terminal enter commands) \r\nclicking blue “gears” icon Git tab (near RStudio\r\nEnvironment). Select “Shell” drop-menu. new window \r\nopen can type commands dollar sign “$”.Option 3 Right click open “Git Bash ” open \r\nsort terminal, open Git Bash form application list.\r\nbeginner-friendly informations Git Bash,\r\nfind bash commands need.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"sample-commands","chapter":"2 Version control and collaboration with Git and Github","heading":"Sample commands","text":"present common git commands. use , keep mind\r\nbranch active (checked-), change action!commands ,  represents branch name.\r\n represents hash ID specific\r\ncommit.  represents number. type \r\n< > symbols.","code":""},{"path":"version-control-and-collaboration-with-git-and-github.html","id":"resources","chapter":"2 Version control and collaboration with Git and Github","heading":"2.13 Resources","text":"Much page informed “Happy Git R”\r\nwebsite Jenny Bryan. helpful\r\nsection website helps troubleshoot common Git \r\nR-related errors.Github.com documentation start\r\nguide.RStudio “IDE”\r\ncheatsheet\r\nincludes tips Git RStudio.https://ohi-science.org/news/github-going-back--timeGit commands beginnersAn interactive\r\ntutorial learn\r\nGit commands.https://www.freecodecamp.org/news/-introduction--git--absolute-beginners-86fa1d32ff71/:\r\ngood learning absolute basics track changes one folder \r\ncomputer.Nice schematics understand branches:\r\nhttps://speakerdeck.com/alicebartlett/git--humansTutorials covering basic advanced subjectshttps://tutorialzine.com/2016/06/learn-git--30-minuteshttps://dzone.com/articles/git-tutorial-commands--operations--git\r\nhttps://swcarpentry.github.io/git-novice/ (short course)\r\nhttps://rsjakob.gitbooks.io/git/content/chapter1.htmlThe Pro Git book considered official reference.\r\nchapters ok, usually bit technical. probably good resource\r\nused Git bit want learn bit precisely\r\nhappens go .","code":""}]

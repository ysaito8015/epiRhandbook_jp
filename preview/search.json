[{"path":"index.html","id":"section","chapter":"","heading":"","text":"DRAFT.REVIEWING BOOK, PLEASE PROVIDE FEEDBACK PAGE LINK","code":""},{"path":"index.html","id":"about-this-handbook","chapter":"","heading":"About this handbook","text":"free open-access R reference manual applied epidemiologists public health practitioners.book strives :Serve quick reference manual - textbook comprehensive R trainingAddress common epidemiological problems via task-centered examplesBe accessible settings low internet-connectivity via offline version (instructions )challenges book try address?Many epidemiologists transitioning R SAS, STATA, SPSS, Excel, softwareEpidemiologists need spend hours searching online code relevant common epi userEpidemiologists sometimes work low internet-connectivity environments limited supportHow different R books?written epidemiologists, epidemiologists - leveraging experience local, national, academic, emergency settingsIt provides examples epidemic curves, transmission chains, epidemic modeling projections, age sex pyramids standardization, record matching, outbreak detection, survey analysis, causal diagrams, survival analysis, GIS basics, phylogenetic trees, automated reports, etc…","code":""},{"path":"index.html","id":"how-to-read-this-handbook","chapter":"","heading":"How to read this handbook","text":"Online versionSearch via search box Table ContentsClick “copy” icons copy codeSee “Resources” section page resourcesTo download data “follow-along”, see [Download book data] pageOffline versionTo download offline version, follow step--step instructions [Download book data] page.LanguagesWe actively seeking translate book languages English. can help, please contact us epiRhandbook@gmail.com.","code":""},{"path":"index.html","id":"edit-or-contribute","chapter":"","heading":"Edit or contribute","text":"Want share use book? Want offer fix addition?\r\nEmail us epiRhandbook@gmail.com. welcome comments suggestions.can also submit issue pull request Github repository, provide structured feedback via Google survey.","code":""},{"path":"index.html","id":"acknowledgements","chapter":"","heading":"Acknowledgements","text":"","code":""},{"path":"index.html","id":"contributors","chapter":"","heading":"Contributors","text":"book produced collaboration epidemiologists around world, drawing upon experiences organizations including local/state/provincial/national health departments ministries, World Health Organization (), MSF (Médecins Sans Frontières / Doctors without Borders), hospital systems, academic institutions.Editor--Chief: Neale BatraCore team: Neale Batra, Alex Spina, Amrish Baidjoe, Pat Keating, Henry Laurenson-Schafer, Finlay CampbellAuthors: Neale Batra, Alex Spina, Paula Blomquist, Finlay Campbell, Henry Laurenson-Schafer, Isaac Florence, Natalie Fischer, Aminata Ndiaye, Liza Coyer, Jonny Polonski, Yurie Izawa, Daniel Molling, Sara Hollis, Isha Berry, Wen LinReviewers:Advisers:","code":""},{"path":"index.html","id":"funding-and-programmatic-support","chapter":"","heading":"Funding and programmatic support","text":"handbook approved product specific organization. Although strive accuracy, provide guarantee content book.handbook project received funding via COVID-19 emergency capacity-building grant Training Programs Epidemiology Public Health Interventions Network (TEPHINET). handbook supported Cooperative Agreement number NU2GGH001873, funded Centers Disease Control Prevention TEPHINET, program Task Force Global Health. contents solely responsibility authors necessarily represent official views Centers Disease Control Prevention, Department Health Human Services, Task Force Global Health, Inc. TEPHINET.Programmatic support provided EPIET Alumni Network (EAN) also MSF’s Manson Unit.","code":""},{"path":"index.html","id":"inspiration","chapter":"","heading":"Inspiration","text":"multitude tutorials vignettes provided knowledge development handbook content credited within respective pages.generally, following sources provided inspiration laid groundwork handbook:“R4Epis” project (collaboration MSF RECON)R Epidemics Consortium (RECON)R Data Science book (R4DS)bookdown: Authoring Books Technical Documents R MarkdownNetlify hosts website","code":""},{"path":"index.html","id":"image-credits","chapter":"","heading":"Image credits","text":"Images logo (US CDC Public Health Image Library):2013 Yemen looking mosquito breeding sitesEbola virusSurvey Rajasthan","code":""},{"path":"index.html","id":"terms-of-use-and-license","chapter":"","heading":"Terms of Use and License","text":"work licensed Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.","code":""},{"path":"collaboration-with-github.html","id":"collaboration-with-github","chapter":"1 Collaboration with Github","heading":"1 Collaboration with Github","text":"page presents overview using Github collaborate others. extensive tutorials, informed writing page, can found bottom Resources section.","code":""},{"path":"collaboration-with-github.html","id":"why-use-github","chapter":"1 Collaboration with Github","heading":"1.1 Why use Github","text":"Github website supports collaborative projects version control. Basically, facilitates:Archiving versions incremental changes can easily revert backwardsCollaboration others can review, comment , accept/decline changesHaving parallel developing/“working” versions structured ways integrate changes reviewthe option publicly share code, data, outputs, invite feedback publicUsing Github helpful working within team, want system code review, want Github take care version control archiving. Github helps avoid many saved versions scripts files various dates stamps.Github’s value collaboration quality-control tool come cost speed - processes uploading reviewing may optimal teams working emergency contexts.","code":""},{"path":"collaboration-with-github.html","id":"github-basics","chapter":"1 Collaboration with Github","heading":"1.2 Github basics","text":"","code":""},{"path":"collaboration-with-github.html","id":"what-is-git","chapter":"1 Collaboration with Github","heading":"What is Git?","text":"Git version control software. use Github, software Git computer engine behind scenes tracks changes, branches (versions), merges, reverting. use Github R work, must first install Git https://git-scm.com/downloads.typical use, rarely interact directly Git. can interact RStudio Github Desktop. However, Git language commands, can typed either command line terminal (application like Git Bash Windows), can also typed RStudio “Terminal” pane (tab adjacent R Console).noted , may occasionally write Git commands terminal RStudio terminal. learn Git commands see online interactive tutorial, later section Git.","code":""},{"path":"collaboration-with-github.html","id":"what-is-github","chapter":"1 Collaboration with Github","heading":"What is Github?","text":"Github website (github.com) facilitates enhances use Git, including capabilities code review, issue-tracking, sharing public.","code":""},{"path":"collaboration-with-github.html","id":"github-account","chapter":"1 Collaboration with Github","heading":"Github account","text":"Sign-free account github.com.may requested set-two-factor authentication app phone. Read Github help documents.","code":""},{"path":"collaboration-with-github.html","id":"github-repositories","chapter":"1 Collaboration with Github","heading":"Github repositories","text":"Github repository (“repo”) like folder contains sub-folders files project (data, code, images, etc.) revision histories. Github repository aligns nicely R Project (see handbook page [R projects].create new repository, log-Github look green button create new repository.general considerations open new repository:","code":""},{"path":"collaboration-with-github.html","id":"public-or-private","chapter":"1 Collaboration with Github","heading":"Public or private","text":"must choose want repository public (visible everyone internet) private (visible permission). important implications data sensitive. repository private encounter quotas advanced special circumstances, using Github actions automatically run code cloud.","code":""},{"path":"collaboration-with-github.html","id":"start-up-files","chapter":"1 Collaboration with Github","heading":"Start-up files","text":"files offered create new repository, optional, can also add repository later stage. typically live “root” folder repository. Brief descriptions :README file. file someone can read understand project exists else know use . empty first, can complete later.README file. file someone can read understand project exists else know use . empty first, can complete later..gitignore file text file line contain folders files Github ignore (track changes). Read see examples ..gitignore file text file line contain folders files Github ignore (track changes). Read see examples .can choose license work, reproduced others without due acknowledgment. information, see Creative Commons licenses.can choose license work, reproduced others without due acknowledgment. information, see Creative Commons licenses.","code":""},{"path":"collaboration-with-github.html","id":"key-vocabulary","chapter":"1 Collaboration with Github","heading":"Key vocabulary","text":"clone - create copy Github repository locally computer (manifest R project)cloned repository, project files exist two places:\r\nREMOTE - versions project files exist online Github repository\r\nLOCAL - clone online repository exists physical computer. make actual changes files/code.\r\nREMOTE - versions project files exist online Github repositoryLOCAL - clone online repository exists physical computer. make actual changes files/code.Pull push - REMOTE repository syncs changes LOCAL repositoryBranches - parallel, alternate versions project files\r\n“main” branch primary/final/“live” version files\r\nbranches made test changes incorporated “main” branch\r\n“main” branch primary/final/“live” version filesOther branches made test changes incorporated “main” branchA commit - trackable unit changes (delta) made files. example, perhaps edit lines code update related dataset. changes saved, can bundle changes togeher one “commit”. version control purposes, can revert project back time based commits, best keep relatively small. also attach brief description changes “commit message”.merge - adopt changes one branch another (e.g. “main”), merge one branch .pull request - (“PR”) request merge one branch another. pull request typically involves multiple commits, contain changes certain files. pull request usually begins conversation review process accepted branch merged.","code":""},{"path":"collaboration-with-github.html","id":"set-up","chapter":"1 Collaboration with Github","heading":"1.3 Set-up","text":"Two general approaches set-:Create new R Project existing new Github repository (preferred), orCreate Github repository existing R project","code":""},{"path":"collaboration-with-github.html","id":"new-r-project-from-github-repo","chapter":"1 Collaboration with Github","heading":"New R project from Github repo","text":"approach involves cloning existing Github repository create new local R project computer.Github repository one already exists contains lots content, also empty repository just beginning work. latter case essentially creating Github repo local R project time.(necessary) create Github repository (see instructions ). repository already exists, necessary.(necessary) create Github repository (see instructions ). repository already exists, necessary.Navigate Github repository, click green “Code” button copy HTTPS clone URL (see image )Navigate Github repository, click green “Code” button copy HTTPS clone URL (see image )RStudio, start new R project clicking File > New Project > Version Control > Git\r\nprompted “Repository URL”, paste HTTPS URL Github (see Step 1)\r\nAssign R project short, informative name\r\nDesignate new R Project saved locally\r\nCheck “Open new session” click “Create project”\r\nprompted “Repository URL”, paste HTTPS URL Github (see Step 1)Assign R project short, informative nameDesignate new R Project saved locallyCheck “Open new session” click “Create project”now new, local, RStudio project clone Github repository. local project Github repository now linked.","code":""},{"path":"collaboration-with-github.html","id":"new-github-repo-from-existing-r-project","chapter":"1 Collaboration with Github","heading":"New Github repo from existing R project","text":"alternative setup scenario existing R project content, now want create Github repository .Create new, empty Github repository project (see instructions )Create new local R project clone new empty Github repository (see HTTPS instructions )computer, copy content pre-existing R project (codes, data, etc.) new empty R project clone new Github repository (e.g. use copy paste).RStudio (new R project), adding copied files register file changes tracked Git. Therefore, can bundle changes commit push Github. pushed, repository Github reflect files. See Github workflow section details process.","code":""},{"path":"collaboration-with-github.html","id":"git---rstudio-integration","chapter":"1 Collaboration with Github","heading":"Git - RStudio integration","text":"cloned Github repository new R project, RStudio now see “Git” tab. tab appears RStudio pane R Environment:Please note buttons circled image , referenced later (left right):Button begin “committing” saved file changes local branch (open new window)Blue arrow pull (update local version branch changes made branch others)Green arrow push (send commits/changes local version branch remote/Github version branch)Git tab RStudioButton create NEW branch using whichever local branch shown right base. almost always want branch main branch (first pull update main branch).branch currently working ., changes make code files appear","code":""},{"path":"collaboration-with-github.html","id":"github-workflow","chapter":"1 Collaboration with Github","heading":"1.4 Github workflow","text":"Familiarize Github workflow viewing interactive example Github website","code":""},{"path":"collaboration-with-github.html","id":"orientation","chapter":"1 Collaboration with Github","heading":"Orientation","text":"using Github, R project files exist several dimensions:files exist online Github repository computer local version repository\r\nRemote local versions synced pushing pulling changes\r\nRemote local versions synced pushing pulling changesThe files also exist “main” branch (version), also “working” branches\r\nChanges made working branches can merged Main branch\r\nChanges made working branches can merged Main branch","code":""},{"path":"collaboration-with-github.html","id":"process-overview","chapter":"1 Collaboration with Github","heading":"Process overview","text":"completed setup (described ), Github repo connected (cloned) local R project. “main” branch (created default) -called “live” version files. want add/delete/make changes, begin locally, computer, making new branch “main” branch (like “Make Copy”). can proceed make changes project code, files, etc computer. changes recorded new “working” branch, locally computer. satisfied changes, group together commit, push working branch’s online version. , can merge online version working branch online “main” branch transfer changes.team members may thing branches, perhaps contributing commits working branch well. go process step--step detail .","code":""},{"path":"collaboration-with-github.html","id":"visual-aids","chapter":"1 Collaboration with Github","heading":"Visual aids","text":"schematic ’ve developed - ’s format two-way table help epidemiologists understand…’s another diagram website. recently, term “master” branch used, now referred “main” branch.\r\nImage source","code":""},{"path":"collaboration-with-github.html","id":"step-by-step","chapter":"1 Collaboration with Github","heading":"Step-by-Step","text":", go example process step--step:","code":""},{"path":"collaboration-with-github.html","id":"make-changes","chapter":"1 Collaboration with Github","heading":"Make changes","text":"make change files reflected online main branch, can following steps. steps assume using Github RStudio. slight variation using Github Desktop instead RStudio, see next section.","code":""},{"path":"collaboration-with-github.html","id":"create-a-branch","chapter":"1 Collaboration with Github","heading":"Create a branch","text":"Ensure “main” branch, click purple icon create new branch (see image ).prompted name branch one-word descriptive name (can use underscores needed).see locally, still R project, longer working “main” branch.created, new branch also appear Github website branch.","code":""},{"path":"collaboration-with-github.html","id":"make-changes-1","chapter":"1 Collaboration with Github","heading":"Make changes","text":"Now can edit code, add new files, update datasets, etc.Every one changes tracked, respective file saved. Changed files appear RStudio Git tab. example , recorded modified R Markdown script called “collaboration.Rmd” also several PNG images.\r\nmight wonder yellow, blue, green, red squares next file names represent. snapshot RStudio cheatsheet explains meaning. Note changes yellow “?” can still staged, committed, pushed.","code":""},{"path":"collaboration-with-github.html","id":"commit-changes","chapter":"1 Collaboration with Github","heading":"Commit changes","text":"Every bunch changes make substantial (e.g. adding updating section code), pause commit changes. Think commit “batch” changes related common purpose. can always continue revise file committed changes .Press “Commit” button Git tab, open new window (shown )Click file name upper-left boxReview changes made file (highlighted green red)“Stage” file, include changes commit. checking box next file name. Alternatively, can highlight multiple file names click “Stage”Write commit message short descriptive (required)Press “Commit” button. pop-box appear showing success error message.Make changes commits, many times like","code":""},{"path":"collaboration-with-github.html","id":"push-changes-up-to-github","chapter":"1 Collaboration with Github","heading":"Push changes up to Github","text":"“First PULL, PUSH”PULL - First, click PULL icon (downward arrow) updates branch version local computer changes made remote/Github version. PULL often. Don’t hesitate. Always pull pushing.PUSH - , push commits remote/Github version branch clicking green “Pull” icon (upward arrow). may asked enter Github username password. first time asked, may need enter two Git command lines Terminal:git config –global user.email “@example.com” (Github email address), andgit config –global user.name “Github username”learn enter commands, see section Git commands.TIP: Asked provide password often? See chapters 10 & 11 tutorial connect repository via SSH key (complicated)","code":""},{"path":"collaboration-with-github.html","id":"merge-branch-into-main","chapter":"1 Collaboration with Github","heading":"Merge branch into Main","text":"finished making changes, can begin process merging changes main branch. Depending situation, may fast, may build deliberate review approval steps involving teammates.","code":""},{"path":"collaboration-with-github.html","id":"submit-a-pull-request","chapter":"1 Collaboration with Github","heading":"Submit a Pull Request","text":"done making changes commmits, pushed commits remote Github repository, can request working branch merged “main” branch.Go Github repository (online)View tab “Pull Requests” click “New pull request” button.\r\n* Select drop-menus merge brach main\r\n* Write detailed Pull Request comment click “Create Pull Request”.image , branch “forests” selected merged “main”:Now able see pull request (example image ):Review tab “Files changed” see “main” branch change branch merged.right, can request review members team tagging Github ID. like, can set repository settings require one approving review order merge main.pull request approved see button available “Merge pull request”. Click .completed, delete branch explained ","code":""},{"path":"collaboration-with-github.html","id":"delete-your-branch","chapter":"1 Collaboration with Github","heading":"Delete your branch","text":"Go repository Github click button view branches (next drop-select branches). Now find branch click trash icon next . Read detail deleting branch hereBe sure also delete branch locally computer. happen automatically.RStudio, make sure Main branchSwitch typing Git commands RStudio “Terminal” (tab adjacent R console), enter : git branch -d branch_name , “branch_name” name branch deletedRefresh Git tab branch gone","code":""},{"path":"collaboration-with-github.html","id":"advanced-github","chapter":"1 Collaboration with Github","heading":"1.5 Advanced Github","text":"CONSTRUCTION","code":""},{"path":"collaboration-with-github.html","id":"resolving-conflicts","chapter":"1 Collaboration with Github","heading":"Resolving conflicts","text":"","code":""},{"path":"collaboration-with-github.html","id":"github-actions","chapter":"1 Collaboration with Github","heading":"Github actions","text":"","code":""},{"path":"collaboration-with-github.html","id":"github-desktop","chapter":"1 Collaboration with Github","heading":"1.6 Github Desktop","text":"SECTION CONSTRUCTION","code":""},{"path":"collaboration-with-github.html","id":"git","chapter":"1 Collaboration with Github","heading":"1.7 Git commands","text":"SECTION CONSTRUCTION","code":""},{"path":"collaboration-with-github.html","id":"recommended-learning","chapter":"1 Collaboration with Github","heading":"Recommended learning","text":"learn Git commands interactive tutorial, please see website.","code":""},{"path":"collaboration-with-github.html","id":"where-to-enter-commands","chapter":"1 Collaboration with Github","heading":"Where to enter commands","text":"Option 1 can open new Terminal RStudio. tab next R Console. seem accepting text, click drop-menu “Terminal” select “New terminal”. Type commands blicking space front dollar sign “$”.Option 2 can also open Shell (terminal enter commands) clicking blue “gears” icon Git tab (near RStudio Environment). Select “Shell” drop-menu. new window open can type commands dollar sign “$”.","code":""},{"path":"collaboration-with-github.html","id":"sample-commands","chapter":"1 Collaboration with Github","heading":"Sample commands","text":"present git commands common. Keep mind use branch active (checked-) write command, change action!commands ,  represents branch name (type < > symbols).  represents hash ID specific commit.  represents number.^ | Move backwards one commit\r\n~ |Move backwards  commits\r\ngit checkout HEAD~4\r\ngit log | see hashes\r\ngit checkout \r\ngit checkout ; git merge main = Merge main bugfix","code":""},{"path":"collaboration-with-github.html","id":"revert-mistakes","chapter":"1 Collaboration with Github","heading":"Revert mistakes","text":"git branch -f main HEAD~3 = Moves force main branch three parents behind HEAD (e.g. HEAD may bugFix branch) (branches may stay )main^ parent commit main\r\ngit checkout main^ = moves HEAD commit main’s last commit\r\nHEAD can used relatively reference, e.g. using HEAD^ multiple time keep moving backwardsgit reset | Moves HEAD back “rewriting history” move branch reference backwards time older commit, commit never made first place. Works well local branches machine. doesn’t work remote branches others using.\r\ngit reset HEAD~1 Moves branch backwards recent C2 back C1\r\nreverse changes SHARE reversed changes others, use git revertgit revert\r\ngit revert HEAD makes new commit prime e.g. C2 C2’git commit","code":""},{"path":"collaboration-with-github.html","id":"package-management-with-renv","chapter":"1 Collaboration with Github","heading":"1.8 Package management with renv","text":"","code":""},{"path":"collaboration-with-github.html","id":"resources","chapter":"1 Collaboration with Github","heading":"1.9 Resources","text":"Much page informed “Happy Git R” website Jenny Bryan. helpful section website helps troubleshoot common Git R-related errors.Github.com documentation start guideThe RStudio “IDE” cheatsheet includes tips Git RStudiohttps://ohi-science.org/news/github-going-back--timeThis website provides interactive tutorial learn Git commands","code":""}]

[{"path":"index.html","id":"section","chapter":"","heading":"","text":"DRAFT.REVIEWING BOOK, PLEASE PROVIDE FEEDBACK PAGE LINK","code":""},{"path":"index.html","id":"about-this-handbook","chapter":"","heading":"About this handbook","text":"free open-access R reference manual applied epidemiologists public health practitioners.book strives :Serve quick reference manual - textbook comprehensive R trainingAddress common epidemiological problems via task-centered examplesBe accessible settings low internet-connectivity via offline version (instructions )challenges book try address?Many epidemiologists transitioning R SAS, STATA, SPSS, Excel, softwareEpidemiologists need spend hours searching online code relevant common epi userEpidemiologists sometimes work low internet-connectivity environments limited supportHow different R books?written epidemiologists, epidemiologists - leveraging experience local, national, academic, emergency settingsIt provides examples epidemic curves, transmission chains, epidemic modeling projections, age sex pyramids standardization, record matching, outbreak detection, survey analysis, causal diagrams, survival analysis, GIS basics, phylogenetic trees, automated reports, etc…","code":""},{"path":"index.html","id":"how-to-read-this-handbook","chapter":"","heading":"How to read this handbook","text":"Online versionSearch via search box Table ContentsClick “copy” icons copy codeSee “Resources” section page resourcesTo download data “follow-along”, see [Download book data] pageOffline versionTo download offline version, follow step--step instructions [Download book data] page.LanguagesWe actively seeking translate book languages English. can help, please contact us epiRhandbook@gmail.com.","code":""},{"path":"index.html","id":"edit-or-contribute","chapter":"","heading":"Edit or contribute","text":"Want share use book? Want offer fix addition?\r\nEmail us epiRhandbook@gmail.com. welcome comments suggestions.can also submit issue pull request Github repository, provide structured feedback via Google survey.","code":""},{"path":"index.html","id":"acknowledgements","chapter":"","heading":"Acknowledgements","text":"","code":""},{"path":"index.html","id":"contributors","chapter":"","heading":"Contributors","text":"book produced collaboration epidemiologists around world, drawing upon experiences organizations including local/state/provincial/national health departments ministries, World Health Organization (), MSF (Médecins Sans Frontières / Doctors without Borders), hospital systems, academic institutions.Editor--Chief: Neale BatraCore team: Neale Batra, Alex Spina, Amrish Baidjoe, Pat Keating, Henry Laurenson-Schafer, Finlay CampbellAuthors: Neale Batra, Alex Spina, Paula Blomquist, Finlay Campbell, Henry Laurenson-Schafer, Isaac Florence, Natalie Fischer, Aminata Ndiaye, Liza Coyer, Jonny Polonski, Yurie Izawa, Daniel Molling, Sara Hollis, Isha Berry, Wen LinReviewers:Advisers:","code":""},{"path":"index.html","id":"funding-and-programmatic-support","chapter":"","heading":"Funding and programmatic support","text":"handbook approved product specific organization. Although strive accuracy, provide guarantee content book.handbook project received funding via COVID-19 emergency capacity-building grant Training Programs Epidemiology Public Health Interventions Network (TEPHINET). handbook supported Cooperative Agreement number NU2GGH001873, funded Centers Disease Control Prevention TEPHINET, program Task Force Global Health. contents solely responsibility authors necessarily represent official views Centers Disease Control Prevention, Department Health Human Services, Task Force Global Health, Inc. TEPHINET.Programmatic support provided EPIET Alumni Network (EAN) also MSF’s Manson Unit.","code":""},{"path":"index.html","id":"inspiration","chapter":"","heading":"Inspiration","text":"multitude tutorials vignettes provided knowledge development handbook content credited within respective pages.generally, following sources provided inspiration laid groundwork handbook:“R4Epis” project (collaboration MSF RECON)R Epidemics Consortium (RECON)R Data Science book (R4DS)bookdown: Authoring Books Technical Documents R MarkdownNetlify hosts website","code":""},{"path":"index.html","id":"image-credits","chapter":"","heading":"Image credits","text":"Images logo (US CDC Public Health Image Library):2013 Yemen looking mosquito breeding sitesEbola virusSurvey Rajasthan","code":""},{"path":"index.html","id":"terms-of-use-and-license","chapter":"","heading":"Terms of Use and License","text":"work licensed Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.","code":""},{"path":"html-tables.html","id":"html-tables","chapter":"1 HTML tables","heading":"1 HTML tables","text":"section demonstrates create publication-ready tables, can inserted directly shareable documents, including R Markdown outputs.See [Descriptive tables] page instruction make tabulations, cross-tabulations, descriptive summary tables.","code":""},{"path":"html-tables.html","id":"overview","chapter":"1 HTML tables","heading":"1.1 Overview","text":"build previous sections basic statistics creating summary tables (e.g. using dplyr gtsummary show create publication-read tables. primary package use flextable, compatible multiple R Markdown formats, including html word documents.Example:Table Ebola patients outcome information: Number, proportion, CT values cases recovered diedHospitalTotal cases known outcomeRecoveredDiedTotal% casesMedian CT valuesTotal% casesMedian CT valuesSt. Mark's Maternity Hospital (SMMH)32512638.7722.019961.2322.0Central Hospital35816546.0922.019353.9122.0Other68529042.3421.039557.6622.0Military Hospital70830943.6422.039956.3621.0Port Hospital1,36457942.4521.078557.5522.0Total3,4401,46942.7022.01,97157.3022.0","code":""},{"path":"html-tables.html","id":"preparation","chapter":"1 HTML tables","heading":"1.2 Preparation","text":"","code":""},{"path":"html-tables.html","id":"load-packages","chapter":"1 HTML tables","heading":"Load packages","text":"Load, install necessary, flextable, use convert table fully formatted presentable table. handbook emphasize p_load() pacman, installs package necessary loads use. can also load packages library() base R. See page [R basics] information R packages.","code":"\npacman::p_load(\n  rio,            # import/export\n  here,           # file pathways\n  flextable,      # make HTML tables \n  officer,        # helper functions for tables\n  tidyverse)      # data management, summary, and visualization"},{"path":"html-tables.html","id":"import-data","chapter":"1 HTML tables","heading":"Import data","text":"import dataset cases simulated Ebola epidemic. want download data follow step--step, see instructions [Download book data] page. dataset imported using import() function rio package. See page [Import export] various ways import data.first 50 rows linelist displayed .","code":"\n# import the linelist\nlinelist <- import(\"linelist_cleaned.xlsx\")"},{"path":"html-tables.html","id":"prepare-table","chapter":"1 HTML tables","heading":"Prepare table","text":"beginning use flextable need create table contents. Use packages discussed sections janitor dplyr create table content interest, correct columns rows.example - create simple summary table patient outcomes. interested knowing number proportion patients recover died, well median CT values, hospital admission.","code":"\ntable <- linelist %>% \n  # filter\n  ########\n  filter(!is.na(outcome) & hospital != \"Missing\") %>%  # Remove cases with missing outcome or hospital\n  \n  # Get summary values per hospital-outcome group\n  ###############################################\n  group_by(hospital, outcome) %>%                      # Group data\n  summarise(                                           # Create new summary columns of indicators of interest\n    N = n(),                                            # Number of rows per hospital-outcome group     \n    ct_value = median(ct_blood, na.rm=T)) %>%           # median CT value per group\n  \n  # add totals\n  ############\n  bind_rows(                                           # Bind the previous table with this mini-table of totals\n    linelist %>% \n      filter(!is.na(outcome) & hospital != \"Missing\") %>%\n      group_by(outcome) %>%                            # Grouped only by outcome, not by hospital    \n      summarise(\n        N = n(),                                       # Number of rows for whole dataset     \n        ct_value = median(ct_blood, na.rm=T))) %>%     # Median CT for whole dataset\n  \n  # Pivot wider and format\n  ########################\n  mutate(hospital = replace_na(hospital, \"Total\")) %>% \n  pivot_wider(                                         # Pivot from long to wide\n    values_from = c(ct_value, N),                       # new values are from ct and count columns\n    names_from = outcome) %>%                           # new column names are from outcomes\n  mutate(                                              # Add new columns\n    N_Known = N_Death + N_Recover,                      # number with known outcome\n    Pct_Death = N_Death / N_Known * 100,               # percent cases who died\n    Pct_Recover = N_Recover/N_Known * 100) %>%         # percent who recovered\n  select(                                              # Re-order columns\n    hospital, N_Known,                                   # Intro columns\n    N_Recover, Pct_Recover, ct_value_Recover,            # Recovered columns\n    N_Death, Pct_Death, ct_value_Death)  %>%             # Death columns\n  arrange(N_Known)                                    # Arrange rows from lowest to highest (Total row at bottom)\n\ntable  # print## # A tibble: 6 x 8\r\n## # Groups:   hospital [6]\r\n##   hospital                             N_Known N_Recover Pct_Recover ct_value_Recover N_Death Pct_Death ct_value_Death\r\n##   <chr>                                  <int>     <int>       <dbl>            <dbl>   <int>     <dbl>          <dbl>\r\n## 1 St. Mark's Maternity Hospital (SMMH)     325       126        38.8               22     199      61.2             22\r\n## 2 Central Hospital                         358       165        46.1               22     193      53.9             22\r\n## 3 Other                                    685       290        42.3               21     395      57.7             22\r\n## 4 Military Hospital                        708       309        43.6               22     399      56.4             21\r\n## 5 Port Hospital                           1364       579        42.4               21     785      57.6             22\r\n## 6 Total                                   3440      1469        42.7               22    1971      57.3             22"},{"path":"html-tables.html","id":"basic-flextable","chapter":"1 HTML tables","heading":"1.3 Basic flextable","text":"Creating flextableTo create manage flextable objects, pass table object flextable function progressively add formatting features using dplyr syntax.syntax line flextable code follows:function(table, = X, j = X, part = \"X\"), :\r\ntable name table object, although need stated using dplyr syntax table name already specified (see examples).\r\n‘function’ can one many different functions, width determine column widths, bg set background colours, align set whether text centre/right/left aligned, .\r\npart refers part table function applied . E.g. “header”, “body” “”.\r\nspecifies row apply function , ‘X’ row number. multiple rows, e.g. first third rows, one can specify: = c(1:3). Note ‘body’ selected, first row starts underneath header section.\r\nj specifies column apply function , ‘x’ column number name. multiple rows, e.g. fifth sixth, one can specify: j = c(5,6).\r\ntable name table object, although need stated using dplyr syntax table name already specified (see examples).‘function’ can one many different functions, width determine column widths, bg set background colours, align set whether text centre/right/left aligned, .part refers part table function applied . E.g. “header”, “body” “”.specifies row apply function , ‘X’ row number. multiple rows, e.g. first third rows, one can specify: = c(1:3). Note ‘body’ selected, first row starts underneath header section.j specifies column apply function , ‘x’ column number name. multiple rows, e.g. fifth sixth, one can specify: j = c(5,6).hospitalN_KnownN_RecoverPct_Recoverct_value_RecoverN_DeathPct_Deathct_value_DeathSt. Mark's Maternity Hospital (SMMH)32512638.822.019961.222.0Central Hospital35816546.122.019353.922.0Other68529042.321.039557.722.0Military Hospital70830943.622.039956.421.0Port Hospital1,36457942.421.078557.622.0Total3,4401,46942.722.01,97157.322.0Formatting cell contentWe can ensure proportion columns display one decimal place using function colformat_num(). Note also done data management stage round() function.hospitalN_KnownN_RecoverPct_Recoverct_value_RecoverN_DeathPct_Deathct_value_DeathSt. Mark's Maternity Hospital (SMMH)32512638.822.019961.222.0Central Hospital35816546.122.019353.922.0Other68529042.321.039557.722.0Military Hospital70830943.622.039956.421.0Port Hospital1,36457942.421.078557.622.0Total3,4401,46942.722.01,97157.322.0Formatting column widthWe can use autofit() function, nicely stretches table cell one row text.hospitalN_KnownN_RecoverPct_Recoverct_value_RecoverN_DeathPct_Deathct_value_DeathSt. Mark's Maternity Hospital (SMMH)32512638.822.019961.222.0Central Hospital35816546.122.019353.922.0Other68529042.321.039557.722.0Military Hospital70830943.622.039956.421.0Port Hospital1,36457942.421.078557.622.0Total3,4401,46942.722.01,97157.322.0However, might always appropriate, especially long values within cells, meaning table might fit page.Instead, can specify widths width() function. can take playing around know width value put. example , specify different widths column 1, column 2, columns 4 8.hospitalN_KnownN_RecoverPct_Recoverct_value_RecoverN_DeathPct_Deathct_value_DeathSt. Mark's Maternity Hospital (SMMH)32512638.822.019961.222.0Central Hospital35816546.122.019353.922.0Other68529042.321.039557.722.0Military Hospital70830943.622.039956.421.0Port Hospital1,36457942.421.078557.622.0Total3,4401,46942.722.01,97157.322.0Column headersWe want clearer headers easier interpretation table contents.First can add extra header layer clarity. add_header_row() function top = set TRUE, columns covering subgroups can grouped together. provide new name column values =, leaving empty values \"\" column know merge together later.also rename now-second header. Finally use merge_at() merge column headers top header row.HospitalTotal cases known outcomeRecoveredDiedTotal% casesMedian CT valuesTotal% casesMedian CT valuesSt. Mark's Maternity Hospital (SMMH)32512638.822.019961.222.0Central Hospital35816546.122.019353.922.0Other68529042.321.039557.722.0Military Hospital70830943.622.039956.421.0Port Hospital1,36457942.421.078557.622.0Total3,4401,46942.722.01,97157.322.0Formatting borders background can adjust borders, internal lines, etc. various flextable functions. often easier start removing existing borders border_remove()., can apply default border themes passing table theme_box(), theme_booktabs(), theme_alafoli().can add vertical horizontal lines variety functions. hline() vline() add lines specified row column, respectively. Within , must specify part = either “”, “body”, “header”. vertical lines, specify j = column, horizontal line =. functions like vline_right(), vline_left(), hline_top(), hline_bottom() add lines outsides .functions, actual line style must specified border = must output fp_border() function officer package. function helps define width color line. can define outside table, shown .HospitalTotal cases known outcomeRecoveredDiedTotal% casesMedian CT valuesTotal% casesMedian CT valuesSt. Mark's Maternity Hospital (SMMH)32512638.822.019961.222.0Central Hospital35816546.122.019353.922.0Other68529042.321.039557.722.0Military Hospital70830943.622.039956.421.0Port Hospital1,36457942.421.078557.622.0Total3,4401,46942.722.01,97157.322.0Font alignmentWe centre-align columns aside left-column hospital names, using align() function flextable.HospitalTotal cases known outcomeRecoveredDiedTotal% casesMedian CT valuesTotal% casesMedian CT valuesSt. Mark's Maternity Hospital (SMMH)32512638.822.019961.222.0Central Hospital35816546.122.019353.922.0Other68529042.321.039557.722.0Military Hospital70830943.622.039956.421.0Port Hospital1,36457942.421.078557.622.0Total3,4401,46942.722.01,97157.322.0Additionally, can increase header font size change bold. can also change total row bold.HospitalTotal cases known outcomeRecoveredDiedTotal% casesMedian CT valuesTotal% casesMedian CT valuesSt. Mark's Maternity Hospital (SMMH)32512638.822.019961.222.0Central Hospital35816546.122.019353.922.0Other68529042.321.039557.722.0Military Hospital70830943.622.039956.421.0Port Hospital1,36457942.421.078557.622.0Total3,4401,46942.722.01,97157.322.0Merged cellsJust merge cells horizontally header row, can also merge cells vertically using merge_at() specifying rows () column (j).BackgroundTo distinguish content table headers, may want add additional formatting. e.g. changing background colour. example change table body gray.HospitalTotal cases known outcomeRecoveredDiedTotal% casesMedian CT valuesTotal% casesMedian CT valuesSt. Mark's Maternity Hospital (SMMH)32512638.822.019961.222.0Central Hospital35816546.122.019353.922.0Other68529042.321.039557.722.0Military Hospital70830943.622.039956.421.0Port Hospital1,36457942.421.078557.622.0Total3,4401,46942.722.01,97157.322.0","code":"\nmy_table <- flextable(table) \nmy_table\nmy_table <- colformat_num(my_table, j = c(4,7), digits = 1)\nmy_table\nmy_table %>% autofit()\nmy_table <- my_table %>% \n  width(j=1, width = 2.7) %>% \n  width(j=2, width = 1.5) %>% \n  width(j=c(4,5,7,8), width = 1)\n\nmy_table\nmy_table <- my_table %>% \n  add_header_row(\n    top = TRUE,                # New header goes on top of existing header row\n    values = c(\"Hospital\",     # Header values for each column below\n               \"Total cases with known outcome\", \n               \"Recovered\",    # This will be the top-level header for this and two next columns\n               \"\",\n               \"\",\n               \"Died\",         # This will be the top-level header for this and two next columns\n               \"\",             # Leave blank, as it will be merged with \"Died\"\n               \"\")) %>% \n    set_header_labels(         # Rename the columns in original header row\n      hospital = \"\", \n      N_Known = \"\",                  \n      N_Recover = \"Total\",\n      Pct_Recover = \"% of cases\",\n      ct_value_Recover = \"Median CT values\",\n      N_Death = \"Total\",\n      Pct_Death = \"% of cases\",\n      ct_value_Death = \"Median CT values\")  %>% \n  merge_at(i = 1, j = 3:5, part = \"header\") %>% # Horizontally merge columns 3 to 5 in new header row\n  merge_at(i = 1, j = 6:8, part = \"header\")     # Horizontally merge columns 6 to 8 in new header row\n\nmy_table  # print\n# define style for border line\nborder_style = officer::fp_border(color=\"black\", width=1)\n\n# add border lines to table\nmy_table <- my_table %>% \n\n  # Remove all existing borders\n  border_remove() %>%  \n  \n  # add horizontal lines via a pre-determined theme setting\n  theme_booktabs() %>% \n  \n  # add vertical lines to separate Recovered and Died sections\n  vline(part = \"all\", j = 2, border = border_style) %>%   # at column 2 \n  vline(part = \"all\", j = 5, border = border_style)       # at column 5\n\nmy_table\nmy_table <- my_table %>% \n   align(align = \"center\", j = c(2:8), part = \"all\") \nmy_table\nmy_table <-  my_table %>%  \n  fontsize(i = 1, size = 12, part = \"header\") %>%   # adjust font size of header\n  bold(i = 1, bold = TRUE, part = \"header\") %>%     # adjust bold face of header\n  bold(i = 6, bold = TRUE, part = \"body\")           # adjust bold face of total row (row 6)\n\nmy_table\nmy_table <- my_table %>% \n  merge_at(i = 1:2, j = 1, part = \"header\") %>% \n  merge_at(i = 1:2, j = 2, part = \"header\")\nmy_table <- my_table %>% \n    bg(part = \"body\", bg = \"gray95\")  \n\nmy_table "},{"path":"html-tables.html","id":"conditional-flextable-formatting","chapter":"1 HTML tables","heading":"1.4 Conditional flextable formatting","text":"can highlight values column meet certain rule, e.g. 55% cases died.HospitalTotal cases known outcomeRecoveredDiedTotal% casesMedian CT valuesTotal% casesMedian CT valuesSt. Mark's Maternity Hospital (SMMH)32512638.822.019961.222.0Central Hospital35816546.122.019353.922.0Other68529042.321.039557.722.0Military Hospital70830943.622.039956.421.0Port Hospital1,36457942.421.078557.622.0Total3,4401,46942.722.01,97157.322.0Or, can higlight entire row meeting certain criterion, hospital interest. particularly helpful looping e.g. reports per geographical area, highlight tables current iteration compares geographies. just remove column (j) specification.HospitalTotal cases known outcomeRecoveredDiedTotal% casesMedian CT valuesTotal% casesMedian CT valuesSt. Mark's Maternity Hospital (SMMH)32512638.822.019961.222.0Central Hospital35816546.122.019353.922.0Other68529042.321.039557.722.0Military Hospital70830943.622.039956.421.0Port Hospital1,36457942.421.078557.622.0Total3,4401,46942.722.01,97157.322.0","code":"\nmy_table %>% \n  bg(j=7, i= ~ Pct_Death >=55, part = \"body\", bg = \"red\") \nmy_table %>% \n  bg(., j=c(1:8), i= ~ hospital == \"Military Hospital\", part = \"body\", bg = \"#91c293\") "},{"path":"html-tables.html","id":"saving-your-table","chapter":"1 HTML tables","heading":"1.5 Saving your table","text":"different ways table can integrated output.Save single tableYou can export tables Word, PowerPoint HTML image (PNG) files. , one following functions used:save_as_docxsave_as_pptxsave_as_imagesave_as_htmlFor instance:Note packages webshot webshot2 required save flextable image.Images may come transparent backgrounds.want view ‘live’ versions flextable output intended document format, instance can see fits page can copy another document, can use print method argument preview set “pptx” “docx”. document pop .Save table R markdown documentThis table can integrated automated document, R markdown output, table object called within R markdown chunk. means table can updated part report data might change, numbers can refreshed.See detail R markdown section handbook.","code":"\nsave_as_docx(\"my table\" = my_table, path = \"file.docx\")\n# Edit the 'my table' as needed for the title of table. If not specified the whole file will be blank. \n\nsave_as_image(my_table, path = \"file.png\")## [1] \"C:/Users/Neale/OneDrive - Neale Batra/Documents/Analytic Software/R/Projects/R handbook/Epi_R_handbook/file.png\"print(my_table, preview = \"docx\") # Word document example\r\nprint(my_table, preview = \"pptx\") # Powerpoint example"},{"path":"html-tables.html","id":"resources","chapter":"1 HTML tables","heading":"1.6 Resources","text":"full flextable explanation : https://ardata-fr.github.io/flextable-book/","code":""}]

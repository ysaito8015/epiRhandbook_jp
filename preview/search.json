[{"path":"index.html","id":"section","chapter":"","heading":"","text":"DRAFT.BOOK REVIEWERS: PLEASE PROVIDE FEEDBACK PAGE LINKDO LIKE BOOK? LET US KNOW ONE CLICK , PROVIDE FEEDBACK ","code":""},{"path":"index.html","id":"about-this-handbook","chapter":"","heading":"About this handbook","text":"open-access R reference manual applied epidemiology public health.book strives :Serve quick R code reference manualProvide task-centered examples addressing common epidemiological problemsAssist epidemiologists transitioning R SAS, STATA, SPSS, ExcelBe accessible settings low internet-connectivity via offline version ([instructions ][Download book data])different R books?written epidemiologists, epidemiologists - leveraging experience local, national, academic, emergency settingsIt provides examples epidemic curves, transmission chains, epidemic modeling projections, age sex pyramids standardization, record matching, outbreak detection, survey analysis, causal diagrams, survival analysis, GIS basics, phylogenetic trees, automated reports, etc…","code":""},{"path":"index.html","id":"how-to-read-this-handbook","chapter":"","heading":"How to read this handbook","text":"Online versionSearch via search box Table ContentsClick “copy” icons copy codeSee “Resources” section page resourcesTo download data “follow-along”, see [Download book data] pageOffline versionTo download offline version, follow step--step instructions [Download book data] page.LanguagesWe actively seeking translate book languages English. can help, please contact us epiRhandbook@gmail.com.","code":""},{"path":"index.html","id":"edit-or-contribute","chapter":"","heading":"Edit or contribute","text":"Want share use book? Want offer fix addition?\r\nEmail us epiRhandbook@gmail.com. welcome comments suggestions.can also submit issue pull request Github repository, provide structured feedback via Google survey.","code":""},{"path":"index.html","id":"acknowledgements","chapter":"","heading":"Acknowledgements","text":"","code":""},{"path":"index.html","id":"contributors","chapter":"","heading":"Contributors","text":"book produced collaboration epidemiologists around world, drawing upon experiences organizations including local, state, provincial, national health departments ministries, World Health Organization (), MSF (Médecins Sans Frontières / Doctors without Borders), hospital systems, academic institutions.Editor--Chief: Neale BatraCore team: Neale Batra, Alex Spina, Amrish Baidjoe, Pat Keating, Henry Laurenson-Schafer, Finlay CampbellAuthors: Neale Batra, Alex Spina, Paula Blomquist, Finlay Campbell, Henry Laurenson-Schafer, Isaac Florence, Natalie Fischer, Aminata Ndiaye, Liza Coyer, Jonny Polonski, Yurie Izawa, Daniel Molling, Sara Hollis, Isha Berry, Wen LinReviewers:","code":""},{"path":"index.html","id":"funding-and-programmatic-support","chapter":"","heading":"Funding and programmatic support","text":"handbook approved product specific organization. Although strive accuracy, provide guarantee content book.handbook project received funding via COVID-19 emergency capacity-building grant Training Programs Epidemiology Public Health Interventions Network (TEPHINET). handbook supported Cooperative Agreement number NU2GGH001873, funded Centers Disease Control Prevention TEPHINET, program Task Force Global Health. contents solely responsibility authors necessarily represent official views Centers Disease Control Prevention, Department Health Human Services, Task Force Global Health, Inc. TEPHINET.Programmatic support provided EPIET Alumni Network (EAN).","code":""},{"path":"index.html","id":"inspiration","chapter":"","heading":"Inspiration","text":"multitude tutorials vignettes provided knowledge development handbook content credited within respective pages.generally, following sources provided inspiration laid groundwork handbook:“R4Epis” project (collaboration MSF RECON)R Epidemics Consortium (RECON)R Data Science book (R4DS)bookdown: Authoring Books Technical Documents R MarkdownNetlify hosts website","code":""},{"path":"index.html","id":"image-credits","chapter":"","heading":"Image credits","text":"Images logo US CDC Public Health Image Library) include 2013 Yemen looking mosquito breeding sites, Ebola virus, Survey Rajasthan.","code":""},{"path":"index.html","id":"terms-of-use-and-license","chapter":"","heading":"Terms of Use and License","text":"work licensed Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.Universities academic courses welcome use handbook students. questions intended use, email epirhandbook@gmail.com.","code":""},{"path":"r-markdown-reports.html","id":"r-markdown-reports","chapter":"1 R Markdown reports","heading":"1 R Markdown reports","text":"R Markdown fantastic tool creating automated, reproducible, share-worthy outputs. can generate static interactive outputs, form html, word, pdf, powerpoint, others.","code":""},{"path":"r-markdown-reports.html","id":"overview","chapter":"1 R Markdown reports","heading":"1.1 Overview","text":"Using R markdown allow easily recreate entire formatted document, including tables/figures/text, using new data (e.g. daily surveillance reports) /subsets data (e.g. reports specific geographies).guide go basics. See Resources section info. pages handbook expand page:page [Organizing routine reports] demonstrates routinize report production auto-generated time-stamped folders.page [Dashboards M Markdown] explains format R Markdown report dashboard.","code":""},{"path":"r-markdown-reports.html","id":"preparation","chapter":"1 R Markdown reports","heading":"1.2 Preparation","text":"Background R MarkdownTo explain concepts packages involved:Markdown “language” uses syntax allows design document using plain text, can converted html formats. specific R, usually markdown file ‘.md’ extension.R Markdown: extension markdown specific R, file extensions ‘.Rmd’. allows R code embedded ‘chunks’ code can run, rather just text document.rmarkdown - package: used R render .Rmd file desire output. However focus markdown (text) syntax, also need…knitr: R package read code chunks, execute , ‘knit’ back document. tables graphs included alongside text.Pandoc: Finally, pandoc needed actually convert documents e.g. word/pdf/powerpoint etc. software separate R.sum, process involves feeding .Rmd file knitr, executes R code chunks creates new .md (markdown) file includes R code rendered output. .md file processed pandoc create finished product: Microsoft Word document, HTML file, powerpoint document, pdf, etc.(source: https://rmarkdown.rstudio.com/authoring_quick_tour.html):InstallationTo create R Markdown output, need following installed:rmarkdown package, described abovePandoc, come installed RStudio. using RStudio, can download : http://pandoc.org.want generate PDF output (bit trickier), need install LaTeX. R Markdown users installed LaTeX , recommend install TinyTeX (https://yihui.name/tinytex/). can use following commands:","code":"\npacman::p_load(tinytex)     # install tinytex package\ntinytex::install_tinytex()  # R command to install TinyTeX software"},{"path":"r-markdown-reports.html","id":"getting-started","chapter":"1 R Markdown reports","heading":"1.3 Getting started","text":"","code":""},{"path":"r-markdown-reports.html","id":"install-rmarkdown-r-package","chapter":"1 R Markdown reports","heading":"Install rmarkdown R package","text":"Install rmarkdown R package. handbook emphasize p_load() pacman, installs package necessary loads use. can also load packages library() base R. See page [R basics] information R packages.","code":"\npacman::p_load(rmarkdown)"},{"path":"r-markdown-reports.html","id":"starting-a-new-rmd-file","chapter":"1 R Markdown reports","heading":"Starting a new Rmd file","text":"RStudio, open new R markdown file, starting ‘File’, ‘New file’ ‘R markdown…’.R Studio give output options pick . example select “HTML” want create html document. title author names important. output document type want one , don’t worry - can just pick one change script later.open new .Rmd script.","code":""},{"path":"r-markdown-reports.html","id":"important-to-know","chapter":"1 R Markdown reports","heading":"Important to know","text":"working directoryThe working directory markdown file wherever Rmd file saved. instance, R project within ~/Documents/projectX Rmd file subfolder ~/Documents/projectX/markdownfiles/markdown.Rmd, code read.csv(“data.csv”) within markdown look csv file markdownfiles folder, root project folder scripts within projects normally automatically look.refer files elsewhere, either need use full file path use package. package sets working directory root folder R project explained detail [R projects] [Import export] pages handbook. instance, import file called “data.csv” within projectX folder, code import((“data.csv”)).Note use setwd() R Markdown scripts recommended – applies code chunk written .Working drive vs computerBecause R Markdown can run pandoc issues running shared network drive, recommended folder local machine, e.g. project within ‘Documents’. use Git (much recommended!), familiar. details, see handbook pages [R network drives] [Errors help].","code":""},{"path":"r-markdown-reports.html","id":"r-markdown-components","chapter":"1 R Markdown reports","heading":"1.4 R Markdown components","text":"R Markdown document can edited RStudio just like standard R script. start new R Markdown script, RStudio tries helpful showing template explains different section R Markdown script.appears starting new Rmd script intended produce html output (per previous section).can see, three basic components Rmd file.","code":""},{"path":"r-markdown-reports.html","id":"yaml-metadata","chapter":"1 R Markdown reports","heading":"YAML metadata","text":"Referred ‘YAML metadata’ just ‘YAML’, top R Markdown document. section script tell Rmd file type output produce, formatting preferences, metadata document title, author, date. uses mentioned (referred ‘Producing output’). Note indentation matters; tabs accepted spaces .section must begin line containing just three dashes --- must close line containing just three dashes ---. YAML parameters comes key:value pairs. placement colons YAML important - key:value pairs separated colons (equals signs!).YAML begin metadata document. order primary YAML parameters (indented) matter. example:can use R code YAML values writing -line code (preceded r within back-ticks) also within quotes (see example date:).image , clicked default output html file, can see YAML says output: html_document. However can also change say powerpoint_presentation word_document even pdf_document.","code":"title: \"My document\"\r\nauthor: \"Me\"\r\ndate: \"2021-04-18\""},{"path":"r-markdown-reports.html","id":"text","chapter":"1 R Markdown reports","heading":"Text","text":"narrative document, including titles headings. written “markdown” language, used across many different software.core ways write text. See extensive documentation available R Markdown “cheatsheet” RStudio website.","code":""},{"path":"r-markdown-reports.html","id":"new-lines","chapter":"1 R Markdown reports","heading":"New lines","text":"Uniquely R Markdown, initiate new line, enter *two spaces** end previous line Enter/Return.","code":""},{"path":"r-markdown-reports.html","id":"case","chapter":"1 R Markdown reports","heading":"Case","text":"Surround normal text character change appears output.Underscores (_text_) single asterisk (*text*) italiciseDouble asterisks (**text**) bold textBack-ticks (text) display text codeThe actual appearance font can set using specific templates (specified YAML metadata; see example tabs).","code":""},{"path":"r-markdown-reports.html","id":"color","chapter":"1 R Markdown reports","heading":"Color","text":"simple mechanism change color text R Markdown. One work-around, output HTML file, add HTML line markdown text. HTML code print line text bold red.","code":"<span style=\"color: red;\">**_DANGER:_** This is a warning.<\/span>  "},{"path":"r-markdown-reports.html","id":"titles-and-headings","chapter":"1 R Markdown reports","heading":"Titles and headings","text":"hash symbol text portion R Markdown script creates heading. different chunk R code script, hash symbol mechanism comment/annotate/de-activate, normal R script.Different heading levels established different numbers hash symbols start new line. One hash symbol title primary heading. Two hash symbols second-level heading. Third- fourth-level headings can made successively hash symbols.","code":"# First-level heading / title\r\n\r\n## Second level heading  \r\n\r\n### Third-level heading"},{"path":"r-markdown-reports.html","id":"bullets-and-numbering","chapter":"1 R Markdown reports","heading":"Bullets and numbering","text":"Use asterisks (*) created bullets list. Finish previous sentence, enter two spaces, Enter/Return twice, start bullets. Include space asterisk bullet text. bullet enter two spaces Enter/Return. Sub-bullets work way indented. Numbers work way instead asterisk, write 1), 2), etc. R Markdown script text might look.","code":"Here are my bullets (there are two spaces after this colon):  \r\n\r\n* Bullet 1 (followed by two spaces and Enter/Return)  \r\n* Bullet 2 (followed by two spaces and Enter/Return)  \r\n  * Sub-bullet 1 (followed by two spaces and Enter/Return)  \r\n  * Sub-bullet 2 (followed by two spaces and Enter/Return)  \r\n  "},{"path":"r-markdown-reports.html","id":"in-line-r-code","chapter":"1 R Markdown reports","heading":"In-line R code","text":"can also include minimal R code within back-ticks. Within back-ticks, begin code “r” space, RStudio knows evaluate code R code. See example .","code":""},{"path":"r-markdown-reports.html","id":"example","chapter":"1 R Markdown reports","heading":"Example","text":"example shows multiple heading levels, bullets, uses R code current date (Sys.Date()) evaluate printed date.","code":""},{"path":"r-markdown-reports.html","id":"code-chunks","chapter":"1 R Markdown reports","heading":"Code chunks","text":"Sections script dedicated running R code called “chunks”. may load packages, import data, perform actual data management visualisation. may many code chunks, can help organize R code parts, perhaps interspersed text. note:\r\n‘chunks’ appear slightly different background colour narrative part document.chunk opened line starts three back-ticks, curly brackets contain parameters chunk ({ }). chunk ends three back-ticks.can create new chunk typing , using keyboard shortcut “Ctrl + Alt + ” (Cmd + Shift + r Mac), clicking green ‘insert new code chunk’ icon top script editor.notes contents curly brackets { }:start ‘r’ indicate language name within chunk RAfter r can optionally write chunk “name” – necessary can help organise work. Note name chunks, ALWAYS use unique names else R complain try render.curly brackets can include options , written tag=value, :eval = FALSE run R codeecho = FALSE print chunk’s R source code output documentwarning = FALSE print warnings produced R codemessage = FALSE print messages produced R codeinclude = either TRUE/FALSE whether include chunk outputs (e.g. plots) documentfig.width = fig.height = - provide style fig.width = \"75%\"fig.align = \"center\" adjust figure aligned across pagefig.show='hold' chunk prints multiple figures want printed next (pair fig.width = c(\"33%\", \"67%\"). Can also set fig.show='asis' show code generates , 'hide' hide, 'animate' concatenate multiple animation.chunk header must written one lineTry avoid periods, underscores, spaces. Use hyphens ( - ) instead need separator.Read extensively knitr options .options can configured point--click using setting buttons top right chunk. , can specify parts chunk want rendered document include, namely code, outputs, warnings. come written preferences within curly brackets, e.g. ‘echo=FALSE’ specify want ‘Show output ’.also two arrows top right chunk, useful run code within chunk, code prior chunks. Hover see .global options applied chunks script, can set within first R code chunk script. instance, outputs shown code chunk code , can include command R code chunk:","code":"\nknitr::opts_chunk$set(echo = FALSE) "},{"path":"r-markdown-reports.html","id":"combining-code-and-text","chapter":"1 R Markdown reports","heading":"Combining code and text","text":"showed can integrate dynamic values today’s date text. can also use short functions (e.g. calculate min, median, max column) text, integrate objects created within code chunks.following calculates proportion cases aged less 18 years old, using tidyverse code, feeds text. see looks knitted word document.","code":""},{"path":"r-markdown-reports.html","id":"images","chapter":"1 R Markdown reports","heading":"Images","text":"can include images R Markdown one two ways:work, try using knitr::include_graphics()(remember, file path written using package)","code":"![](\"path/to/image.png\")  \nknitr::include_graphics(\"path/to/image.png\")\nknitr::include_graphics(here::here(\"path\", \"to\", \"image.png\"))"},{"path":"r-markdown-reports.html","id":"tables","chapter":"1 R Markdown reports","heading":"Tables","text":"Create table using hyphens ( - ) bars ( | ). number hyphens /bars allow number spaces cell text begins wrap.code produces table :","code":"Column 1 |Column  2 |Column 3\r\n---------|----------|--------\r\nCell A   |Cell B    |Cell C\r\nCell D   |Cell E    |Cell F"},{"path":"r-markdown-reports.html","id":"producing-the-document","chapter":"1 R Markdown reports","heading":"Producing the document","text":"can produce document following ways:command via render() function rmarkdown package (executed outside R Markdown script)Manually pressing “Knit” button top RStudio script editor","code":""},{"path":"r-markdown-reports.html","id":"option-1-render-command","chapter":"1 R Markdown reports","heading":"Option 1: render() command","text":"One way produce R Markdown output run render() function rmarkdown package. must execute command outside R Markdown script - either separate R script (often called “run file”), stand-alone command R Console.default settings, running command save Rmd output folder Rmd script, file name (aside file extension). instance “my_report.Rmd” knitted create “my_report.docx” knitting word document.render() can accept optional arguments, including:output_format = output format convert (e.g. \"html_document\", \"pdf_document\", \"word_document\", \"\"). can also specify YAML inside R Markdown script.output_file = name output file (file path). can created via R functions like () str_glue() demonstrated .output_dir = output directory (folder) save file. allows chose alternative directory Rmd file saved .output_options = can provide list options override script YAML (e.g. )output_yaml = can provide path .yml file contains YAML specificationsparams = See section parameters belowSee complete list one example, improve version control, following command save output file within ‘outputs’ sub-folder, current date file name. create file name, function str_glue() stringr package use ‘glue’ together static strings (written plainly) dynamic R code (written curly brackets). instance April 10th 2021, file name “Report_2021-04-10.docx”. See page [Characters strings] details str_glue().file renders, RStudio Console show rendering progress 100%, final message indicate rendering complete.","code":"\nrmarkdown::render(input = \"my_report.Rmd\")\nrmarkdown::render(\n  input = \"create_output.Rmd\",\n  output_file = stringr::str_glue(\"outputs/Report_{Sys.Date()}.docx\")) "},{"path":"r-markdown-reports.html","id":"option-2-knit-button","chapter":"1 R Markdown reports","heading":"1.4.1 Option 2: “Knit” button","text":"Rmd file open, press ‘Knit’ icon/button top file. RStudio’s shortcut button render() function rmarkdown. compatible self-contained R markdown, needed components exist sourced within file.Just like knitting separate script, R Studio show progress Rmd file. Except time, appear within ‘R Markdown’ tab panel console. complete document automatically open complete document saved folder markdown, file name aside file extension. obviously ideal version control, need rename file .","code":""},{"path":"r-markdown-reports.html","id":"parameterised-reports","chapter":"1 R Markdown reports","heading":"1.5 Parameterised reports","text":"can use parameterisation make report dynamic, can run specific setting (e.g. specific date place certain knitting options). , focus basics, detail online parameterized reports.Using Ebola linelist example, let’s say want run standard surveillance report hospital day. show one can using parameters.Important: dynamic reports also possible without formal parameter structure (without params:), using simple R objects adjacent R script. explain end section.","code":""},{"path":"r-markdown-reports.html","id":"setting-parameters","chapter":"1 R Markdown reports","heading":"Setting parameters","text":"several options specifying parameter values R Markdown output.","code":""},{"path":"r-markdown-reports.html","id":"option-1-set-parameters-within-yaml","chapter":"1 R Markdown reports","heading":"Option 1: Set parameters within YAML","text":"Edit YAML include params: option, indented statements parameter want define. example create parameters date hospital, specify values. values subject change time report run. use “Knit” button produce output, parameters default values. Likewise, use render() parameters default values unless otherwise specified render() command.background, parameter values contained within read-list called params. Thus, can insert parameter values R code another R object/value environment. Simply type params$ followed parameter name. example params$hospital represent hospital name (“Central Hospital” default).Note parameters can also hold values true false, can included knitr options R chunk. example, can set {r, eval=params$run} instead {r, eval=FALSE}, now whether chunk runs depends value parameter run:.Note parameters dates, input string. params$date interpreted R code likely need wrapped .Date() similar function convert class Date.","code":"---\r\ntitle: Surveillance report\r\noutput: html_document\r\nparams:\r\n date: 2021-04-10\r\n hospital: Central Hospital\r\n---"},{"path":"r-markdown-reports.html","id":"option-2-set-parameters-within-render","chapter":"1 R Markdown reports","heading":"Option 2: Set parameters within render()","text":"mentioned , alternative pressing “Knit” button produce output execute render() function separate script. later case, can specify parameters used rendering params = argument render().Note parameter values provided overwrite default values written within YAML. write values quotation marks case defined character/string values.command renders “surveillance_report.Rmd”, specifies dynamic output file name folder, provides list() two parameters values argument params =.","code":"\nrmarkdown::render(\n  input = \"surveillance_report.Rmd\",  \n  output_file = stringr::str_glue(\"outputs/Report_{Sys.Date()}.docx\"),\n  params = list(date = \"2021-04-10\", hospital  = \"Central Hospital\"))"},{"path":"r-markdown-reports.html","id":"option-3-set-parameters-using-a-graphical-user-interface","chapter":"1 R Markdown reports","heading":"Option 3: Set parameters using a Graphical User Interface","text":"interactive feel, can also use Graphical User Interface (GUI) manually select values parameters. can click drop-menu next ‘Knit’ button choose ‘Knit parameters’.pop-appear allowing type values parameters established document’s YAML.can achieve render() command specifying params = \"ask\", demonstrated .However, typing values pop-window subject error spelling mistakes. may prefer add restrictions values can entered drop-menus. can adding YAML several specifications params: entry.label: title particular drop-menuvalue: default (starting) valueinput: set select drop-menuchoices: Give eligible values drop-menuBelow, specifications written hospital parameter.knitting (either via ‘knit parameters’ button render()), pop-window drop-options select .","code":"rmarkdown::render(\r\n  input = \"surveillance_report.Rmd\",  \r\n  output_file = stringr::str_glue(\"outputs/Report_{Sys.Date()}.docx\"),\r\n  params = “ask”)---\r\ntitle: Surveillance report\r\noutput: html_document\r\nparams:\r\n date: 2021-04-10\r\n hospital: \r\n  label: “Town:”\r\n  value: Central Hospital\r\n  input: select\r\n  choices: [Central Hospital, Military Hospital, Port Hospital, St. Mark's Maternity Hospital (SMMH)]\r\n---"},{"path":"r-markdown-reports.html","id":"parameterized-example","chapter":"1 R Markdown reports","heading":"Parameterized example","text":"following code creates parameters date hospital, used R Markdown params$date params$hospital, respectively.resulting report output, see data filtered specific hospital, plot title refers correct hospital date. use “linelist_cleaned.rds” file , particularly appropriate linelist also datestamp within align parameterised date.Knitting produces final output default font layout.","code":""},{"path":"r-markdown-reports.html","id":"parameterisation-without-params","chapter":"1 R Markdown reports","heading":"Parameterisation without params","text":"rendering R Markdown file render() separate script, can actually create impact parameterization without using params: functionality.instance, R script contains render() command, can simply define hospital date two R objects (values) render() command. R Markdown, need params: section YAML, refer date object rather params$date hospital rather params$hospital.Following approach means means can “knit parameters”, use GUI, include knitting options within parameters. However allows simpler code, may advantageous.","code":"\n# This is a R script that is separate from the R Markdown\n\n# define R objects\nhospital <- \"Central Hospital\"\ndate <- \"2021-04-10\"\n\n# Render the R markdown\nrmarkdown::render(input = \"create_output.Rmd\") "},{"path":"r-markdown-reports.html","id":"looping-reports","chapter":"1 R Markdown reports","heading":"1.6 Looping reports","text":"may want run options report , instance surveillance report hospital interest within single run, rather specifying hospital one one. need work separate script outside Rmd, create objects today’s date list hospital names loop .feed markdown using loop, go item list. letter represents item list currently iterated, hospital_list[1] “Central Hospital”. information also fed file name, file name first iteration produced April 10th 2021 “Report_Central Hospital2021-04-10.docx”, saved ‘output’ subfolder. examples, four files created day.instance, using parameterisation discussed earlier:text code within Rmd refer params$date params$hospital bring date hospital name. list items need referred within interation.using strict form parameterisation saving objects environment, discussed end parameterisation section, render function look like :text within markdown need refer hospital_list[] refdate.","code":"hospital_list <- c(“Central Hospital”, \r\n                   “Military Hospital”, \r\n                   “Port Hospital”, “\r\n                   St. Mark's Maternity Hospital (SMMH)”) \r\n\r\nrefdate <- Sys.Date() # today’s datefor(i in 1:length(hospital_list)){\r\nrmarkdown::render(\"surveillance_report.Rmd\",\r\n                  output_file = paste0(\"output/Report_\", hospital_list[i], refdate, \".docx\"),\r\n                  params = list(date = refdate, hospital  = hospital_list[i]))\r\n}       for(i in 1:length(hospital_list)){\r\nrmarkdown::render(\"surveillance_report.Rmd\",\r\n                  output_file = paste0(\"output/Report_\", hospital_list[i], refdate, \".docx\")\r\n}       "},{"path":"r-markdown-reports.html","id":"file-structure","chapter":"1 R Markdown reports","heading":"1.7 File structure","text":"several ways structure R Markdown associated R scripts. advantages disadvantages:Self-contained R Markdown - everything needed report imported created within R Markdown\r\nSource files - can run external R scripts source() command use outputs Rmd\r\nChild scripts - alternate mechanism source()\r\nSource files - can run external R scripts source() command use outputs RmdChild scripts - alternate mechanism source()Utilize “runfile” - Run commands R script prior rendering R Markdown","code":""},{"path":"r-markdown-reports.html","id":"self-contained-rmd","chapter":"1 R Markdown reports","heading":"Self-contained Rmd","text":"relatively simple report, may elect organize R Markdown script “self-contained” involve external scripts.Everything need run R markdown imported created within Rmd file, including code chunks package loading. “self-contained” approach appropriate need much data processing (e.g. brings clean semi-clean data file) rendering R Markdown take long.scenario, one logical organization R Markdown script might :Set global knitr optionsLoad packagesImport dataProcess dataProduce outputs (tables, plots, etc.)Save outputs, applicable (.csv, .png, etc.)","code":""},{"path":"r-markdown-reports.html","id":"source-other-files","chapter":"1 R Markdown reports","heading":"Source other files","text":"One variation “self-contained” approach R Markdown code chunks “source” (run) R scripts. can make R Markdown script less cluttered, simple, easier organize. can also help want display final figures beginning report. approach, final R Markdown script simply combines pre-processed outputs document.One way providing R scripts (file path name extension) base R command source().Note using source() within R Markdown, external files still run course rendering Rmd file. Therefore, script run every time render report. Thus, source() commands within R Markdown speed run time, greatly assist de-bugging, error produced still printed producing R Markdown.alternative utilize child = knitr option. EXPLAIN DOYou must aware various R environments. Objects created within environment necessarily available environment used R Markdown.","code":"\nsource(\"your-script.R\", local = knitr::knit_global())\n# or sys.source(\"your-script.R\", envir = knitr::knit_global())"},{"path":"r-markdown-reports.html","id":"runfile","chapter":"1 R Markdown reports","heading":"Runfile","text":"approach involves utilizing R script contains render() command(s) pre-process objects feed R markdown.instance, can load packages, load clean data, even create graphs interest prior render(). steps can occur R script, scripts sourced. long commands occur RStudio session objects saved environment, objects can called within Rmd content. R markdown used final step - produce output pre-processed objects. much easier de-bug something goes wrong.approach helpful following reasons:informative error messages - messages generated R script, R Markdown. R Markdown errors tend tell chunk problem, tell line.applicabel, can run long processing steps advance render() command - run .example , separate R script pre-process data object R Environment render “create_output.Rmd” using render().","code":"\ndata <- import(\"datafile.csv\") %>%       # Load data and save to environment\n  select(age, hospital, weight)          # Select limited columns\n\nrmarkdown::render(input = \"create_output.Rmd\")   # Create Rmd file"},{"path":"r-markdown-reports.html","id":"folder-strucutre","chapter":"1 R Markdown reports","heading":"Folder strucutre","text":"Workflow also concerns overall folder structure, ‘output’ folder created documents figures, ‘data’ ‘inputs’ folders cleaned data. go detail , check [Organizing routine reports] page.","code":""},{"path":"r-markdown-reports.html","id":"formatting-and-aesthetics","chapter":"1 R Markdown reports","heading":"1.8 Formatting and aesthetics","text":"easy aesthetics, create template file contains desired formatting. can create instance MS word power point document contains pages desired dimensions, watermarks, backgrounds, fonts.","code":""},{"path":"r-markdown-reports.html","id":"word-documents","chapter":"1 R Markdown reports","heading":"1.8.1 Word documents","text":"create template, start new word document (use existing output formatting suits ), edit fonts defining Styles. Style,Headings 1, 2, 3 refer various markdown header levels (# Header 1, ## Header 2 ### Header 3 respectively). Right click style click ‘modify’ change font formatting well paragraph (e.g. can introduce page breaks certain styles can help spacing). aspects word document margins, page size, headers etc, can changed like usual word document working directly within.","code":""},{"path":"r-markdown-reports.html","id":"powerpoint-documents","chapter":"1 R Markdown reports","heading":"1.8.2 Powerpoint documents","text":", create new slideset use existing powerpoint file desired formatting. editing, click ‘View’ ‘Slide Master’. can change ‘master’ slide appearance editing text formatting text boxes, well background/page dimensions overall page.Unfortunately, editing powerpoint files slightly less flexible:first level header (# Header 1) automatically become title new slide,## Header 2 text come subtitle text within slide’s main textbox (unless find way maniuplate Master view).Outputted plots tables automatically go new slides. need combine , instance patchwork function combine ggplots, show page.","code":""},{"path":"r-markdown-reports.html","id":"integrating-templates-into-the-yaml","chapter":"1 R Markdown reports","heading":"1.8.3 Integrating templates into the YAML","text":"template prepared, detail can added YAML Rmd underneath ‘output’ line underneath document type specified (goes separate line ). Note reference_doc can used powerpoint slide templates.easiest save template folder Rmd file (example ), subfolder within.","code":"---\r\ntitle: Surveillance report\r\noutput: \r\n word_document:\r\n  reference_docx: \"template.docx\"\r\nparams:\r\n date: 2021-04-10\r\n hospital: Central Hospital\r\ntemplate:\r\n \r\n---"},{"path":"r-markdown-reports.html","id":"formatting-html-files","chapter":"1 R Markdown reports","heading":"1.8.4 Formatting HTML files","text":"HTML files use templates, can styles configured within YAML. HTMLs interactive documents, particularly flexible. cover basic options .Table contents: can add table contents toc: true , also specify remains viewable (“floats”) scroll, toc_float: true.Table contents: can add table contents toc: true , also specify remains viewable (“floats”) scroll, toc_float: true.Themes: can refer pre-made themes, come Bootswatch theme library. example use cerulean. options include: journal, flatly, darkly, readable, spacelab, united, cosmo, lumen, paper, sandstone, simplex, yeti.Themes: can refer pre-made themes, come Bootswatch theme library. example use cerulean. options include: journal, flatly, darkly, readable, spacelab, united, cosmo, lumen, paper, sandstone, simplex, yeti.Highlight: Configuring changes look highlighted text (e.g. code within chunks shown). Supported styles include default, tango, pygments, kate, monochrome, espresso, zenburn, haddock, breezedark, textmate.Highlight: Configuring changes look highlighted text (e.g. code within chunks shown). Supported styles include default, tango, pygments, kate, monochrome, espresso, zenburn, haddock, breezedark, textmate.example integrate options YAML.two examples HTML outputs floating tables contents, different theme highlight styles selected:","code":"---\r\ntitle: \"HTML example\"\r\noutput:\r\n  html_document:\r\n    toc: true\r\n    toc_float: true\r\n    theme: cerulean\r\n    highlight: kate\r\n    \r\n---"},{"path":"r-markdown-reports.html","id":"resources","chapter":"1 R Markdown reports","heading":"1.9 Resources","text":"information can found via:https://bookdown.org/yihui/rmarkdown/https://rmarkdown.rstudio.com/articles_intro.htmlA good explainer markdown vs knitr vs Rmarkdown : https://stackoverflow.com/questions/40563479/relationship--r-markdown-knitr-pandoc--bookdown","code":""},{"path":"dashboards-with-r-markdown.html","id":"dashboards-with-r-markdown","chapter":"2 Dashboards with R Markdown","heading":"2 Dashboards with R Markdown","text":"PAGE CONSTRUCTIONThis page cover basic use flexdashboard package. package allows easily format R Markdown output dashboard panels pages. dashboard content can text, static images interactive graphics.Advantages flexdashboard:little User Interface (UI) non-standard R coding requiredRequires minimal -front knowledge - hour practice can likely create dashboardThe outputs can emailed HTML report - server requiredYou can combine flexdashboard shiny, ggplotly, htmlwidgets add interactivity static report dashboardDisadvantages flexdashboard:Interactivity can constrainedLess customization less possible using Shiny directlyVery comprehensive tutorials using flexdashboard informed page can found Resources section. describe core features give example building dashboard explore outbreak, using case linelist data.","code":""},{"path":"dashboards-with-r-markdown.html","id":"preparation-1","chapter":"2 Dashboards with R Markdown","heading":"2.1 Preparation","text":"","code":""},{"path":"dashboards-with-r-markdown.html","id":"load-packages","chapter":"2 Dashboards with R Markdown","heading":"Load packages","text":"handbook emphasize p_load() pacman, installs package necessary loads use. can also load packages library() base R. See page [R basics] information R packages.","code":"\npacman::p_load(\n  rio,            \n  here,\n  tidyverse,\n  flexdashboard,   # dashboard versions of R Markdown reports\n  shiny,           # interactive \n  plotly \n)"},{"path":"dashboards-with-r-markdown.html","id":"import-data","chapter":"2 Dashboards with R Markdown","heading":"Import data","text":"import dataset cases simulated Ebola epidemic. want download data follow step--step, see instructions [Download book data] page. dataset imported using import() function rio package. See page [Import export] various ways import data.first 50 rows linelist displayed .","code":"\n# import the linelist\nlinelist <- import(\"linelist_cleaned.xlsx\")"},{"path":"dashboards-with-r-markdown.html","id":"new-r-markdown","chapter":"2 Dashboards with R Markdown","heading":"2.2 New R Markdown","text":"installed package, create new R Markdown file clicking File > New file > R Markdown.window opens, select “Template” select “Flex Dashboard” template. prompted name document. page’s example, name R Markdown “outbreak_dashboard.Rmd”.","code":""},{"path":"dashboards-with-r-markdown.html","id":"the-script","chapter":"2 Dashboards with R Markdown","heading":"2.3 The script","text":"script R Markdown script, components organization:","code":""},{"path":"dashboards-with-r-markdown.html","id":"yaml","chapter":"2 Dashboards with R Markdown","heading":"YAML","text":"top, “YAML” header must begin three dashes --- must close three dashes ---. YAML parameters comes key:value pairs. placement colons YAML important - key:value pairs separated colons (equals signs!).YAML begin metadata document. order primary YAML parameters (indented) matter. example:can use R code YAML values putting like -line code (preceeded r within backticks) also within quotes (see Date).required YAML parameter output:, specifies type file produced (e.g. html_document, pdf_document, word_document, powerpoint_presentation). flexdashboard parameter value bit confusing - must set output:flexdashboard::flex_dashboard. single double colons. often followed additional colon indented sub-parameters.shown , indentations (2 spaces) used sub-parameters. case, forget put additional colon primary, like key:value:.appropriate, logical values given lowercase (true, false, null). colon part value (e.g. title) put value quotes. See examples sections .","code":"title: \"My document\"\r\nauthor: \"Me\"\r\ndate: \"2021-04-18\"title: \"My dashboard\"\r\nauthor: \"Me\"\r\ndate: \"2021-04-18\"\r\noutput:\r\n  flexdashboard::flex_dashboard:\r\n    orientation: rows\r\n    vertical_layout: scroll"},{"path":"dashboards-with-r-markdown.html","id":"narrative-text","chapter":"2 Dashboards with R Markdown","heading":"Narrative text","text":"Outside R code “chunk”, can write narrative text described page R Markdown reports. can italicize text surrounding one asterisk (*), bold surrounding two asterisks (**). Recall bullets numbering schemes sensitive newlines, indentation, finishing line two spaces.can also insert -line R code text described R Markdown reports page, surrounding code backticks starting command r (see example scripts ).","code":""},{"path":"dashboards-with-r-markdown.html","id":"headings","chapter":"2 Dashboards with R Markdown","heading":"Headings","text":"Different heading levels established different numbers hash symbols, described R Markdown reports page. One hash symbol primary heading (flexdashboard represents “page” dashboard). Two hash symbols second-level heading, reflect column row depending orientation: parameter (see details ). Third- fourth-level headings can made successively hash symbols.","code":"# First-level heading (page)\r\n\r\n## Second level heading (row or column)  \r\n\r\n### Third-level heading (plot, chart, etc.)"},{"path":"dashboards-with-r-markdown.html","id":"code-chunks-1","chapter":"2 Dashboards with R Markdown","heading":"Code chunks","text":"“Chunks” R code work just like R scripts. created three back-ticks curly brackets lowercase r within. chunk closed three backticks. See examples , page R Markdown reports information.","code":""},{"path":"dashboards-with-r-markdown.html","id":"attributes","chapter":"2 Dashboards with R Markdown","heading":"2.4 Attributes","text":"normal R markdown, can specify attributes apply parts dashboard including specifications curly brackets { } heading. example, typical HTML R Markdown report might organize content tabs ## heading {.tabset}.Attributes specific flexdashboard include:{data-width = } {data-height = } set relative size charts, columns, rows laid dimension (horizontal vertical). Absolute sizes adjusted best fill space display device thanks flexbox engine.\r\nHeight charts also depends whether set YAML parameter vertical_layout: fill vertical_layout: scroll. set scroll, height reflect traditional fig.height = option R code chunk.\r\nSee complete size documentation flexdashboard site\r\nHeight charts also depends whether set YAML parameter vertical_layout: fill vertical_layout: scroll. set scroll, height reflect traditional fig.height = option R code chunk.See complete size documentation flexdashboard site{data-orientation=} Set either rows columns. dashboard multiple pages, add attribute page indicate orientation.{.hidden} Use exclude specific page navigation bar{data-navbar=} Use page-level heading nest within navigation bar drop-menu. Provide name (quotes) drop-menu. See example .","code":""},{"path":"dashboards-with-r-markdown.html","id":"layout","chapter":"2 Dashboards with R Markdown","heading":"2.5 Layout","text":"Adjust layout dashboard following ways:Add pages, columns/rows, charts R Markdown headings (e.g. #, ##, ###)Adjust YAML parameter orientation: either rows columnsSpecify whether layout fills browser allows scrollingAdd tabs particular section heading","code":""},{"path":"dashboards-with-r-markdown.html","id":"pages","chapter":"2 Dashboards with R Markdown","heading":"Pages","text":"First-level headings (#) R Markdown represent “pages” dashboard. default pages appear navigation bar along top dashboard.can group pages “menu” within navigaton bar adding attribute {data-navmenu=} page heading. careful - include spaces around equals sign otherwise work!can also transfer navigation bar “sidebar” left side dashboard.","code":"---\r\ntitle: \"Outbreak dashboard\"\r\ndate: \"2021-04-18\"\r\noutput: \r\n  flexdashboard::flex_dashboard\r\n---\r\n\r\n# Outbreak dashboard\r\n\r\nThis dashboard is produced for the leadership of Tenaya County.\r\nIt aims to advise them on the status of the COVID-19 pandemic. \r\n\r\n## Epidemic Curve\r\n\r\n# Overview {.sidebar}\r\n\r\nThis is a sidebar that can be viewed from all pages.  \r\n\r\nYou could just have text here. \r\n\r\nOr if using **shiny** within **flexdashboard**, you might put your input controls here (e.g. via `selectInput()` or `sliderInput()`).  \r\n\r\n\r\n# Health indicators {data-navmenu=\"Indicators\"} \r\n\r\n\r\n# Economic indicators {data-navmenu=\"Indicators\"}  \r\n\r\n\r\n# Appleville {data-navmenu=\"Towns\"}\r\n\r\n\r\n# Orangetown {data-navmenu=\"Towns\"}\r\n\r\n\r\n# New Kiwi {data-navmenu=\"Towns\"}"},{"path":"dashboards-with-r-markdown.html","id":"orientation","chapter":"2 Dashboards with R Markdown","heading":"Orientation","text":"Set orientation: yaml parameter indicate R Markdown headings interpreted - either orientation: columns orientation: rows.Second-level headings (##) interpreted new columns rows based orientation setting.","code":""},{"path":"dashboards-with-r-markdown.html","id":"column-orientation","chapter":"2 Dashboards with R Markdown","heading":"Column orientation","text":"set orientation: columns, second-level headers create new columns dashboard. dashboard :Code chunks beginning load packages data - header appear dashboardThree columns:\r\nfirst named “Intro text” panels. R Markdown narrative text including example dynamic text includes R code display \r\nfirst named “Intro text” panels. R Markdown narrative text including example dynamic text includes R code display noBelow output","code":""},{"path":"dashboards-with-r-markdown.html","id":"interactive","chapter":"2 Dashboards with R Markdown","heading":"2.6 Interactive","text":"","code":""},{"path":"dashboards-with-r-markdown.html","id":"add-plotly","chapter":"2 Dashboards with R Markdown","heading":"Add plotly","text":"","code":""},{"path":"dashboards-with-r-markdown.html","id":"add-shiny","chapter":"2 Dashboards with R Markdown","heading":"Add shiny","text":"htmlwidgets\r\nshiny embedded\r\nvisNetwork","code":""},{"path":"dashboards-with-r-markdown.html","id":"resources-1","chapter":"2 Dashboards with R Markdown","heading":"2.7 Resources","text":"Excellent tutorials informed page can found . review , likely within hour can dashboard.https://bookdown.org/yihui/rmarkdown/dashboards.htmlhttps://rmarkdown.rstudio.com/flexdashboard/https://rmarkdown.rstudio.com/flexdashboard/using.htmlhttps://rmarkdown.rstudio.com/flexdashboard/examples.html","code":""}]

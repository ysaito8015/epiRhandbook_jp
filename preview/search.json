[{"path":"index.html","id":"welcome","chapter":"Welcome","heading":"Welcome","text":"","code":""},{"path":"index.html","id":"about-this-handbook","chapter":"Welcome","heading":"About this handbook","text":"free open-access R reference guide intended applied epidemiologists.book strives :Serve quick reference guide - textbookAddress common epidemiological problems via task-centered examplesBe accessible settings limited technical support low internet-connectivity (downloadable version)Contain clear simple language, step--step instructions many commentsBe living document, growing adapting new best practicesWhat gaps book address?Many epidemiologists formal training R data science, transitioning R SAS, STATA, statistical software.R universe changes frequently - place best practice code catered toward common epidemiologist user.Epidemiologists often must read dozens online forum pages answers, epidemiology-oriented.epidemiologists work low internet-connectivity environments limited technical support.different R books?handbook written epidemiologists, epidemiologists. Examples taken lived experience local, national, academic, emergency settings. also offered download-able format bring settings unreliable internet. addition core R concepts tools, book covers:epidemic curvestransmission chains performing epidemic modelingage pyramidsage sex standardizationprobabilistic matching datasets name similarity, age, sex, etc.outbreak detection methodssurvey analysiscausal diagramssurvival analysisGIS basics - including catchment area calculationphylogenetic treesmissing data imputationroutinized reports Rmarkdown","code":""},{"path":"index.html","id":"how-to-read-this-handbook","chapter":"Welcome","heading":"How to read this handbook","text":"Search via search box Table ContentsClick “clipboard” “copy” icon copy codeSee “Resources” section page links trainingClick download offline versionIf use handbook suggestions, let us know SURVEY LINK!","code":""},{"path":"index.html","id":"edit-or-contribute","chapter":"Welcome","heading":"Edit or contribute","text":"suggestions want contribute content, please post issue github repository.","code":""},{"path":"index.html","id":"acknowledgements","chapter":"Welcome","heading":"Acknowledgements","text":"","code":""},{"path":"index.html","id":"contributors","chapter":"Welcome","heading":"Contributors","text":"handbook collaborative team production; conceived, written, edited epidemiologists public health practitioners around world. team members:Editor--Chief:Editorial core team: …(list)…Authors: …(list)…Reviewers: …(list)…Advisers …(list)…","code":""},{"path":"index.html","id":"funding-and-programmatic-support","chapter":"Welcome","heading":"Funding and programmatic support","text":"Training Programs Epidemiology Public Health Interventions Network (TEPHINET)EPIET Alumni Network (EAN)","code":""},{"path":"index.html","id":"data-sources","chapter":"Welcome","heading":"Data sources","text":"linelist used much handbook adapted simulated Ebola outbreak linelist outbreaks package","code":""},{"path":"index.html","id":"inspiration","chapter":"Welcome","heading":"Inspiration","text":"“R4Epis” project (collaboration MSF RECON)R Epidemics Consortium (RECON)R Data Science book (R4DS)bookdown: Authoring Books Technical Documents R Markdown\r\nspecific tutorials vignettes credited relevant pages","code":""},{"path":"index.html","id":"image-credits","chapter":"Welcome","heading":"Image credits","text":"Logo: CDC Public Health Image library, R Graph Gallery2013 Yemen looking mosquito breeding sitesEbola virusSurvey RajasthanNetwork","code":""},{"path":"index.html","id":"license-and-terms-of-use","chapter":"Welcome","heading":"License and Terms of Use","text":"Creative Commons license TBD…","code":""},{"path":"gis-basics.html","id":"gis-basics","chapter":"1 GIS basics","heading":"1 GIS basics","text":"","code":""},{"path":"gis-basics.html","id":"overview","chapter":"1 GIS basics","heading":"1.1 Overview","text":"Spatial aspects data can provide lot insights situation outbreak answer questions :current disease hotspots?hotspots changed time?access health facility? improvements needed?section, explore basic spatial data visualization methods using tmap ggplot2 packages.\r\nalso walk basic spatial data management querying methods sf package.Choropleth mapDensity heatmapHealth facility catchment area","code":""},{"path":"gis-basics.html","id":"preparation","chapter":"1 GIS basics","heading":"1.2 Preparation","text":"Load packages\r\nFirst, load packages required analysis:Sample case dataSierra Leone: Admin boundary shapefiles\r\nData downloaded HDX:\r\nhttps://data.humdata.org/dataset/sierra-leone--ad-min-level-boundariesSierra Leone: Population ADM3\r\nData downloaded HDX:\r\nhttps://data.humdata.org/dataset/sierra-leone-populationSierra Leone: Health facility data OpenStreetMap\r\nData downloaded HDX:\r\nhttps://data.humdata.org/dataset/hotosm_sierra_leone_health_facilities","code":"\npacman::p_load(rio,       # to import data\n               here,      # to locate files\n               tidyverse, # to clean, handle, and plot the data (includes ggplot2 package)\n               sf,  # to manage spatial data using a Simple Feature format\n               tmap,# to produce simple maps, works for both interactive and static maps\n               janitor, # to clean column names\n               OpenStreetMap # to add OSM basemap in ggplot map\n               )   \n# import aggregated case counts of disease X\nlinelist <- rio::import(here::here(\"data\", \"linelist_cleaned.rds\"))  \nlinelist <- linelist[sample(nrow(linelist), 1000),]\n\n# Create sf object\nlinelist_sf <- \n     linelist %>%\n     st_as_sf(coords = c(\"lon\", \"lat\"), crs = 4326)\n# ADM3 level\nsle_adm3 <- \n  sf::read_sf(here::here(\"data/shp\", \"sle_adm3.shp\")) %>% janitor::clean_names() %>%\n  filter(admin2name %in% c(\"Western Area Urban\", \"Western Area Rural\"))\n# Population by ADM3\nsle_adm3_pop <- \n     read.csv(here::here(\"data/population\", \"sle_admpop_adm3_2020.csv\")) %>% janitor::clean_names()\n# OSM health facility shapefile\nsle_hf <- \n        sf::read_sf(here::here(\"data/shp\", \"sle_hf.shp\")) %>%\n        janitor::clean_names() %>%\n        filter(amenity %in% c(\"hospital\", \"clinic\", \"doctors\"))"},{"path":"gis-basics.html","id":"plotting-coordinates","chapter":"1 GIS basics","heading":"1.3 Plotting coordinates","text":"easiest way plot XY coordinates (points) draw map directly sf object created preparation section.tmap offers simple mapping capabilities static (plot mode) interactive (view mode) just lines codes.blog provides good comparison among different mapping options R.\r\nhttps://rstudio-pubs-static.s3.amazonaws.com/324400_69a673183ba449e9af4011b1eeb456b9.html","code":"\ntmap_mode(\"plot\") # or \"plot\"## tmap mode set to plotting\n#tm_shape(sle_adm3, bbox = st_bbox(linelist_sf)) +\ntm_shape(sle_adm3, bbox = c(-13.3,8.43, -13.2,8.5)) +\n  tm_polygons(col = \"#F7F7F7\") +\n  tm_borders(col = \"#000000\", lwd = 2) +\n  tm_text(\"admin3name\") +\ntm_shape(linelist_sf) + tm_dots(size=0.08, col='blue') ## Warning: One tm layer group has duplicated layer types, which are omitted. To draw multiple layers of the same type, use multiple\r\n## layer groups (i.e. specify tm_shape prior to each of them)."},{"path":"gis-basics.html","id":"polygons-and-shapefiles","chapter":"1 GIS basics","heading":"1.4 polygons and shapefiles","text":"Choropleth maps can useful visualize data pre-defined area usually administrative unit health area outbreak response able target resources specific area high incidence rates example.current linelist data contain information administrative units.\r\nAlthough ideal store information initial data collection phase, can also assign administrative units individual cases based spatial relationships (.e. point intersects polygon).sf package offers various methods spatial joins.\r\nSee documentation st_join method spatial join types :\r\nhttps://r-spatial.github.io/sf/reference/geos_binary_pred.htmlSpatial assign administrative units cases\r\nFirst spatially intersect case locations (points) ADM3 boundaries (polygons)Case counts ADM3Choropleth mapping\r\nNow administrative unit names assigned cases, can start mapping case counts area (choropleth maps).Since also population data ADM3, can add information case_adm3 table created previously.Join table ADM3 polygons mappingMapping results","code":"\nlinelist_adm <- \n     linelist_sf %>%\n     sf::st_join(sle_adm3,   join = st_intersects) %>%\n     select(names(linelist_sf), admin3name, admin3pcod)## although coordinates are longitude/latitude, st_intersects assumes that they are planar\r\n## although coordinates are longitude/latitude, st_intersects assumes that they are planar\n# Now you will see the ADM3 names attached to each case\nlinelist_adm %>% select(case_id, admin3name)## Simple feature collection with 1000 features and 2 fields\r\n## geometry type:  POINT\r\n## dimension:      XY\r\n## bbox:           xmin: -13.27117 ymin: 8.448387 xmax: -13.20684 ymax: 8.490944\r\n## geographic CRS: WGS 84\r\n## First 10 features:\r\n##      case_id     admin3name                   geometry\r\n## 3110  504fe1 Mountain Rural POINT (-13.21117 8.459621)\r\n## 4817  517931       West III POINT (-13.26132 8.480238)\r\n## 3915  6e8df3 Mountain Rural POINT (-13.24032 8.451293)\r\n## 4812  d9e72d      Central I POINT (-13.23232 8.482295)\r\n## 486   1f7a60        West II POINT (-13.23393 8.469933)\r\n## 1044  427fb1        East II POINT (-13.22091 8.484802)\r\n## 192   7b6887       West III POINT (-13.25785 8.456992)\r\n## 3745  875c20       West III POINT (-13.25275 8.458206)\r\n## 3971  c18762      Central I POINT (-13.22801 8.486654)\r\n## 3616  307db6 Mountain Rural POINT (-13.21799 8.461055)\ncase_adm3 <-\n     linelist_adm %>% as_tibble() %>%\n     #filter(!is.na(admin3pcod)) %>%\n     group_by(admin3pcod, admin3name) %>%\n     summarise(cases = n()) %>%\n     arrange(desc(cases))## `summarise()` has grouped output by 'admin3pcod'. You can override using the `.groups` argument.\ncase_adm3## # A tibble: 10 x 3\r\n## # Groups:   admin3pcod [10]\r\n##    admin3pcod admin3name     cases\r\n##    <chr>      <chr>          <int>\r\n##  1 SL040102   Mountain Rural   291\r\n##  2 SL040208   West III         219\r\n##  3 SL040207   West II          168\r\n##  4 SL040204   East II          122\r\n##  5 SL040203   East I            64\r\n##  6 SL040201   Central I         55\r\n##  7 SL040206   West I            39\r\n##  8 SL040202   Central II        23\r\n##  9 SL040205   East III          16\r\n## 10 <NA>       <NA>               3\n# Add population data and calculate cases per 10K population\ncase_adm3 <-\n     case_adm3 %>%\n     left_join(sle_adm3_pop, by=c(\"admin3pcod\"=\"adm3_pcode\")) %>%\n     select(names(case_adm3), total) %>%\n     mutate(case_10kpop = round(cases/total * 10000, 3))\n\ncase_adm3## # A tibble: 10 x 5\r\n## # Groups:   admin3pcod [10]\r\n##    admin3pcod admin3name     cases  total case_10kpop\r\n##    <chr>      <chr>          <int>  <int>       <dbl>\r\n##  1 SL040102   Mountain Rural   291  33993       85.6 \r\n##  2 SL040208   West III         219 210252       10.4 \r\n##  3 SL040207   West II          168 145109       11.6 \r\n##  4 SL040204   East II          122  99821       12.2 \r\n##  5 SL040203   East I            64  68284        9.37\r\n##  6 SL040201   Central I         55  69683        7.89\r\n##  7 SL040206   West I            39  60186        6.48\r\n##  8 SL040202   Central II        23  23874        9.63\r\n##  9 SL040205   East III          16 500134        0.32\r\n## 10 <NA>       <NA>               3     NA       NA\n# Add population data and calculate cases per 10K population\ncase_adm3_sf <-\n        case_adm3 %>%\n        left_join(sle_adm3, by=\"admin3pcod\") %>%\n        select(objectid, admin3pcod, admin3name=admin3name.x, admin2name, admin1name,\n               cases, total, case_10kpop, geometry) %>%\n        st_as_sf()\n# Number of cases\ntmap_mode(\"plot\")## tmap mode set to plotting\ntm_shape(case_adm3_sf) + \n        tm_polygons(\"cases\") +\n        tm_text(\"admin3name\")## Warning: The shape case_adm3_sf contains empty units.\n# Cases per 10K population\ntmap_mode(\"plot\")## tmap mode set to plotting\ntm_shape(case_adm3_sf) + \n        tm_polygons(\"case_10kpop\",\n                    breaks=c(0, 10, 50, 100),\n                    palette = \"Purples\"\n                    ) +\n        tm_text(\"admin3name\")## Warning: The shape case_adm3_sf contains empty units."},{"path":"gis-basics.html","id":"time-series-heatmap","chapter":"1 GIS basics","heading":"1.5 Time series heatmap","text":"can also look combination time space facetting heatmaps.Set parameters basemap using OpenStreetMap package.Heatmap month onset","code":"\n# Fit basemap by range of lat/long coordinates. Choose tile type\nmap <- openmap(c(max(linelist$lat, na.rm=T), max(linelist$lon, na.rm=T)),  # limits of tile\n               c(min(linelist$lat, na.rm=T), min(linelist$lon, na.rm=T)),\n               zoom = NULL,\n               type = c(\"osm\", \"stamen-toner\", \"stamen-terrain\",\"stamen-watercolor\", \"esri\",\"esri-topo\")[1],\n               mergeTiles = TRUE)## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded ellps WGS 84 in CRS\r\n## definition: +proj=merc +a=6378137 +b=6378137 +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs\r\n## +type=crs## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded datum World Geodetic System\r\n## 1984 in CRS definition## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded ellps WGS 84 in CRS\r\n## definition: +proj=merc +a=6378137 +b=6378137 +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs\r\n## +type=crs## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded datum World Geodetic System\r\n## 1984 in CRS definition## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded ellps WGS 84 in CRS\r\n## definition: +proj=merc +a=6378137 +b=6378137 +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs\r\n## +type=crs## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded datum World Geodetic System\r\n## 1984 in CRS definition## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded ellps WGS 84 in CRS\r\n## definition: +proj=merc +a=6378137 +b=6378137 +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs\r\n## +type=crs## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded datum World Geodetic System\r\n## 1984 in CRS definition## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded ellps WGS 84 in CRS\r\n## definition: +proj=merc +a=6378137 +b=6378137 +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs\r\n## +type=crs## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded datum World Geodetic System\r\n## 1984 in CRS definition## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded ellps WGS 84 in CRS\r\n## definition: +proj=merc +a=6378137 +b=6378137 +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs\r\n## +type=crs## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded datum World Geodetic System\r\n## 1984 in CRS definition## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded ellps WGS 84 in CRS\r\n## definition: +proj=merc +a=6378137 +b=6378137 +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs\r\n## +type=crs## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded datum World Geodetic System\r\n## 1984 in CRS definition## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded ellps WGS 84 in CRS\r\n## definition: +proj=merc +a=6378137 +b=6378137 +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs\r\n## +type=crs## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded datum World Geodetic System\r\n## 1984 in CRS definition## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded ellps WGS 84 in CRS\r\n## definition: +proj=merc +a=6378137 +b=6378137 +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs\r\n## +type=crs## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded datum World Geodetic System\r\n## 1984 in CRS definition## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded ellps WGS 84 in CRS\r\n## definition: +proj=merc +a=6378137 +b=6378137 +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs\r\n## +type=crs## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded datum World Geodetic System\r\n## 1984 in CRS definition## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded ellps WGS 84 in CRS\r\n## definition: +proj=merc +a=6378137 +b=6378137 +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +k=1 +units=m +nadgrids=@null +wktext +no_defs\r\n## +type=crs## Warning in showSRID(uprojargs, format = \"PROJ\", multiline = \"NO\", prefer_proj = prefer_proj): Discarded datum World Geodetic System\r\n## 1984 in CRS definition\n# Projection WGS84\nmap.latlon <- openproj(map, projection = \"+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs\")\n# Extract month of onset\nlinelist$date_onset_ym <- format(linelist$date_onset, \"%Y-%m\")\n \n# Simply facet above map by month of onset\n# Plot map. Must be autoplotted to work with ggplot\nOpenStreetMap::autoplot.OpenStreetMap(map.latlon)+\n       # Density tiles  \n       ggplot2::stat_density_2d(aes(x = lon,\n                                    y = lat,\n                                    fill = ..level..,\n                                    alpha=..level..),\n                              bins = 10,\n                                geom = \"polygon\",\n                                contour_var = \"count\",\n                                data = linelist %>% filter(date_onset>='2014-08-01' & date_onset<='2015-01-31'),\n                                show.legend = F) +\n       #scale_fill_gradient(low = \"black\", high = \"red\")+\n       labs(x = \"Longitude\",\n            y = \"Latitude\",\n            title = \"Distribution of simulated cases by month of onset\") +\n       facet_wrap(~ date_onset_ym, ncol = 3)"},{"path":"gis-basics.html","id":"health-facility-catchment-area","chapter":"1 GIS basics","heading":"1.6 Health facility catchment area","text":"might useful know health facilities located relation disease hot spots.Finding nearest health facility\r\ncan use st_nearest_feature method sf package assign cloest health facility individual cases.can see “Den Clinic” closest health facility ~30% cases.Visualizing results mapCases within 30 mins Walking distance closest health facilityWe can also explore many cases located within 2.5km (~30 mins) walking distance closest health facility.Note:\r\naccurate distance calculations, better re-project sf object respective local map projection system UTM (Earth projected onto planar surface).\r\nexample, simplicity stick World Geodetic System (WGS84) Geograhpic coordinate system (Earth represented spherical / round surface, therefore units decimal degrees). use general conversion : 1 decimal degree = ~111km.See information map projections coordinate systems:\r\nhttps://www.esri.com/arcgis-blog/products/arcgis-pro/mapping/gcs_vs_pcs/First create circular buffer radius ~2.5km aroudn health facilityIntersect casesCount results202 1000 cases (20.2%, shown red dots map ) live 30 mins away nearest health facility)Visualize results","code":"\n# Closet health facility to each case\nlinelist_sf_hf <-\n        linelist_sf %>%\n        st_join(sle_hf,   join = st_nearest_feature) %>%\n        select(case_id, osm_id, name, amenity)## although coordinates are longitude/latitude, st_nearest_points assumes that they are planar\n# Group cases by health facility\nhf_catchment <-\n        linelist_sf_hf %>% as.data.frame() %>%\n        group_by(name) %>%\n        summarise(case_n = n()) %>%\n        arrange(desc(case_n))\n\nhf_catchment## # A tibble: 8 x 2\r\n##   name                                  case_n\r\n##   <chr>                                  <int>\r\n## 1 Den Clinic                               344\r\n## 2 Shriners Hospitals for Children          336\r\n## 3 GINER HALL COMMUNITY HOSPITAL            184\r\n## 4 panasonic                                 54\r\n## 5 Princess Christian Maternity Hospital     38\r\n## 6 ARAB EGYPT CLINIC                         19\r\n## 7 <NA>                                      14\r\n## 8 MABELL HEALTH CENTER                      11\ntmap_mode(\"view\")## tmap mode set to interactive viewing\ntm_shape(linelist_sf_hf) + tm_dots(size=0.08, col='name') +\n        tm_shape(sle_hf) + tm_dots(size=0.3, col='red') + tm_text(\"name\") +\ntm_view(set.view = c(-13.2284,8.4699, 13), set.zoom.limits = c(13,14))\nsle_hf_2k <-\n        sle_hf %>%\n        st_buffer(dist=0.02) # approximately 2.5km ## Warning in st_buffer.sfc(st_geometry(x), dist, nQuadSegs, endCapStyle = endCapStyle, : st_buffer does not correctly buffer\r\n## longitude/latitude data## dist is assumed to be in decimal degrees (arc_degrees).\n# Intersect the cases with the buffers\nlinelist_sf_hf_2k <-\n        linelist_sf_hf %>%\n        st_join(sle_hf_2k, join = st_intersects, left = TRUE) %>%\n        filter(osm_id.x==osm_id.y | is.na(osm_id.y)) %>%\n        select(case_id, osm_id.x, name.x, amenity.x, osm_id.y)## although coordinates are longitude/latitude, st_intersects assumes that they are planar\r\n## although coordinates are longitude/latitude, st_intersects assumes that they are planar\nnrow(linelist_sf_hf_2k)## [1] 1000\nnrow(linelist_sf_hf_2k[is.na(linelist_sf_hf_2k$osm_id.y),])## [1] 206\ntmap_mode(\"view\")## tmap mode set to interactive viewing\ntm_shape(linelist_sf_hf) + tm_dots(size=0.08, col='name') +\n        tm_shape(sle_hf_2k) + tm_borders(col = \"red\", lwd = 2) +\n        tm_shape(linelist_sf_hf_2k[is.na(linelist_sf_hf_2k$osm_id.y),]) +tm_dots(size=0.1, col='red') +\ntm_view(set.view = c(-13.2284,8.4699, 13), set.zoom.limits = c(13,14))"},{"path":"gis-basics.html","id":"resources","chapter":"1 GIS basics","heading":"1.7 Resources","text":"R Simple Features sf package\r\nhttps://cran.r-project.org/web/packages/sf/vignettes/sf1.htmlR Simple Features sf package\r\nhttps://cran.r-project.org/web/packages/sf/vignettes/sf1.htmlR tmap package\r\nhttps://cran.r-project.org/web/packages/tmap/vignettes/tmap-getstarted.htmlR tmap package\r\nhttps://cran.r-project.org/web/packages/tmap/vignettes/tmap-getstarted.htmlggmap: Spatial Visualization ggplot2\r\nhttps://journal.r-project.org/archive/2013-1/kahle-wickham.pdfggmap: Spatial Visualization ggplot2\r\nhttps://journal.r-project.org/archive/2013-1/kahle-wickham.pdf","code":""}]
